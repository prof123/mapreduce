cscope 15 $HOME/acads/Distributed/mrmerge/mrm               0000384712
	@main.c

12 
	~"m≠Redu˚.h
"

14 
m≠func
(** 
foo
, 
KV_t
 *
kv
);

15 
ªdu˚func
();

17 
	$maö
(
¨gc
, **
¨g
) {

18 **
‚ames
;

19 
HT_buckë
* 
	tHTABLE
;

20 
nfûes
, 
Ωro˚s£s
;

22 
Ωro˚s£s
 = 
	`©oi
(
¨g
[1]);

24 
‚ames
 = &
¨g
[2];

25 
	`m≠Redu˚
(
nfûes
, 
‚ames
, 10, 
Ωro˚s£s
, 
m≠func
, 
ªdu˚func
);

32 
	}
}

36 
	$m≠func
(** 
foo
, 
KV_t
 *
kv
) {

37 * 
c
=(*)*
foo
;

38 
	`•rötf
(
kv
->
key
, "%c", *
c
);

39 
	`•rötf
(
kv
->
vÆue
, "1");

40 (*
foo
)++;

41 
	}
}

45 
	$ªdu˚func
(* 
öout
, * 
ö
) {

46 
i
=
	`©oi
(
ö
);

47 
j
=
	`©oi
(
öout
);

48 
	`•rötf
(
öout
, "%d", (
i
+
j
));

49 
	}
}

	@mapReduce.c

1 
	~<mpi.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<uni°d.h
>

5 
	~<°rög.h
>

6 
	~<dúít.h
>

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<limôs.h
>

11 
	~"m≠Redu˚.h
"

51 
	$m≠Redu˚
(
fûes
, **
‚ames
, 
≈ro˚s£s
, 
Ωro˚s£s
, *
m≠func
, *
ªdu˚func
)

53 
numèsks
, 
ønk
, 
sour˚
=0, 
de°
, 
èg
=1, 
i
, 
amou¡
;

54 
buf
[
LINE_MAX
], **
buckë‚ames
, 
buckë‚ame
[LINE_MAX];

55 
MPI_Fûe
 
fûe
, *
buckëfûes
;

56 
MPI_Off£t
 
size
, 
°¨çoöt
;

58 
	`bzîo
(
buf
, 
LINE_MAX
);

60 
MPI_Sètus
 
°©
;

62 
	`MPI_Inô
(
NULL
,NULL);

63 
	`MPI_Comm_ønk
(
MPI_COMM_WORLD
, &
ønk
);

64 
	`MPI_Comm_size
(
MPI_COMM_WORLD
, &
numèsks
);

66 if(
	`MPI_Fûe_›í
(
MPI_COMM_WORLD
, 
‚ames
[0], 
MPI_MODE_RDONLY
 | 
MPI_MODE_UNIQUE_OPEN
, 
MPI_INFO_NULL
, &
fûe
) < 0) {

67 
	`≥º‹
("File open");

68 
	`exô
(0);

71 
buckë‚ames
 = 
	`mÆloc
(
Ωro˚s£s
 * (*));

73 
i
 = 0; i < 
Ωro˚s£s
; i++) {

74 
	`•rötf
(
buckë‚ame
, "fûe%d", 
i
);

75 
buckë‚ames
[
i
] = 
	`mÆloc
(
	`°æí
(
buckë‚ame
)+1);

76 
	`•rötf
(
buckë‚ames
[
i
], "%s", 
buckë‚ame
);

79 
	`MPI_Fûe_gë_size
(
fûe
, &
size
);

80 
°¨çoöt
 = 
size
 / 
numèsks
 * 
ønk
;

82 if(
ønk
 !
numèsks
 - 1)

83 
amou¡
 = 
size
 / 
numèsks
 * (
ønk
 + 1Ë- 
°¨çoöt
;

85 
amou¡
 = 
size
 - 
°¨çoöt
;

87 
	`MPI_Fûe_ªad_©
(
fûe
, 
°¨çoöt
, 
buf
, 
amou¡
, 
MPI_CHAR
, &
°©
);

89 
	`MAP
 (
buf
, 
m≠func
, 
ªdu˚func
, 
Ωro˚s£s
, 
buckë‚ames
, 
°©
, 
ønk
, 
numèsks
);

96 
	`¥ötf
("The End\n");

97 
	`MPI_B¨rõr
–
MPI_COMM_WORLD
 );

98 
	`¥ötf
("Closing\n");

100 
	`MPI_Fûe_˛o£
(&
fûe
);

101 
	`MPI_FöÆize
();

102 
	}
}

104 
MAP
 (* 
öput_•lô
,(*
m≠func
)(**, 
KV_t
*Ë, (*
ªdu˚func
)(*, *), 
R
, **
buckë‚ames
, 
MPI_Sètus
 
°©
, 
ønk
, 
numèsks
)

106 
HTABLE
 
hèbÀ
[
R
];

107 
i
, 
r
, 
a
;

108 
buf
[
LINE_MAX
];

110 
i
 = 0; i < 
R
; i++)

111 
hèbÀ
[
i
] = 
NULL
;

113 
KV_t
 *
ªtkeyv∑ú
 = 
	`mÆloc
((KV_t));

114 
ªtkeyv∑ú
->
key
 = 
	`mÆloc
(()*
KEYSIZE
);

115 
ªtkeyv∑ú
->
vÆue
 = 
	`mÆloc
(()*
KEYSIZE
);

117 * 
öput
=
öput_•lô
;

118 (*
m≠func
)(&
öput
, 
ªtkeyv∑ú
);

120 
	`HASH
(
ªtkeyv∑ú
,
hèbÀ
, 
R
);

136 
	`MPI_B¨rõr
–
MPI_COMM_WORLD
 );

138 
i
 = 0; i < 
R
; i++)

139 if(
ønk
 =
i
)

140 
	`ªdu˚
(
fûes
[
i
], 
°©
, 
ªdu˚func
);

142 
	}
}

144 
ªdu˚
(
MPI_Fûe
 
fûe
, 
MPI_Sètus
 
°©us
, (*
ªdu˚func
)(*, *)) {

145 
i
;

146 
ªdu˚r_t
* 
fú°
, *
ãmp
;

147 
	`ötoRedu˚Ty≥
(
fûe
, &
fú°
, 
°©us
);

150 
	`¥ötf
("AllÅhe keys inÅheÉnd:\n");

152 
ãmp
 = 
fú°
;

153 
ãmp
 !
NULL
) {

155 
	`¥ötf
("°‹ed key:%s, size:%d\n", 
ãmp
->
key
,Åemp->
size
);

156 
i
 = 0; i < 
ãmp
->
size
; i++)

157 
	`¥ötf
("vÆue[%d]:%s\n", 
i
, 
ãmp
->
vÆs
[i]);

159 
ãmp
 =Åemp->
√xt
;

164 
ãmp
=
fú°
;

165 
ãmp
!=
NULL
) {

166 
i
=0;

167 * 
ªdu˚d_vÆ
 = 
ãmp
->
vÆs
[0];

169 
i
=0; i<(
ãmp
->
size
-1); i++) {

171 (*
ªdu˚func
)(
ªdu˚d_vÆ
, 
ãmp
->
vÆs
[
i
+1]);

174 
	`¥ötf
("KEY:%†, VALUE:%s\n",
ãmp
->
key
,
ªdu˚d_vÆ
);

176 
ãmp
Òemp->
√xt
;

180 
	}
}

224 
	$ötoRedu˚Ty≥
(
MPI_Fûe
 
fûe
, 
ªdu˚r_t
** 
fú°t
, 
MPI_Sètus
 
°©us
) {

225 
buf
[
LINE_MAX
], *
buÂå
, 
keybuf
[100], 
sizebuf
[100], **
vÆs
, 
vÆsbuf
[100][100], 
vÆbuf
[100];

226 
ªt
 = 0, 
r
, 
©now
 = 0, 
vÆsize
, 
vÆues
, 
ªadbyãs
, 
i
, 
a
;

227 
MPI_Off£t
 
°¨çoöt
 = 0, 
fsize
;

228 
ªdu˚r_t
 *
ãmp
 = 
NULL
, *
fú°
 = NULL, *
√xt
;

230 
	`bzîo
(
buf
, 
LINE_MAX
);

234 
	`MPI_Fûe_gë_size
(
fûe
, &
fsize
);

235 
	`MPI_Fûe_ªad_©
(
fûe
, 
°¨çoöt
, 
buf
, 
fsize
, 
MPI_CHAR
, &
°©us
);

237 
	`¥ötf
("¥ötög buf„r, sizê%d: ", 
fsize
);

238 
r
 = 0;Ñ < 
fsize
;Ñ++) {

239 if(
buf
[
r
] == '\0')

240 
	`¥ötf
("_");

242 
	`¥ötf
("%c", 
buf
[
r
]);

244 
	`¥ötf
("bufferÖrinted\n");

246 if(
	`°æí
(
buf
) == 0)

249 
buÂå
 = 
buf
;

251 if((
©now
+1Ë>
fsize
)

256 
	`bzîo
(
keybuf
, 100);

257 
	`mem˝y
(
keybuf
, 
buÂå
, 
	`°æí
(bufptr));

258 
©now
 +
	`°æí
(
keybuf
) +1;

259 
buÂå
 = &
buf
[
©now
];

261 
	`bzîo
(
sizebuf
, 100);

262 
	`mem˝y
(
sizebuf
, 
buÂå
, 
	`°æí
(bufptr));

263 
©now
 +
	`°æí
(
sizebuf
) +1;

264 
buÂå
 = &
buf
[
©now
];

266 
vÆsize
 = 
	`©oi
(
sizebuf
);

267 
vÆues
 = 0;

268 
ªadbyãs
 = 0;

270 
	`bzîo
(
vÆbuf
, 100);

271 
	`mem˝y
(
vÆbuf
, 
buÂå
, 
	`°æí
(bufptr));

272 
vÆues
++;

273 
	`°r˝y
(
vÆsbuf
[
vÆues
-1], 
vÆbuf
);

274 
ªadbyãs
 +
	`°æí
(
vÆbuf
)+1;

276 
©now
 +
	`°æí
(
vÆbuf
)+1;

277 
buÂå
 = &
buf
[
©now
];

279 if(
ªadbyãs
 =
vÆsize
)

292 
ãmp
 = 
fú°
;

295 if(
ãmp
 =
NULL
) {

296 
ãmp
 = 
	`mÆloc
((
ªdu˚r_t
));

297 
ãmp
->
√xt
 = 
NULL
;

298 
ãmp
->
size
 = 
vÆues
;

299 
ãmp
->
key
 = 
	`mÆloc
((
	`°æí
(
keybuf
)+1) * ());

300 
	`°r˝y
(
ãmp
->
key
, 
keybuf
);

302 
ãmp
->
vÆs
 = 
	`mÆloc
(
vÆues
 * (*));

303 
i
 = 0; i < 
vÆues
; i++) {

304 
ãmp
->
vÆs
[
i
] = 
	`mÆloc
((
	`°æí
(
vÆsbuf
[i])+1) * ());

305 
	`°r˝y
(
ãmp
->
vÆs
[
i
], 
vÆsbuf
[i]);

308 
fú°
 = 
ãmp
;

325 if(
	`°rcmp
(
ãmp
->
key
, 
keybuf
) == 0) {

326 **
c›y
 = 
ãmp
->
vÆs
;

327 
ãmp
->
vÆs
 = 
	`mÆloc
(—emp->
size
+
vÆues
) * (*));

328 
i
 = 0; i < 
ãmp
->
size
; i++) {

329 
ãmp
->
vÆs
[
i
] = 
	`mÆloc
((
	`°æí
(
c›y
[i])+1) * ());

330 
	`°r˝y
(
ãmp
->
vÆs
[
i
], 
c›y
[i]);

332 
a
 = 0;
i
 < (
ãmp
->
size
+
vÆues
);á++, i++) {

333 
ãmp
->
vÆs
[
i
] = 
	`mÆloc
((
	`°æí
(
vÆsbuf
[
a
])+1) * ());

334 
	`°r˝y
(
ãmp
->
vÆs
[
i
], 
vÆsbuf
[
a
]);

336 
i
 = 0; i < 
ãmp
->
size
; i++)

337 
	`‰ì
(
c›y
[
i
]);

338 
	`‰ì
(
c›y
);

340 
ãmp
->
size
 +
vÆues
;

350 if(
ãmp
->
√xt
 =
NULL
) {

351 
√xt
 = 
	`mÆloc
((
ªdu˚r_t
));

352 
√xt
->√xà
NULL
;

353 
√xt
->
size
 = 
vÆues
;

354 
√xt
->
key
 = 
	`mÆloc
((
	`°æí
(
keybuf
)+1) * ());

355 
	`°r˝y
(
√xt
->
key
, 
keybuf
);

357 
√xt
->
vÆs
 = 
	`mÆloc
(
vÆues
 * (*));

358 
i
 = 0; i < 
vÆues
; i++) {

359 
√xt
->
vÆs
[
i
] = 
	`mÆloc
((
	`°æí
(
vÆsbuf
[i])+1) * ());

360 
	`°r˝y
(
√xt
->
vÆs
[
i
], 
vÆsbuf
[i]);

363 
ãmp
->
√xt
 =Çext;

372 
ãmp
 =Åemp->
√xt
;

380 *
fú°t
 = 
fú°
;

383 
	}
}

444 
	$HASH
(
KV_t
 *
kv
, 
HTABLE
 
hèbÀ
[], 
R
)

447 
buckë_num
 = 
	`hashfun
(
kv
->
key
, 
R
);

449 *
to_add
 = 
kv
->
vÆue
;

453 
HT_buckë
 *
buck
 = 
hèbÀ
[
buckë_num
];

454 if(
buck
==
NULL
) {

459 
HT_buckë
* 
√w
 = (HT_buckë*Ë
	`mÆloc
((HT_bucket) );

460 
√w
->
vÆues
 = 
	`mÆloc
((Ë* 
LINE_MAX
);

461 
√w
->
key
 = 
	`mÆloc
((Ë* (
	`°æí
(
kv
->key)+1));

462 
	`°r˝y
(
√w
->
key
, 
kv
->key);

463 
	`•rötf
(
√w
->
vÆues
, "%s", 
to_add
);

464 
√w
->
size
 = 
	`°æí
(
to_add
) +1;

466 
√w
->
√xt_key
=
NULL
;

467 
hèbÀ
[
buckë_num
] = 
√w
;

472 
HT_buckë
 *
ãmp
=
buck
;

476 if(
	`°rcmp
(
ãmp
->
key
, 
kv
->key) == 0) {

478 
	`•rötf
(&(
ãmp
->
vÆues
[ãmp->
size
]), "%s", 
to_add
);

479 
ãmp
->
size
 +
	`°æí
(
to_add
)+1;

483 if(
ãmp
->
√xt_key
 !
NULL
)

484 
ãmp
 =Åemp->
√xt_key
;

487 
HT_buckë
* 
√w
=(HT_buckë*Ë
	`mÆloc
((HT_bucket) );

488 
√w
->
vÆues
 = 
	`mÆloc
((Ë* 
LINE_MAX
);

489 
√w
->
key
 = 
	`mÆloc
((Ë* (
	`°æí
(
kv
->key)+1));

490 
	`°r˝y
(
√w
->
key
, 
kv
->key);

491 
	`•rötf
(
√w
->
vÆues
, "%s", 
to_add
);

492 
√w
->
size
 = 
	`°æí
(
to_add
) +1;

494 
√w
->
√xt_key
=
NULL
;

495 
ãmp
->
√xt_key
=
√w
;

502 
	}
}

504 
	$hashfun
(* 
°r
,
R
)

506 
h
=0;

507 
g
;

508 * 
p
;

509 
p
=
°r
;*p!='\0';p++){

510 
h
=(h<<4)+*
p
;

511 if(
g
=
h
&0xf0000000) {

512 
h
=h^(
g
>>24);

513 
h
=h^
g
;

516  
h
%
R
;

517 
	}
}

	@mapReduce.h

1 
	~<mpi.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<uni°d.h
>

5 
	~<°rög.h
>

6 
	~<dúít.h
>

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<limôs.h
>

11 #i‚de‡
INT_H


12 
	#INT_H


	)

14 
	#KEYSIZE
 100

	)

16 * 
	tkeyy_t
;

17 * 
	tvÆ_t
;

22 
	sKV_∑ú
 {

23 
keyy_t
 
	mkey
;

24 
vÆ_t
 
	mvÆue
;

25 } 
	tKV_∑ú
;

31 
	sHT_buckë
 {

32 
keyy_t
 
	mkey
;

33 
size_t
 
	msize
;

34 
HT_buckë
* 
	m√xt_key
;

35 
vÆ_t
 
	mvÆues
;

38 
HT_buckë
* 
	tHTABLE
;

40 
	sªdu˚r_t
 {

41 
keyy_t
 
	mkey
;

42 
vÆ_t
* 
	mvÆs
;

43 
size_t
 
	msize
;

44 
ªdu˚r_t
* 
	m√xt
;

47 
	s›ti⁄s
 {

48 
	mnum_m≠_èsks
;

49 
	mnum_ªdu˚r_èsks
;

50 
	mtŸÆ_èsks
;

53 
	sudef_fun˘i⁄s
 {

54 * (*
	mm≠
) (*);

55 * (*
	mªdu˚
) (*);

56 * (*
	mmîge
) (*);

61 
°¨t_MR
 (
›ti⁄s
 
OPTIONS
, 
udef_fun˘i⁄s
 
udf
);

63 
MAP
 (
ønk
, 
›ti⁄s
 
OPTIONS
, 
udef_fun˘i⁄s
 
udf
);

65 
MAP
 (* 
öput_•lô
,(*
m≠func
)(**, 
KV_t
*), (*
ªdu˚func
)(*, *), 
R
, **
buckë‚ames
, 
MPI_Sètus
 
°©
, 
ønk
, 
numèsks
);

67 
	`ªdu˚
(
MPI_Fûe
 
fûe
, 
MPI_Sètus
 
°©us
, (*
ªdu˚func
)(*, *));

69 
	`ötoRedu˚Ty≥
(
MPI_Fûe
 
fûe
, 
ªdu˚r_t
** 
fú°
, 
MPI_Sètus
 
°©us
);

71 
	`u£rdefRedu˚
(* 
öout
, * 
ö
);

76 
	`ôﬂ
(
n
, 
s
[]);

78 
	`ªvî£
(
s
[]);

80 
	`HASH
(
KV_t
 *
kv
, 
HTABLE
 
hèbÀ
[], 
R
);

	@/usr/include/dirent.h

58 #i‚de‡
_DIRENT_H_


59 
	#_DIRENT_H_


	)

65 
	~<_ty≥s.h
>

66 
	~<sys/dúít.h
>

68 
	g_ãŒdú
;

72 
	m__dd_fd
;

73 
	m__dd_loc
;

74 
	m__dd_size
;

75 *
	m__dd_buf
;

76 
	m__dd_Àn
;

77 
	m__dd_£ek
;

78 
	m__dd_ªwöd
;

79 
	m__dd_Êags
;

80 
__d¨wö_±hªad_muãx_t
 
	m__dd_lock
;

81 
_ãŒdú
 *
	m__dd_td
;

82 } 
	tDIR
;

84 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

86 
	#DIRBLKSIZ
 1024

	)

88 
	#dúfd
(
dúp
Ë((dúp)->
__dd_fd
)

	)

91 
	#DTF_HIDEW
 0x0001

	)

92 
	#DTF_NODUP
 0x0002

	)

93 
	#DTF_REWIND
 0x0004

	)

94 
	#__DTF_READALL
 0x0008

	)

98 #i‚de‡
KERNEL


100 
	~<sys/cdefs.h
>

102 
	g__BEGIN_DECLS


103 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

104 
	$Æphas‹t
(c⁄° *, c⁄° *Ë
	`__DARWIN_INODE64
(
Æphas‹t
);

106 
	$˛o£dú
(
DIR
 *Ë
	`__DARWIN_ALIAS
(
˛o£dú
);

107 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

108 
	`gëdúíåõs
(, *, , *);

110 
DIR
 *
	$›ídú
(c⁄° *Ë
	`__DARWIN_ALIAS_I
(
›ídú
);

111 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

112 
DIR
 *
	$__›ídú2
(c⁄° *, Ë
	`__DARWIN_ALIAS_I
(
__›ídú2
);

114 
dúít
 *
	$ªaddú
(
DIR
 *Ë
	`__DARWIN_INODE64
(
ªaddú
);

115 
	$ªaddú_r
(
DIR
 *, 
dúít
 *, dúíà**Ë
	`__DARWIN_INODE64
(
ªaddú_r
);

116 
	$ªwöddú
(
DIR
 *Ë
	`__DARWIN_ALIAS_I
(
ªwöddú
);

117 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

118 
	`sˇndú
(c⁄° *, 
dúít
 ***,

119 (*)(
dúít
 *), (*)(c⁄° *, c⁄° *)Ë
	`__DARWIN_INODE64
(
sˇndú
);

121 
	$£ekdú
(
DIR
 *, Ë
	`__DARWIN_ALIAS_I
(
£ekdú
);

122 
	$ãŒdú
(
DIR
 *Ë
	`__DARWIN_ALIAS_I
(
ãŒdú
);

123 
__END_DECLS


	@/usr/include/errno.h

23 
	~<sys/î∫o.h
>

	@/usr/include/limits.h

60 #i‚de‡
_LIMITS_H_


61 
	#_LIMITS_H_


	)

63 
	~<sys/cdefs.h
>

64 
	~<machöe/limôs.h
>

65 
	~<sys/sy¶imôs.h
>

67 #i‡!
deföed
(
_ANSI_SOURCE
)

68 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

69 
	#_POSIX_AIO_MAX
 1

	)

70 
	#_POSIX_DELAYTIMER_MAX
 32

	)

71 
	#_POSIX_HOST_NAME_MAX
 255

	)

72 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

73 
	#_POSIX_MQ_OPEN_MAX
 8

	)

74 
	#_POSIX_MQ_PRIO_MAX
 32

	)

76 
	#_POSIX_ARG_MAX
 4096

	)

77 
	#_POSIX_CHILD_MAX
 25

	)

78 
	#_POSIX_LINK_MAX
 8

	)

79 
	#_POSIX_MAX_CANON
 255

	)

80 
	#_POSIX_MAX_INPUT
 255

	)

81 
	#_POSIX_NAME_MAX
 14

	)

82 
	#_POSIX_NGROUPS_MAX
 8

	)

83 
	#_POSIX_OPEN_MAX
 20

	)

84 
	#_POSIX_PATH_MAX
 256

	)

85 
	#_POSIX_PIPE_BUF
 512

	)

86 
	#_POSIX_SSIZE_MAX
 32767

	)

87 
	#_POSIX_STREAM_MAX
 8

	)

88 
	#_POSIX_TZNAME_MAX
 6

	)

90 
	#_POSIX_RE_DUP_MAX
 255

	)

91 
	#_POSIX_RTSIG_MAX
 8

	)

92 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

93 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

94 
	#_POSIX_SIGQUEUE_MAX
 32

	)

95 
	#_POSIX_SS_REPL_MAX
 4

	)

96 
	#_POSIX_SYMLINK_MAX
 255

	)

97 
	#_POSIX_SYMLOOP_MAX
 8

	)

98 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

99 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

100 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

101 
	#_POSIX_TIMER_MAX
 32

	)

102 
	#_POSIX_TRACE_EVENT_NAME_MAX
 30

	)

103 
	#_POSIX_TRACE_NAME_MAX
 8

	)

104 
	#_POSIX_TRACE_SYS_MAX
 8

	)

105 
	#_POSIX_TRACE_USER_EVENT_MAX
 32

	)

106 
	#_POSIX_TTY_NAME_MAX
 9

	)

108 
	#_POSIX2_BC_BASE_MAX
 99

	)

109 
	#_POSIX2_BC_DIM_MAX
 2048

	)

110 
	#_POSIX2_BC_SCALE_MAX
 99

	)

111 
	#_POSIX2_BC_STRING_MAX
 1000

	)

112 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

113 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

114 
	#_POSIX2_EQUIV_CLASS_MAX
 2

	)

115 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

116 
	#_POSIX2_LINE_MAX
 2048

	)

117 
	#_POSIX2_RE_DUP_MAX
 255

	)

119 
	#PTHREAD_STACK_MIN
 8192

	)

120 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 4

	)

121 
	#PTHREAD_KEYS_MAX
 512

	)

123 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

124 
	#PASS_MAX
 128

	)

127 
	#NL_ARGMAX
 9

	)

128 
	#NL_LANGMAX
 14

	)

129 
	#NL_MSGMAX
 32767

	)

130 
	#NL_NMAX
 1

	)

131 
	#NL_SETMAX
 255

	)

132 
	#NL_TEXTMAX
 2048

	)

134 
	#_XOPEN_IOV_MAX
 16

	)

135 
	#IOV_MAX
 1024

	)

136 
	#_XOPEN_NAME_MAX
 255

	)

137 
	#_XOPEN_PATH_MAX
 1024

	)

	@/usr/include/mpi.h

21 #i‚de‡
OMPI_MPI_H


22 
	#OMPI_MPI_H


	)

27 #ifde‡
__µc__


30 #i‚de‡
OMPI_CONFIG_H


39 
	#OMPI_HAVE_FORTRAN_INTEGER1
 0

	)

42 
	#OMPI_HAVE_FORTRAN_INTEGER16
 0

	)

45 
	#OMPI_HAVE_FORTRAN_INTEGER2
 0

	)

48 
	#OMPI_HAVE_FORTRAN_INTEGER4
 0

	)

51 
	#OMPI_HAVE_FORTRAN_INTEGER8
 0

	)

54 
	#OMPI_HAVE_FORTRAN_REAL16
 0

	)

57 
	#OMPI_HAVE_FORTRAN_REAL4
 0

	)

60 
	#OMPI_HAVE_FORTRAN_REAL8
 0

	)

63 
	#HAVE_SYS_TIME_H
 1

	)

66 
	#HAVE_LONG_LONG
 1

	)

69 
	#SIZEOF_BOOL
 4

	)

72 
	#SIZEOF_INT
 4

	)

75 
	#OMPI_MPI_OFFSET_TYPE
 

	)

78 
	#OMPI_PTRDIFF_TYPE
 
±rdiff_t


	)

81 
	#OMPI_WANT_CXX_BINDINGS
 1

	)

84 
	#OMPI_WANT_MPI_CXX_SEEK
 1

	)

87 
	#OMPI_CXX_SUPPORTS_2D_CONST_CAST
 1

	)

90 
	#OMPI_WANT_F77_BINDINGS
 0

	)

93 
	#OMPI_WANT_F90_BINDINGS
 0

	)

96 
	#OMPI_HAVE_CXX_EXCEPTION_SUPPORT
 0

	)

99 
	#OMPI_OFFSET_DATATYPE
 
MPI_LONG_LONG


	)

102 
	#STDC_HEADERS
 1

	)

105 
	#OMPI_MAJOR_VERSION
 1

	)

106 
	#OMPI_MINOR_VERSION
 2

	)

107 
	#OMPI_RELEASE_VERSION
 3

	)

111 
	#ompi_f‹å™_bogus_ty≥_t
 

	)

114 
	#ompi_f‹å™_öãgî_t
 
ompi_f‹å™_bogus_ty≥_t


	)

116 #i‚de‡
OMPI_DECLSPEC


117 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
)

118 
	#OMPI_DECLSPEC
 
	`__de˛•ec
(
dŒimp‹t
)

	)

120 
	#OMPI_DECLSPEC


	)

124 #i‚de‡
MPI_Föt


126 
	#MPI_Föt
 
ompi_f‹å™_öãgî_t


	)

133 #ifde‡
__i386__


136 #i‚de‡
OMPI_CONFIG_H


145 
	#OMPI_HAVE_FORTRAN_INTEGER1
 0

	)

148 
	#OMPI_HAVE_FORTRAN_INTEGER16
 0

	)

151 
	#OMPI_HAVE_FORTRAN_INTEGER2
 0

	)

154 
	#OMPI_HAVE_FORTRAN_INTEGER4
 0

	)

157 
	#OMPI_HAVE_FORTRAN_INTEGER8
 0

	)

160 
	#OMPI_HAVE_FORTRAN_REAL16
 0

	)

163 
	#OMPI_HAVE_FORTRAN_REAL4
 0

	)

166 
	#OMPI_HAVE_FORTRAN_REAL8
 0

	)

169 
	#HAVE_SYS_TIME_H
 1

	)

172 
	#HAVE_LONG_LONG
 1

	)

175 
	#SIZEOF_BOOL
 1

	)

178 
	#SIZEOF_INT
 4

	)

181 
	#OMPI_MPI_OFFSET_TYPE
 

	)

184 
	#OMPI_PTRDIFF_TYPE
 
±rdiff_t


	)

187 
	#OMPI_WANT_CXX_BINDINGS
 1

	)

190 
	#OMPI_WANT_MPI_CXX_SEEK
 1

	)

193 
	#OMPI_CXX_SUPPORTS_2D_CONST_CAST
 1

	)

196 
	#OMPI_WANT_F77_BINDINGS
 0

	)

199 
	#OMPI_WANT_F90_BINDINGS
 0

	)

202 
	#OMPI_HAVE_CXX_EXCEPTION_SUPPORT
 0

	)

205 
	#OMPI_OFFSET_DATATYPE
 
MPI_LONG_LONG


	)

208 
	#STDC_HEADERS
 1

	)

211 
	#OMPI_MAJOR_VERSION
 1

	)

212 
	#OMPI_MINOR_VERSION
 2

	)

213 
	#OMPI_RELEASE_VERSION
 3

	)

217 
	#ompi_f‹å™_bogus_ty≥_t
 

	)

220 
	#ompi_f‹å™_öãgî_t
 
ompi_f‹å™_bogus_ty≥_t


	)

222 #i‚de‡
OMPI_DECLSPEC


223 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
)

224 
	#OMPI_DECLSPEC
 
	`__de˛•ec
(
dŒimp‹t
)

	)

226 
	#OMPI_DECLSPEC


	)

230 #i‚de‡
MPI_Föt


232 
	#MPI_Föt
 
ompi_f‹å™_öãgî_t


	)

239 #ifde‡
__µc64__


242 #i‚de‡
OMPI_CONFIG_H


251 
	#OMPI_HAVE_FORTRAN_INTEGER1
 0

	)

254 
	#OMPI_HAVE_FORTRAN_INTEGER16
 0

	)

257 
	#OMPI_HAVE_FORTRAN_INTEGER2
 0

	)

260 
	#OMPI_HAVE_FORTRAN_INTEGER4
 0

	)

263 
	#OMPI_HAVE_FORTRAN_INTEGER8
 0

	)

266 
	#OMPI_HAVE_FORTRAN_REAL16
 0

	)

269 
	#OMPI_HAVE_FORTRAN_REAL4
 0

	)

272 
	#OMPI_HAVE_FORTRAN_REAL8
 0

	)

275 
	#HAVE_SYS_TIME_H
 1

	)

278 
	#HAVE_LONG_LONG
 1

	)

281 
	#SIZEOF_BOOL
 1

	)

284 
	#SIZEOF_INT
 4

	)

287 
	#OMPI_MPI_OFFSET_TYPE
 

	)

290 
	#OMPI_PTRDIFF_TYPE
 
±rdiff_t


	)

293 
	#OMPI_WANT_CXX_BINDINGS
 1

	)

296 
	#OMPI_WANT_MPI_CXX_SEEK
 1

	)

299 
	#OMPI_CXX_SUPPORTS_2D_CONST_CAST
 1

	)

302 
	#OMPI_WANT_F77_BINDINGS
 0

	)

305 
	#OMPI_WANT_F90_BINDINGS
 0

	)

308 
	#OMPI_HAVE_CXX_EXCEPTION_SUPPORT
 0

	)

311 
	#OMPI_OFFSET_DATATYPE
 
MPI_LONG_LONG


	)

314 
	#STDC_HEADERS
 1

	)

317 
	#OMPI_MAJOR_VERSION
 1

	)

318 
	#OMPI_MINOR_VERSION
 2

	)

319 
	#OMPI_RELEASE_VERSION
 3

	)

323 
	#ompi_f‹å™_bogus_ty≥_t
 

	)

326 
	#ompi_f‹å™_öãgî_t
 
ompi_f‹å™_bogus_ty≥_t


	)

328 #i‚de‡
OMPI_DECLSPEC


329 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
)

330 
	#OMPI_DECLSPEC
 
	`__de˛•ec
(
dŒimp‹t
)

	)

332 
	#OMPI_DECLSPEC


	)

336 #i‚de‡
MPI_Föt


338 
	#MPI_Föt
 
ompi_f‹å™_öãgî_t


	)

345 #ifde‡
__x86_64__


348 #i‚de‡
OMPI_CONFIG_H


357 
	#OMPI_HAVE_FORTRAN_INTEGER1
 0

	)

360 
	#OMPI_HAVE_FORTRAN_INTEGER16
 0

	)

363 
	#OMPI_HAVE_FORTRAN_INTEGER2
 0

	)

366 
	#OMPI_HAVE_FORTRAN_INTEGER4
 0

	)

369 
	#OMPI_HAVE_FORTRAN_INTEGER8
 0

	)

372 
	#OMPI_HAVE_FORTRAN_REAL16
 0

	)

375 
	#OMPI_HAVE_FORTRAN_REAL4
 0

	)

378 
	#OMPI_HAVE_FORTRAN_REAL8
 0

	)

381 
	#HAVE_SYS_TIME_H
 1

	)

384 
	#HAVE_LONG_LONG
 1

	)

387 
	#SIZEOF_BOOL
 1

	)

390 
	#SIZEOF_INT
 4

	)

393 
	#OMPI_MPI_OFFSET_TYPE
 

	)

396 
	#OMPI_PTRDIFF_TYPE
 
±rdiff_t


	)

399 
	#OMPI_WANT_CXX_BINDINGS
 1

	)

402 
	#OMPI_WANT_MPI_CXX_SEEK
 1

	)

405 
	#OMPI_CXX_SUPPORTS_2D_CONST_CAST
 1

	)

408 
	#OMPI_WANT_F77_BINDINGS
 0

	)

411 
	#OMPI_WANT_F90_BINDINGS
 0

	)

414 
	#OMPI_HAVE_CXX_EXCEPTION_SUPPORT
 0

	)

417 
	#OMPI_OFFSET_DATATYPE
 
MPI_LONG_LONG


	)

420 
	#STDC_HEADERS
 1

	)

423 
	#OMPI_MAJOR_VERSION
 1

	)

424 
	#OMPI_MINOR_VERSION
 2

	)

425 
	#OMPI_RELEASE_VERSION
 3

	)

429 
	#ompi_f‹å™_bogus_ty≥_t
 

	)

432 
	#ompi_f‹å™_öãgî_t
 
ompi_f‹å™_bogus_ty≥_t


	)

434 #i‚de‡
OMPI_DECLSPEC


435 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
)

436 
	#OMPI_DECLSPEC
 
	`__de˛•ec
(
dŒimp‹t
)

	)

438 
	#OMPI_DECLSPEC


	)

442 #i‚de‡
MPI_Föt


444 
	#MPI_Föt
 
ompi_f‹å™_öãgî_t


	)

453 #ifde‡
STDC_HEADERS


454 
	~<°ddef.h
>

457 #i‚de‡
OMPI_BUILDING


458 
	#OMPI_BUILDING
 0

	)

465 
	#OPEN_MPI
 1

	)

470 
	#MPI_VERSION
 2

	)

471 
	#MPI_SUBVERSION
 0

	)

477 #i‡!
OMPI_BUILDING


478 
	#MPIO_Reque°
 
MPI_Reque°


	)

479 
	#MPIO_Te°
 
MPI_Te°


	)

480 
	#MPIO_Waô
 
MPI_Waô


	)

483 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

490 
OMPI_PTRDIFF_TYPE
 
	tMPI_Aöt
;

491 
OMPI_MPI_OFFSET_TYPE
 
	tMPI_Off£t
;

492 
ompi_communiˇt‹_t
 *
	tMPI_Comm
;

493 
ompi_d©©y≥_t
 *
	tMPI_D©©y≥
;

494 
ompi_îrh™dÀr_t
 *
	tMPI_Eºh™dÀr
;

495 
ompi_fûe_t
 *
	tMPI_Fûe
;

496 
ompi_group_t
 *
	tMPI_Group
;

497 
ompi_öfo_t
 *
	tMPI_Info
;

498 
ompi_›_t
 *
	tMPI_Op
;

499 
ompi_ªque°_t
 *
	tMPI_Reque°
;

500 
ompi_°©us_public_t
 
	tMPI_Sètus
;

501 
ompi_wö_t
 *
	tMPI_Wö
;

506 
	sompi_°©us_public_t
 {

507 
MPI_SOURCE
;

508 
MPI_TAG
;

509 
MPI_ERROR
;

510 
_cou¡
;

511 
_ˇn˚Œed
;

513 
ompi_°©us_public_t
 
	tompi_°©us_public_t
;

518 (
MPI_C›y_fun˘i⁄
)(
	tMPI_Comm
, , *,

520 (
MPI_Dñëe_fun˘i⁄
)(
	tMPI_Comm
, , *, *);

521 (
MPI_D©¨ï_exã¡_fun˘i⁄
)(
	tMPI_D©©y≥
, 
	tMPI_Aöt
 *, *);

522 (
MPI_D©¨ï_c⁄vîsi⁄_fun˘i⁄
)(*, 
	tMPI_D©©y≥
,

523 , *, 
	tMPI_Off£t
, *);

524 (
MPI_Comm_îrh™dÀr_‚
)(
	tMPI_Comm
 *, *, ...);

525 (
MPI_Fûe_îrh™dÀr_‚
)(
	tMPI_Fûe
 *, *, ...);

526 (
MPI_Wö_îrh™dÀr_‚
)(
	tMPI_Wö
 *, *, ...);

527 (
MPI_H™dÀr_fun˘i⁄
)(
	tMPI_Comm
 *, *, ...);

528 (
MPI_U£r_fun˘i⁄
)(*, *, *, 
	tMPI_D©©y≥
 *);

529 (
MPI_Comm_c›y_©å_fun˘i⁄
)(
	tMPI_Comm
, , *,

531 (
MPI_Comm_dñëe_©å_fun˘i⁄
)(
	tMPI_Comm
, , *, *);

532 (
MPI_Ty≥_c›y_©å_fun˘i⁄
)(
	tMPI_D©©y≥
, , *,

534 (
MPI_Ty≥_dñëe_©å_fun˘i⁄
)(
	tMPI_D©©y≥
, ,

536 (
MPI_Wö_c›y_©å_fun˘i⁄
)(
	tMPI_Wö
, , *,

538 (
MPI_Wö_dñëe_©å_fun˘i⁄
)(
	tMPI_Wö
, , *, *);

539 (
MPI_Gªque°_quîy_fun˘i⁄
)(*, 
	tMPI_Sètus
 *);

540 (
MPI_Gªque°_‰ì_fun˘i⁄
)(*);

541 (
MPI_Gªque°_ˇn˚l_fun˘i⁄
)(*, );

546 
	#MPI_ANY_SOURCE
 -1

	)

547 
	#MPI_PROC_NULL
 -2

	)

548 
	#MPI_ROOT
 -4

	)

549 
	#MPI_ANY_TAG
 -1

	)

550 
	#MPI_MAX_PROCESSOR_NAME
 256

	)

551 
	#MPI_MAX_ERROR_STRING
 256

	)

552 
	#MPI_MAX_OBJECT_NAME
 64

	)

553 
	#MPI_UNDEFINED
 -32766

	)

554 
	#MPI_CART
 1

	)

555 
	#MPI_GRAPH
 2

	)

556 
	#MPI_KEYVAL_INVALID
 -1

	)

561 
	#MPI_BOTTOM
 ((*Ë0Ë

	)

562 
	#MPI_IN_PLACE
 ((*Ë1Ë

	)

563 
	#MPI_BSEND_OVERHEAD
 128

	)

564 
	#MPI_MAX_INFO_KEY
 36

	)

565 
	#MPI_MAX_INFO_VAL
 256

	)

566 
	#MPI_ARGV_NULL
 ((**Ë0Ë

	)

567 
	#MPI_ARGVS_NULL
 ((***Ë0Ë

	)

568 
	#MPI_ERRCODES_IGNORE
 ((*Ë0Ë

	)

569 
	#MPI_MAX_PORT_NAME
 36

	)

570 
	#MPI_MAX_NAME_LEN
 
MPI_MAX_PORT_NAME


	)

571 
	#MPI_ORDER_C
 0

	)

572 
	#MPI_ORDER_FORTRAN
 1

	)

573 
	#MPI_DISTRIBUTE_BLOCK
 0

	)

574 
	#MPI_DISTRIBUTE_CYCLIC
 1

	)

575 
	#MPI_DISTRIBUTE_NONE
 2

	)

576 
	#MPI_DISTRIBUTE_DFLT_DARG
 (-1Ë

	)

583 
	#MPI_MODE_CREATE
 1

	)

584 
	#MPI_MODE_RDONLY
 2

	)

585 
	#MPI_MODE_WRONLY
 4

	)

586 
	#MPI_MODE_RDWR
 8

	)

587 
	#MPI_MODE_DELETE_ON_CLOSE
 16

	)

588 
	#MPI_MODE_UNIQUE_OPEN
 32

	)

589 
	#MPI_MODE_EXCL
 64

	)

590 
	#MPI_MODE_APPEND
 128

	)

591 
	#MPI_MODE_SEQUENTIAL
 256

	)

593 
	#MPI_DISPLACEMENT_CURRENT
 -54278278

	)

595 
	#MPI_SEEK_SET
 600

	)

596 
	#MPI_SEEK_CUR
 602

	)

597 
	#MPI_SEEK_END
 604

	)

599 
	#MPI_MAX_DATAREP_STRING
 128

	)

604 
	#MPI_MODE_NOCHECK
 1

	)

605 
	#MPI_MODE_NOPRECEDE
 2

	)

606 
	#MPI_MODE_NOPUT
 4

	)

607 
	#MPI_MODE_NOSTORE
 8

	)

608 
	#MPI_MODE_NOSUCCEED
 16

	)

610 
	#MPI_LOCK_EXCLUSIVE
 1

	)

611 
	#MPI_LOCK_SHARED
 2

	)

622 
MPI_TAG_UB
,

623 
MPI_HOST
,

624 
MPI_IO
,

625 
MPI_WTIME_IS_GLOBAL
,

628 
MPI_APPNUM
,

629 
MPI_LASTUSEDCODE
,

630 
MPI_UNIVERSE_SIZE
,

631 
MPI_WIN_BASE
,

632 
MPI_WIN_SIZE
,

633 
MPI_WIN_DISP_UNIT
,

637 
IMPI_CLIENT_SIZE
,

638 
IMPI_CLIENT_COLOR
,

639 
IMPI_HOST_SIZE
,

640 
IMPI_HOST_COLOR


647 
	#MPI_SUCCESS
 0

	)

648 
	#MPI_ERR_BUFFER
 1

	)

649 
	#MPI_ERR_COUNT
 2

	)

650 
	#MPI_ERR_TYPE
 3

	)

651 
	#MPI_ERR_TAG
 4

	)

652 
	#MPI_ERR_COMM
 5

	)

653 
	#MPI_ERR_RANK
 6

	)

654 
	#MPI_ERR_REQUEST
 7

	)

655 
	#MPI_ERR_ROOT
 8

	)

656 
	#MPI_ERR_GROUP
 9

	)

657 
	#MPI_ERR_OP
 10

	)

658 
	#MPI_ERR_TOPOLOGY
 11

	)

659 
	#MPI_ERR_DIMS
 12

	)

660 
	#MPI_ERR_ARG
 13

	)

661 
	#MPI_ERR_UNKNOWN
 14

	)

662 
	#MPI_ERR_TRUNCATE
 15

	)

663 
	#MPI_ERR_OTHER
 16

	)

664 
	#MPI_ERR_INTERN
 17

	)

665 
	#MPI_ERR_IN_STATUS
 18

	)

666 
	#MPI_ERR_PENDING
 19

	)

667 
	#MPI_ERR_ACCESS
 20

	)

668 
	#MPI_ERR_AMODE
 21

	)

669 
	#MPI_ERR_ASSERT
 22

	)

670 
	#MPI_ERR_BAD_FILE
 23

	)

671 
	#MPI_ERR_BASE
 24

	)

672 
	#MPI_ERR_CONVERSION
 25

	)

673 
	#MPI_ERR_DISP
 26

	)

674 
	#MPI_ERR_DUP_DATAREP
 27

	)

675 
	#MPI_ERR_FILE_EXISTS
 28

	)

676 
	#MPI_ERR_FILE_IN_USE
 29

	)

677 
	#MPI_ERR_FILE
 30

	)

678 
	#MPI_ERR_INFO_KEY
 31

	)

679 
	#MPI_ERR_INFO_NOKEY
 32

	)

680 
	#MPI_ERR_INFO_VALUE
 33

	)

681 
	#MPI_ERR_INFO
 34

	)

682 
	#MPI_ERR_IO
 35

	)

683 
	#MPI_ERR_KEYVAL
 36

	)

684 
	#MPI_ERR_LOCKTYPE
 37

	)

685 
	#MPI_ERR_NAME
 38

	)

686 
	#MPI_ERR_NO_MEM
 39

	)

687 
	#MPI_ERR_NOT_SAME
 40

	)

688 
	#MPI_ERR_NO_SPACE
 41

	)

689 
	#MPI_ERR_NO_SUCH_FILE
 42

	)

690 
	#MPI_ERR_PORT
 43

	)

691 
	#MPI_ERR_QUOTA
 44

	)

692 
	#MPI_ERR_READ_ONLY
 45

	)

693 
	#MPI_ERR_RMA_CONFLICT
 46

	)

694 
	#MPI_ERR_RMA_SYNC
 47

	)

695 
	#MPI_ERR_SERVICE
 48

	)

696 
	#MPI_ERR_SIZE
 49

	)

697 
	#MPI_ERR_SPAWN
 50

	)

698 
	#MPI_ERR_UNSUPPORTED_DATAREP
 51

	)

699 
	#MPI_ERR_UNSUPPORTED_OPERATION
 52

	)

700 
	#MPI_ERR_WIN
 53

	)

701 
	#MPI_ERR_LASTCODE
 54

	)

703 
	#MPI_ERR_SYSRESOURCE
 -2

	)

712 
MPI_IDENT
,

713 
MPI_CONGRUENT
,

714 
MPI_SIMILAR
,

715 
MPI_UNEQUAL


723 
MPI_THREAD_SINGLE
,

724 
MPI_THREAD_FUNNELED
,

725 
MPI_THREAD_SERIALIZED
,

726 
MPI_THREAD_MULTIPLE


734 
MPI_COMBINER_NAMED
,

735 
MPI_COMBINER_DUP
,

736 
MPI_COMBINER_CONTIGUOUS
,

737 
MPI_COMBINER_VECTOR
,

738 
MPI_COMBINER_HVECTOR_INTEGER
,

739 
MPI_COMBINER_HVECTOR
,

740 
MPI_COMBINER_INDEXED
,

741 
MPI_COMBINER_HINDEXED_INTEGER
,

742 
MPI_COMBINER_HINDEXED
,

743 
MPI_COMBINER_INDEXED_BLOCK
,

744 
MPI_COMBINER_STRUCT_INTEGER
,

745 
MPI_COMBINER_STRUCT
,

746 
MPI_COMBINER_SUBARRAY
,

747 
MPI_COMBINER_DARRAY
,

748 
MPI_COMBINER_F90_REAL
,

749 
MPI_COMBINER_F90_COMPLEX
,

750 
MPI_COMBINER_F90_INTEGER
,

751 
MPI_COMBINER_RESIZED


757 
	#MPI_GROUP_NULL
 (&
ompi_mpi_group_nuŒ
)

	)

758 
	#MPI_COMM_NULL
 (&
ompi_mpi_comm_nuŒ
)

	)

759 
	#MPI_REQUEST_NULL
 (&
ompi_ªque°_nuŒ
)

	)

760 
	#MPI_OP_NULL
 (&
ompi_mpi_›_nuŒ
)

	)

761 
	#MPI_ERRHANDLER_NULL
 (&
ompi_mpi_îrh™dÀr_nuŒ
)

	)

762 
	#MPI_INFO_NULL
 (&
ompi_mpi_öfo_nuŒ
)

	)

763 
	#MPI_WIN_NULL
 (&
ompi_mpi_wö_nuŒ
)

	)

764 
	#MPI_FILE_NULL
 (&
ompi_mpi_fûe_nuŒ
)

	)

766 
	#MPI_STATUS_IGNORE
 ((
MPI_Sètus
 *Ë0)

	)

767 
	#MPI_STATUSES_IGNORE
 ((
MPI_Sètus
 *Ë0)

	)

785 #i‡!
deföed
(
OMPI_COMPILING_F77_WRAPPERS
)

786 
	#MPI_NULL_DELETE_FN
 
OMPI_C_MPI_NULL_DELETE_FN


	)

787 
	#MPI_NULL_COPY_FN
 
OMPI_C_MPI_NULL_COPY_FN


	)

788 
	#MPI_DUP_FN
 
OMPI_C_MPI_DUP_FN


	)

790 
	#MPI_TYPE_NULL_DELETE_FN
 
OMPI_C_MPI_TYPE_NULL_DELETE_FN


	)

791 
	#MPI_TYPE_NULL_COPY_FN
 
OMPI_C_MPI_TYPE_NULL_COPY_FN


	)

792 
	#MPI_TYPE_DUP_FN
 
OMPI_C_MPI_TYPE_DUP_FN


	)

794 
	#MPI_COMM_NULL_DELETE_FN
 
OMPI_C_MPI_COMM_NULL_DELETE_FN


	)

795 
	#MPI_COMM_NULL_COPY_FN
 
OMPI_C_MPI_COMM_NULL_COPY_FN


	)

796 
	#MPI_COMM_DUP_FN
 
OMPI_C_MPI_COMM_DUP_FN


	)

798 
	#MPI_WIN_NULL_DELETE_FN
 
OMPI_C_MPI_WIN_NULL_DELETE_FN


	)

799 
	#MPI_WIN_NULL_COPY_FN
 
OMPI_C_MPI_WIN_NULL_COPY_FN


	)

800 
	#MPI_WIN_DUP_FN
 
OMPI_C_MPI_WIN_DUP_FN


	)

803 
OMPI_DECLSPEC
 
OMPI_C_MPI_TYPE_NULL_DELETE_FN
–
MPI_D©©y≥
 
d©©y≥
,

804 
ty≥_keyvÆ
,

805 * 
©åibuã_vÆ_out
,

806 * 
exåa_°©e
 );

807 
OMPI_DECLSPEC
 
OMPI_C_MPI_TYPE_NULL_COPY_FN
–
MPI_D©©y≥
 
d©©y≥
,

808 
ty≥_keyvÆ
,

809 * 
exåa_°©e
,

810 * 
©åibuã_vÆ_ö
,

811 * 
©åibuã_vÆ_out
,

812 * 
Êag
 );

813 
OMPI_DECLSPEC
 
OMPI_C_MPI_TYPE_DUP_FN
–
MPI_D©©y≥
 
d©©y≥
,

814 
ty≥_keyvÆ
,

815 * 
exåa_°©e
,

816 * 
©åibuã_vÆ_ö
,

817 * 
©åibuã_vÆ_out
,

818 * 
Êag
 );

819 
OMPI_DECLSPEC
 
OMPI_C_MPI_COMM_NULL_DELETE_FN
–
MPI_Comm
 
comm
,

820 
comm_keyvÆ
,

821 * 
©åibuã_vÆ_out
,

822 * 
exåa_°©e
 );

823 
OMPI_DECLSPEC
 
OMPI_C_MPI_COMM_NULL_COPY_FN
–
MPI_Comm
 
comm
,

824 
comm_keyvÆ
,

825 * 
exåa_°©e
,

826 * 
©åibuã_vÆ_ö
,

827 * 
©åibuã_vÆ_out
,

828 * 
Êag
 );

829 
OMPI_DECLSPEC
 
OMPI_C_MPI_COMM_DUP_FN
–
MPI_Comm
 
comm
, 
comm_keyvÆ
,

830 * 
exåa_°©e
,

831 * 
©åibuã_vÆ_ö
,

832 * 
©åibuã_vÆ_out
,

833 * 
Êag
 );

834 
OMPI_DECLSPEC
 
OMPI_C_MPI_NULL_DELETE_FN
–
MPI_Comm
 
comm
, 
comm_keyvÆ
,

835 * 
©åibuã_vÆ_out
,

836 * 
exåa_°©e
 );

837 
OMPI_DECLSPEC
 
OMPI_C_MPI_NULL_COPY_FN
–
MPI_Comm
 
comm
, 
comm_keyvÆ
,

838 * 
exåa_°©e
,

839 * 
©åibuã_vÆ_ö
,

840 * 
©åibuã_vÆ_out
,

841 * 
Êag
 );

842 
OMPI_DECLSPEC
 
OMPI_C_MPI_DUP_FN
–
MPI_Comm
 
comm
, 
comm_keyvÆ
,

843 * 
exåa_°©e
,

844 * 
©åibuã_vÆ_ö
,

845 * 
©åibuã_vÆ_out
,

846 * 
Êag
 );

847 
OMPI_DECLSPEC
 
OMPI_C_MPI_WIN_NULL_DELETE_FN
–
MPI_Wö
 
wödow
,

848 
wö_keyvÆ
,

849 * 
©åibuã_vÆ_out
,

850 * 
exåa_°©e
 );

851 
OMPI_DECLSPEC
 
OMPI_C_MPI_WIN_NULL_COPY_FN
–
MPI_Wö
 
wödow
, 
wö_keyvÆ
,

852 * 
exåa_°©e
,

853 * 
©åibuã_vÆ_ö
,

854 * 
©åibuã_vÆ_out
,

855 * 
Êag
 );

856 
OMPI_DECLSPEC
 
OMPI_C_MPI_WIN_DUP_FN
–
MPI_Wö
 
wödow
, 
wö_keyvÆ
,

857 * 
exåa_°©e
,

858 * 
©åibuã_vÆ_ö
,

859 * 
©åibuã_vÆ_out
,

860 * 
Êag
 );

866 
OMPI_DECLSPEC
 
ompi_communiˇt‹_t
 
ompi_mpi_comm_w‹ld
;

867 
OMPI_DECLSPEC
 
ompi_communiˇt‹_t
 
ompi_mpi_comm_£lf
;

868 
OMPI_DECLSPEC
 
ompi_communiˇt‹_t
 
ompi_mpi_comm_nuŒ
;

870 
OMPI_DECLSPEC
 
ompi_group_t
 
ompi_mpi_group_em±y
;

871 
OMPI_DECLSPEC
 
ompi_group_t
 
ompi_mpi_group_nuŒ
;

873 
OMPI_DECLSPEC
 
ompi_ªque°_t
 
ompi_ªque°_nuŒ
;

875 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_nuŒ
;

876 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_max
, 
ompi_mpi_›_mö
;

877 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_sum
, 
ompi_mpi_›_¥od
;

878 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_œnd
, 
ompi_mpi_›_b™d
;

879 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_l‹
, 
ompi_mpi_›_b‹
;

880 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_lx‹
, 
ompi_mpi_›_bx‹
;

881 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_maxloc
, 
ompi_mpi_›_möloc
;

882 
OMPI_DECLSPEC
 
ompi_›_t
 
ompi_mpi_›_ª∂a˚
;

884 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_ch¨
, 
ompi_mpi_byã
;

885 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öt
, 
ompi_mpi_logic
;

886 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_sh‹t
, 
ompi_mpi_l⁄g
;

887 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_Êﬂt
, 
ompi_mpi_doubÀ
;

888 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_l⁄g_doubÀ
;

889 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_˝Àx
, 
ompi_mpi_∑cked
;

890 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_sig√d_ch¨
;

891 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_unsig√d_ch¨
;

892 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_unsig√d_sh‹t
;

893 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_unsig√d
, 
ompi_mpi_d©©y≥_nuŒ
;

894 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_unsig√d_l⁄g
, 
ompi_mpi_ldbl˝Àx
;

895 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_ub
, 
ompi_mpi_lb
;

896 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_Êﬂt_öt
, 
ompi_mpi_doubÀ_öt
;

897 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_l⁄g_öt
, 
ompi_mpi_2öt
;

898 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_sh‹t_öt
, 
ompi_mpi_dbl˝Àx
;

899 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öãgî
, 
ompi_mpi_ªÆ
;

900 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_dbÕªc
, 
ompi_mpi_ch¨a˘î
;

901 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_2ªÆ
, 
ompi_mpi_2dbÕªc
;

902 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_2öãgî
, 
ompi_mpi_l⁄gdbl_öt
;

903 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_wch¨
, 
ompi_mpi_l⁄g_l⁄g_öt
;

904 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_unsig√d_l⁄g_l⁄g
;

905 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_cxx_˝Àx
, 
ompi_mpi_cxx_dbl˝Àx
;

906 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_cxx_ldbl˝Àx
;

907 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_cxx_boﬁ
;

908 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_2˝Àx
, 
ompi_mpi_2dbl˝Àx
;

910 #i‡
OMPI_HAVE_FORTRAN_INTEGER1


911 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öãgî1
;

913 #i‡
OMPI_HAVE_FORTRAN_INTEGER2


914 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öãgî2
;

916 #i‡
OMPI_HAVE_FORTRAN_INTEGER4


917 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öãgî4
;

919 #i‡
OMPI_HAVE_FORTRAN_INTEGER8


920 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öãgî8
;

922 #i‡
OMPI_HAVE_FORTRAN_INTEGER16


923 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_öãgî16
;

925 #i‡
OMPI_HAVE_FORTRAN_REAL4


926 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_ªÆ4
;

928 #i‡
OMPI_HAVE_FORTRAN_REAL8


929 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_ªÆ8
;

931 #i‡
OMPI_HAVE_FORTRAN_REAL16


932 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_ªÆ16
;

934 #i‡
OMPI_HAVE_FORTRAN_REAL4


935 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_com∂ex8
;

937 #i‡
OMPI_HAVE_FORTRAN_REAL8


938 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_com∂ex16
;

940 #i‡
OMPI_HAVE_FORTRAN_REAL16


941 
OMPI_DECLSPEC
 
ompi_d©©y≥_t
 
ompi_mpi_com∂ex32
;

944 
OMPI_DECLSPEC
 
ompi_îrh™dÀr_t
 
ompi_mpi_îrh™dÀr_nuŒ
;

945 
OMPI_DECLSPEC
 
ompi_îrh™dÀr_t
 
ompi_mpi_îr‹s_¨e_Áèl
;

946 
OMPI_DECLSPEC
 
ompi_îrh™dÀr_t
 
ompi_mpi_îr‹s_ªtu∫
;

948 
OMPI_DECLSPEC
 
ompi_wö_t
 
ompi_mpi_wö_nuŒ
;

949 
OMPI_DECLSPEC
 
ompi_fûe_t
 
ompi_mpi_fûe_nuŒ
;

951 
OMPI_DECLSPEC
 
ompi_öfo_t
 
ompi_mpi_öfo_nuŒ
;

953 
OMPI_DECLSPEC
 
MPI_Föt
 *
MPI_F_STATUS_IGNORE
;

954 
OMPI_DECLSPEC
 
MPI_Föt
 *
MPI_F_STATUSES_IGNORE
;

959 
	#MPI_COMM_WORLD
 (&
ompi_mpi_comm_w‹ld
)

	)

960 
	#MPI_COMM_SELF
 (&
ompi_mpi_comm_£lf
)

	)

962 
	#MPI_GROUP_EMPTY
 (&
ompi_mpi_group_em±y
)

	)

964 
	#MPI_MAX
 (&
ompi_mpi_›_max
)

	)

965 
	#MPI_MIN
 (&
ompi_mpi_›_mö
)

	)

966 
	#MPI_SUM
 (&
ompi_mpi_›_sum
)

	)

967 
	#MPI_PROD
 (&
ompi_mpi_›_¥od
)

	)

968 
	#MPI_LAND
 (&
ompi_mpi_›_œnd
)

	)

969 
	#MPI_BAND
 (&
ompi_mpi_›_b™d
)

	)

970 
	#MPI_LOR
 (&
ompi_mpi_›_l‹
)

	)

971 
	#MPI_BOR
 (&
ompi_mpi_›_b‹
)

	)

972 
	#MPI_LXOR
 (&
ompi_mpi_›_lx‹
)

	)

973 
	#MPI_BXOR
 (&
ompi_mpi_›_bx‹
)

	)

974 
	#MPI_MAXLOC
 (&
ompi_mpi_›_maxloc
)

	)

975 
	#MPI_MINLOC
 (&
ompi_mpi_›_möloc
)

	)

976 
	#MPI_REPLACE
 (&
ompi_mpi_›_ª∂a˚
)

	)

979 
	#MPI_DATATYPE_NULL
 (&
ompi_mpi_d©©y≥_nuŒ
)

	)

980 
	#MPI_BYTE
 (&
ompi_mpi_byã
)

	)

981 
	#MPI_PACKED
 (&
ompi_mpi_∑cked
)

	)

982 
	#MPI_CHAR
 (&
ompi_mpi_ch¨
)

	)

983 
	#MPI_SHORT
 (&
ompi_mpi_sh‹t
)

	)

984 
	#MPI_INT
 (&
ompi_mpi_öt
)

	)

985 
	#MPI_LONG
 (&
ompi_mpi_l⁄g
)

	)

986 
	#MPI_FLOAT
 (&
ompi_mpi_Êﬂt
)

	)

987 
	#MPI_DOUBLE
 (&
ompi_mpi_doubÀ
)

	)

988 
	#MPI_LONG_DOUBLE
 (&
ompi_mpi_l⁄g_doubÀ
)

	)

989 
	#MPI_UNSIGNED_CHAR
 (&
ompi_mpi_unsig√d_ch¨
)

	)

990 
	#MPI_SIGNED_CHAR
 (&
ompi_mpi_sig√d_ch¨
)

	)

991 
	#MPI_UNSIGNED_SHORT
 (&
ompi_mpi_unsig√d_sh‹t
)

	)

992 
	#MPI_UNSIGNED_LONG
 (&
ompi_mpi_unsig√d_l⁄g
)

	)

993 
	#MPI_UNSIGNED
 (&
ompi_mpi_unsig√d
)

	)

994 
	#MPI_FLOAT_INT
 (&
ompi_mpi_Êﬂt_öt
)

	)

995 
	#MPI_DOUBLE_INT
 (&
ompi_mpi_doubÀ_öt
)

	)

996 
	#MPI_LONG_DOUBLE_INT
 (&
ompi_mpi_l⁄gdbl_öt
)

	)

997 
	#MPI_LONG_INT
 (&
ompi_mpi_l⁄g_öt
)

	)

998 
	#MPI_SHORT_INT
 (&
ompi_mpi_sh‹t_öt
)

	)

999 
	#MPI_2INT
 (&
ompi_mpi_2öt
)

	)

1000 
	#MPI_UB
 (&
ompi_mpi_ub
)

	)

1001 
	#MPI_LB
 (&
ompi_mpi_lb
)

	)

1002 
	#MPI_WCHAR
 (&
ompi_mpi_wch¨
)

	)

1003 #i‡
HAVE_LONG_LONG


1004 
	#MPI_LONG_LONG_INT
 (&
ompi_mpi_l⁄g_l⁄g_öt
)

	)

1005 
	#MPI_LONG_LONG
 (&
ompi_mpi_l⁄g_l⁄g_öt
)

	)

1006 
	#MPI_UNSIGNED_LONG_LONG
 (&
ompi_mpi_unsig√d_l⁄g_l⁄g
)

	)

1008 
	#MPI_2COMPLEX
 (&
ompi_mpi_2˝Àx
)

	)

1009 
	#MPI_2DOUBLE_COMPLEX
 (&
ompi_mpi_2dbl˝Àx
)

	)

1012 
	#MPI_CHARACTER
 (&
ompi_mpi_ch¨a˘î
)

	)

1013 
	#MPI_LOGICAL
 (&
ompi_mpi_logic
)

	)

1014 
	#MPI_INTEGER
 (&
ompi_mpi_öãgî
)

	)

1015 #i‡
OMPI_HAVE_FORTRAN_INTEGER1


1016 
	#MPI_INTEGER1
 (&
ompi_mpi_öãgî1
)

	)

1018 #i‡
OMPI_HAVE_FORTRAN_INTEGER2


1019 
	#MPI_INTEGER2
 (&
ompi_mpi_öãgî2
)

	)

1021 #i‡
OMPI_HAVE_FORTRAN_INTEGER4


1022 
	#MPI_INTEGER4
 (&
ompi_mpi_öãgî4
)

	)

1024 #i‡
OMPI_HAVE_FORTRAN_INTEGER8


1025 
	#MPI_INTEGER8
 (&
ompi_mpi_öãgî8
)

	)

1027 #i‡
OMPI_HAVE_FORTRAN_INTEGER16


1028 
	#MPI_INTEGER16
 (&
ompi_mpi_öãgî16
)

	)

1030 
	#MPI_REAL
 (&
ompi_mpi_ªÆ
)

	)

1031 #i‡
OMPI_HAVE_FORTRAN_REAL4


1032 
	#MPI_REAL4
 (&
ompi_mpi_ªÆ4
)

	)

1034 #i‡
OMPI_HAVE_FORTRAN_REAL8


1035 
	#MPI_REAL8
 (&
ompi_mpi_ªÆ8
)

	)

1037 #i‡
OMPI_HAVE_FORTRAN_REAL16


1038 
	#MPI_REAL16
 (&
ompi_mpi_ªÆ16
)

	)

1040 
	#MPI_DOUBLE_PRECISION
 (&
ompi_mpi_dbÕªc
)

	)

1041 
	#MPI_COMPLEX
 (&
ompi_mpi_˝Àx
)

	)

1042 #i‡
OMPI_HAVE_FORTRAN_REAL4


1043 
	#MPI_COMPLEX8
 (&
ompi_mpi_com∂ex8
)

	)

1045 #i‡
OMPI_HAVE_FORTRAN_REAL8


1046 
	#MPI_COMPLEX16
 (&
ompi_mpi_com∂ex16
)

	)

1048 #i‡
OMPI_HAVE_FORTRAN_REAL16


1049 
	#MPI_COMPLEX32
 (&
ompi_mpi_com∂ex32
)

	)

1051 
	#MPI_DOUBLE_COMPLEX
 (&
ompi_mpi_dbl˝Àx
)

	)

1052 
	#MPI_2REAL
 (&
ompi_mpi_2ªÆ
)

	)

1053 
	#MPI_2DOUBLE_PRECISION
 (&
ompi_mpi_2dbÕªc
)

	)

1054 
	#MPI_2INTEGER
 (&
ompi_mpi_2öãgî
)

	)

1056 
	#MPI_ERRORS_ARE_FATAL
 (&
ompi_mpi_îr‹s_¨e_Áèl
)

	)

1057 
	#MPI_ERRORS_RETURN
 (&
ompi_mpi_îr‹s_ªtu∫
)

	)

1060 
	#MPI_TYPECLASS_INTEGER
 1

	)

1061 
	#MPI_TYPECLASS_REAL
 2

	)

1062 
	#MPI_TYPECLASS_COMPLEX
 3

	)

1067 
	#MPIO_Reque°
 
MPI_Reque°


	)

1068 
	#MPIO_Te°
 
MPI_Te°


	)

1069 
	#MPIO_Waô
 
MPI_Waô


	)

1076 
OMPI_DECLSPEC
 
MPI_Ab‹t
(
MPI_Comm
 
comm
, 
îr‹code
);

1077 
OMPI_DECLSPEC
 
MPI_Accumuœã
(*
‹igö_addr
, 
‹igö_cou¡
, 
MPI_D©©y≥
 
‹igö_d©©y≥
,

1078 
èrgë_ønk
, 
MPI_Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

1079 
MPI_D©©y≥
 
èrgë_d©©y≥
, 
MPI_Op
 
›
, 
MPI_Wö
 
wö
);

1080 
OMPI_DECLSPEC
 
MPI_Add_îr‹_˛ass
(*
îr‹˛ass
);

1081 
OMPI_DECLSPEC
 
MPI_Add_îr‹_code
(
îr‹˛ass
, *
îr‹code
);

1082 
OMPI_DECLSPEC
 
MPI_Add_îr‹_°rög
(
îr‹code
, *
°rög
);

1083 
OMPI_DECLSPEC
 
MPI_Addªss
(*
loˇti⁄
, 
MPI_Aöt
 *
addªss
);

1084 
OMPI_DECLSPEC
 
MPI_AŒg©hî
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1085 *
ªcvbuf
, 
ªcvcou¡
,

1086 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1087 
OMPI_DECLSPEC
 
MPI_AŒg©hîv
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1088 *
ªcvbuf
, *
ªcvcou¡s
,

1089 *
di•ls
, 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1090 
OMPI_DECLSPEC
 
MPI_AŒoc_mem
(
MPI_Aöt
 
size
, 
MPI_Info
 
öfo
,

1091 *
ba£±r
);

1092 
OMPI_DECLSPEC
 
MPI_AŒªdu˚
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1093 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1094 
OMPI_DECLSPEC
 
MPI_AŒtﬂŒ
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1095 *
ªcvbuf
, 
ªcvcou¡
,

1096 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1097 
OMPI_DECLSPEC
 
MPI_AŒtﬂŒv
(*
£ndbuf
, *
£ndcou¡s
, *
sdi•ls
,

1098 
MPI_D©©y≥
 
£ndty≥
, *
ªcvbuf
, *
ªcvcou¡s
,

1099 *
rdi•ls
, 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1100 
OMPI_DECLSPEC
 
MPI_AŒtﬂŒw
(*
£ndbuf
, *
£ndcou¡s
, *
sdi•ls
, 
MPI_D©©y≥
 *
£ndty≥s
,

1101 *
ªcvbuf
, *
ªcvcou¡s
, *
rdi•ls
, 
MPI_D©©y≥
 *
ªcvty≥s
,

1102 
MPI_Comm
 
comm
);

1103 
OMPI_DECLSPEC
 
MPI_Aâr_dñëe
(
MPI_Comm
 
comm
, 
keyvÆ
);

1104 
OMPI_DECLSPEC
 
MPI_Aâr_gë
(
MPI_Comm
 
comm
, 
keyvÆ
, *
©åibuã_vÆ
, *
Êag
);

1105 
OMPI_DECLSPEC
 
MPI_Aâr_put
(
MPI_Comm
 
comm
, 
keyvÆ
, *
©åibuã_vÆ
);

1106 
OMPI_DECLSPEC
 
MPI_B¨rõr
(
MPI_Comm
 
comm
);

1107 
OMPI_DECLSPEC
 
MPI_Bˇ°
(*
buf„r
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1108 
roŸ
, 
MPI_Comm
 
comm
);

1109 
OMPI_DECLSPEC
 
MPI_B£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1110 
de°
, 
èg
, 
MPI_Comm
 
comm
);

1111 
OMPI_DECLSPEC
 
MPI_B£nd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1112 
de°
, 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1113 
OMPI_DECLSPEC
 
MPI_Buf„r_©èch
(*
buf„r
, 
size
);

1114 
OMPI_DECLSPEC
 
MPI_Buf„r_dëach
(*
buf„r
, *
size
);

1115 
OMPI_DECLSPEC
 
MPI_C™˚l
(
MPI_Reque°
 *
ªque°
);

1116 
OMPI_DECLSPEC
 
MPI_C¨t_co‹ds
(
MPI_Comm
 
comm
, 
ønk
, 
maxdims
, *
co‹ds
);

1117 
OMPI_DECLSPEC
 
MPI_C¨t_¸óã
(
MPI_Comm
 
ﬁd_comm
, 
ndims
, *
dims
,

1118 *
≥riods
, 
ª‹dî
, 
MPI_Comm
 *
comm_ˇπ
);

1119 
OMPI_DECLSPEC
 
MPI_C¨t_gë
(
MPI_Comm
 
comm
, 
maxdims
, *
dims
,

1120 *
≥riods
, *
co‹ds
);

1121 
OMPI_DECLSPEC
 
MPI_C¨t_m≠
(
MPI_Comm
 
comm
, 
ndims
, *
dims
,

1122 *
≥riods
, *
√wønk
);

1123 
OMPI_DECLSPEC
 
MPI_C¨t_ønk
(
MPI_Comm
 
comm
, *
co‹ds
, *
ønk
);

1124 
OMPI_DECLSPEC
 
MPI_C¨t_shi·
(
MPI_Comm
 
comm
, 
dúe˘i⁄
, 
di•
,

1125 *
ønk_sour˚
, *
ønk_de°
);

1126 
OMPI_DECLSPEC
 
MPI_C¨t_sub
(
MPI_Comm
 
comm
, *
ªmaö_dims
, MPI_Comm *
√w_comm
);

1127 
OMPI_DECLSPEC
 
MPI_C¨tdim_gë
(
MPI_Comm
 
comm
, *
ndims
);

1128 
OMPI_DECLSPEC
 
MPI_Clo£_p‹t
(*
p‹t_«me
);

1129 
OMPI_DECLSPEC
 
MPI_Comm_ac˚±
(*
p‹t_«me
, 
MPI_Info
 
öfo
, 
roŸ
,

1130 
MPI_Comm
 
comm
, MPI_Comm *
√wcomm
);

1131 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Comm_c2f
(
MPI_Comm
 
comm
);

1132 
OMPI_DECLSPEC
 
MPI_Comm_ˇŒ_îrh™dÀr
(
MPI_Comm
 
comm
, 
îr‹code
);

1133 
OMPI_DECLSPEC
 
MPI_Comm_com∑ª
(
MPI_Comm
 
comm1
, MPI_Comm 
comm2
, *
ªsu…
);

1134 
OMPI_DECLSPEC
 
MPI_Comm_c⁄√˘
(*
p‹t_«me
, 
MPI_Info
 
öfo
, 
roŸ
,

1135 
MPI_Comm
 
comm
, MPI_Comm *
√wcomm
);

1136 
OMPI_DECLSPEC
 
MPI_Comm_¸óã_îrh™dÀr
(
MPI_Comm_îrh™dÀr_‚
 *
fun˘i⁄
,

1137 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1138 
OMPI_DECLSPEC
 
MPI_Comm_¸óã_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
 *
comm_c›y_©å_‚
,

1139 
MPI_Comm_dñëe_©å_fun˘i⁄
 *
comm_dñëe_©å_‚
,

1140 *
comm_keyvÆ
, *
exåa_°©e
);

1141 
OMPI_DECLSPEC
 
MPI_Comm_¸óã
(
MPI_Comm
 
comm
, 
MPI_Group
 
group
, MPI_Comm *
√wcomm
);

1142 
OMPI_DECLSPEC
 
MPI_Comm_dñëe_©å
(
MPI_Comm
 
comm
, 
comm_keyvÆ
);

1143 
OMPI_DECLSPEC
 
MPI_Comm_disc⁄√˘
(
MPI_Comm
 *
comm
);

1144 
OMPI_DECLSPEC
 
MPI_Comm_dup
(
MPI_Comm
 
comm
, MPI_Comm *
√wcomm
);

1145 
OMPI_DECLSPEC
 
MPI_Comm
 
MPI_Comm_f2c
(
MPI_Föt
 
comm
);

1146 
OMPI_DECLSPEC
 
MPI_Comm_‰ì_keyvÆ
(*
comm_keyvÆ
);

1147 
OMPI_DECLSPEC
 
MPI_Comm_‰ì
(
MPI_Comm
 *
comm
);

1148 
OMPI_DECLSPEC
 
MPI_Comm_gë_©å
(
MPI_Comm
 
comm
, 
comm_keyvÆ
,

1149 *
©åibuã_vÆ
, *
Êag
);

1150 
OMPI_DECLSPEC
 
MPI_Comm_gë_îrh™dÀr
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 *
îh™dÀr
);

1151 
OMPI_DECLSPEC
 
MPI_Comm_gë_«me
(
MPI_Comm
 
comm
, *
comm_«me
, *
ªsu…Àn
);

1152 
OMPI_DECLSPEC
 
MPI_Comm_gë_∑ª¡
(
MPI_Comm
 *
∑ª¡
);

1153 
OMPI_DECLSPEC
 
MPI_Comm_group
(
MPI_Comm
 
comm
, 
MPI_Group
 *
group
);

1154 
OMPI_DECLSPEC
 
MPI_Comm_joö
(
fd
, 
MPI_Comm
 *
öãrcomm
);

1155 
OMPI_DECLSPEC
 
MPI_Comm_ønk
(
MPI_Comm
 
comm
, *
ønk
);

1156 
OMPI_DECLSPEC
 
MPI_Comm_ªmŸe_group
(
MPI_Comm
 
comm
, 
MPI_Group
 *
group
);

1157 
OMPI_DECLSPEC
 
MPI_Comm_ªmŸe_size
(
MPI_Comm
 
comm
, *
size
);

1158 
OMPI_DECLSPEC
 
MPI_Comm_£t_©å
(
MPI_Comm
 
comm
, 
comm_keyvÆ
, *
©åibuã_vÆ
);

1159 
OMPI_DECLSPEC
 
MPI_Comm_£t_îrh™dÀr
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1160 
OMPI_DECLSPEC
 
MPI_Comm_£t_«me
(
MPI_Comm
 
comm
, *
comm_«me
);

1161 
OMPI_DECLSPEC
 
MPI_Comm_size
(
MPI_Comm
 
comm
, *
size
);

1162 
OMPI_DECLSPEC
 
MPI_Comm_•awn
(*
comm™d
, **
¨gv
, 
max¥ocs
, 
MPI_Info
 
öfo
,

1163 
roŸ
, 
MPI_Comm
 
comm
, MPI_Comm *
öãrcomm
,

1164 *
¨øy_of_îrcodes
);

1165 
OMPI_DECLSPEC
 
MPI_Comm_•awn_mu…ùÀ
(
cou¡
, **
¨øy_of_comm™ds
, ***
¨øy_of_¨gv
,

1166 *
¨øy_of_max¥ocs
, 
MPI_Info
 *
¨øy_of_öfo
,

1167 
roŸ
, 
MPI_Comm
 
comm
, MPI_Comm *
öãrcomm
,

1168 *
¨øy_of_îrcodes
);

1169 
OMPI_DECLSPEC
 
MPI_Comm_•lô
(
MPI_Comm
 
comm
, 
cﬁ‹
, 
key
, MPI_Comm *
√wcomm
);

1170 
OMPI_DECLSPEC
 
MPI_Comm_ã°_öãr
(
MPI_Comm
 
comm
, *
Êag
);

1171 
OMPI_DECLSPEC
 
MPI_Dims_¸óã
(
¬odes
, 
ndims
, *
dims
);

1172 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Eºh™dÀr_c2f
(
MPI_Eºh™dÀr
 
îrh™dÀr
);

1173 
OMPI_DECLSPEC
 
MPI_Eºh™dÀr_¸óã
(
MPI_H™dÀr_fun˘i⁄
 *
fun˘i⁄
,

1174 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1175 
OMPI_DECLSPEC
 
MPI_Eºh™dÀr
 
MPI_Eºh™dÀr_f2c
(
MPI_Föt
 
îrh™dÀr
);

1176 
OMPI_DECLSPEC
 
MPI_Eºh™dÀr_‰ì
(
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1177 
OMPI_DECLSPEC
 
MPI_Eºh™dÀr_gë
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1178 
OMPI_DECLSPEC
 
MPI_Eºh™dÀr_£t
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1179 
OMPI_DECLSPEC
 
MPI_Eº‹_˛ass
(
îr‹code
, *
îr‹˛ass
);

1180 
OMPI_DECLSPEC
 
MPI_Eº‹_°rög
(
îr‹code
, *
°rög
, *
ªsu…Àn
);

1181 
OMPI_DECLSPEC
 
MPI_Exsˇn
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1182 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1183 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Fûe_c2f
(
MPI_Fûe
 
fûe
);

1184 
OMPI_DECLSPEC
 
MPI_Fûe
 
MPI_Fûe_f2c
(
MPI_Föt
 
fûe
);

1185 
OMPI_DECLSPEC
 
MPI_Fûe_ˇŒ_îrh™dÀr
(
MPI_Fûe
 
fh
, 
îr‹code
);

1186 
OMPI_DECLSPEC
 
MPI_Fûe_¸óã_îrh™dÀr
(
MPI_Fûe_îrh™dÀr_‚
 *
fun˘i⁄
,

1187 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1188 
OMPI_DECLSPEC
 
MPI_Fûe_£t_îrh™dÀr
–
MPI_Fûe
 
fûe
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1189 
OMPI_DECLSPEC
 
MPI_Fûe_gë_îrh™dÀr
–
MPI_Fûe
 
fûe
, 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1190 
OMPI_DECLSPEC
 
MPI_Fûe_›í
(
MPI_Comm
 
comm
, *
fûíame
, 
amode
,

1191 
MPI_Info
 
öfo
, 
MPI_Fûe
 *
fh
);

1192 
OMPI_DECLSPEC
 
MPI_Fûe_˛o£
(
MPI_Fûe
 *
fh
);

1193 
OMPI_DECLSPEC
 
MPI_Fûe_dñëe
(*
fûíame
, 
MPI_Info
 
öfo
);

1194 
OMPI_DECLSPEC
 
MPI_Fûe_£t_size
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
size
);

1195 
OMPI_DECLSPEC
 
MPI_Fûe_¥óŒoˇã
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
size
);

1196 
OMPI_DECLSPEC
 
MPI_Fûe_gë_size
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
size
);

1197 
OMPI_DECLSPEC
 
MPI_Fûe_gë_group
(
MPI_Fûe
 
fh
, 
MPI_Group
 *
group
);

1198 
OMPI_DECLSPEC
 
MPI_Fûe_gë_amode
(
MPI_Fûe
 
fh
, *
amode
);

1199 
OMPI_DECLSPEC
 
MPI_Fûe_£t_öfo
(
MPI_Fûe
 
fh
, 
MPI_Info
 
öfo
);

1200 
OMPI_DECLSPEC
 
MPI_Fûe_gë_öfo
(
MPI_Fûe
 
fh
, 
MPI_Info
 *
öfo_u£d
);

1201 
OMPI_DECLSPEC
 
MPI_Fûe_£t_võw
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
di•
, 
MPI_D©©y≥
 
ëy≥
,

1202 
MPI_D©©y≥
 
fûëy≥
, *
d©¨ï
, 
MPI_Info
 
öfo
);

1203 
OMPI_DECLSPEC
 
MPI_Fûe_gë_võw
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
di•
,

1204 
MPI_D©©y≥
 *
ëy≥
,

1205 
MPI_D©©y≥
 *
fûëy≥
, *
d©¨ï
);

1206 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1207 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1208 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_©_Æl
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1209 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1210 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1211 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1212 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_©_Æl
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1213 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1214 
OMPI_DECLSPEC
 
MPI_Fûe_úód_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1215 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1216 
OMPI_DECLSPEC
 
MPI_Fûe_iwrôe_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1217 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1218 
OMPI_DECLSPEC
 
MPI_Fûe_ªad
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1219 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1220 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_Æl
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1221 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1222 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1223 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1224 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_Æl
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1225 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1226 
OMPI_DECLSPEC
 
MPI_Fûe_úód
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1227 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1228 
OMPI_DECLSPEC
 
MPI_Fûe_iwrôe
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1229 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1230 
OMPI_DECLSPEC
 
MPI_Fûe_£ek
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, 
whí˚
);

1231 
OMPI_DECLSPEC
 
MPI_Fûe_gë_posôi⁄
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
off£t
);

1232 
OMPI_DECLSPEC
 
MPI_Fûe_gë_byã_off£t
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
,

1233 
MPI_Off£t
 *
di•
);

1234 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1235 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1236 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1237 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1238 
OMPI_DECLSPEC
 
MPI_Fûe_úód_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1239 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1240 
OMPI_DECLSPEC
 
MPI_Fûe_iwrôe_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1241 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1242 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_‹dîed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1243 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1244 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_‹dîed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1245 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1246 
OMPI_DECLSPEC
 
MPI_Fûe_£ek_sh¨ed
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, 
whí˚
);

1247 
OMPI_DECLSPEC
 
MPI_Fûe_gë_posôi⁄_sh¨ed
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
off£t
);

1248 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_©_Æl_begö
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1249 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
);

1250 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_©_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1251 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_©_Æl_begö
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1252 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
);

1253 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_©_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1254 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_Æl_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1255 
MPI_D©©y≥
 
d©©y≥
);

1256 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1257 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_Æl_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1258 
MPI_D©©y≥
 
d©©y≥
);

1259 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1260 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_‹dîed_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1261 
MPI_D©©y≥
 
d©©y≥
);

1262 
OMPI_DECLSPEC
 
MPI_Fûe_ªad_‹dîed_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1263 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_‹dîed_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1264 
MPI_D©©y≥
 
d©©y≥
);

1265 
OMPI_DECLSPEC
 
MPI_Fûe_wrôe_‹dîed_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1266 
OMPI_DECLSPEC
 
MPI_Fûe_gë_ty≥_exã¡
(
MPI_Fûe
 
fh
, 
MPI_D©©y≥
 
d©©y≥
,

1267 
MPI_Aöt
 *
exã¡
);

1268 
OMPI_DECLSPEC
 
MPI_Fûe_£t_©omicôy
(
MPI_Fûe
 
fh
, 
Êag
);

1269 
OMPI_DECLSPEC
 
MPI_Fûe_gë_©omicôy
(
MPI_Fûe
 
fh
, *
Êag
);

1270 
OMPI_DECLSPEC
 
MPI_Fûe_sync
(
MPI_Fûe
 
fh
);

1274 
OMPI_DECLSPEC
 
MPI_FöÆize
();

1275 
OMPI_DECLSPEC
 
MPI_FöÆized
(*
Êag
);

1276 
OMPI_DECLSPEC
 
MPI_Fªe_mem
(*
ba£
);

1277 
OMPI_DECLSPEC
 
MPI_G©hî
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1278 *
ªcvbuf
, 
ªcvcou¡
, 
MPI_D©©y≥
 
ªcvty≥
,

1279 
roŸ
, 
MPI_Comm
 
comm
);

1280 
OMPI_DECLSPEC
 
MPI_G©hîv
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1281 *
ªcvbuf
, *
ªcvcou¡s
, *
di•ls
,

1282 
MPI_D©©y≥
 
ªcvty≥
, 
roŸ
, 
MPI_Comm
 
comm
);

1283 
OMPI_DECLSPEC
 
MPI_Gë_addªss
(*
loˇti⁄
, 
MPI_Aöt
 *
addªss
);

1284 
OMPI_DECLSPEC
 
MPI_Gë_cou¡
(
MPI_Sètus
 *
°©us
, 
MPI_D©©y≥
 
d©©y≥
, *
cou¡
);

1285 
OMPI_DECLSPEC
 
MPI_Gë_ñemíts
(
MPI_Sètus
 *
°©us
, 
MPI_D©©y≥
 
d©©y≥
, *
cou¡
);

1286 
OMPI_DECLSPEC
 
MPI_Gë
(*
‹igö_addr
, 
‹igö_cou¡
,

1287 
MPI_D©©y≥
 
‹igö_d©©y≥
, 
èrgë_ønk
,

1288 
MPI_Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

1289 
MPI_D©©y≥
 
èrgë_d©©y≥
, 
MPI_Wö
 
wö
);

1290 
OMPI_DECLSPEC
 
MPI_Gë_¥o˚ss‹_«me
(*
«me
, *
ªsu…Àn
);

1291 
OMPI_DECLSPEC
 
MPI_Gë_vîsi⁄
(*
vîsi⁄
, *
subvîsi⁄
);

1292 
OMPI_DECLSPEC
 
MPI_Gøph_¸óã
(
MPI_Comm
 
comm_ﬁd
, 
¬odes
, *
ödex
,

1293 *
edges
, 
ª‹dî
, 
MPI_Comm
 *
comm_gøph
);

1294 
OMPI_DECLSPEC
 
MPI_Gøph_gë
(
MPI_Comm
 
comm
, 
maxödex
, 
maxedges
,

1295 *
ödex
, *
edges
);

1296 
OMPI_DECLSPEC
 
MPI_Gøph_m≠
(
MPI_Comm
 
comm
, 
¬odes
, *
ödex
, *
edges
,

1297 *
√wønk
);

1298 
OMPI_DECLSPEC
 
MPI_Gøph_√ighb‹s_cou¡
(
MPI_Comm
 
comm
, 
ønk
, *
¬eighb‹s
);

1299 
OMPI_DECLSPEC
 
MPI_Gøph_√ighb‹s
(
MPI_Comm
 
comm
, 
ønk
, 
max√ighb‹s
,

1300 *
√ighb‹s
);

1301 
OMPI_DECLSPEC
 
MPI_Gøphdims_gë
(
MPI_Comm
 
comm
, *
¬odes
, *
√dges
);

1302 
OMPI_DECLSPEC
 
MPI_Gªque°_com∂ëe
(
MPI_Reque°
 
ªque°
);

1303 
OMPI_DECLSPEC
 
MPI_Gªque°_°¨t
(
MPI_Gªque°_quîy_fun˘i⁄
 *
quîy_‚
,

1304 
MPI_Gªque°_‰ì_fun˘i⁄
 *
‰ì_‚
,

1305 
MPI_Gªque°_ˇn˚l_fun˘i⁄
 *
ˇn˚l_‚
,

1306 *
exåa_°©e
, 
MPI_Reque°
 *
ªque°
);

1307 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Group_c2f
(
MPI_Group
 
group
);

1308 
OMPI_DECLSPEC
 
MPI_Group_com∑ª
(
MPI_Group
 
group1
, MPI_Grou∞
group2
, *
ªsu…
);

1309 
OMPI_DECLSPEC
 
MPI_Group_dif„ªn˚
(
MPI_Group
 
group1
, MPI_Grou∞
group2
,

1310 
MPI_Group
 *
√wgroup
);

1311 
OMPI_DECLSPEC
 
MPI_Group_ex˛
(
MPI_Group
 
group
, 
n
, *
ønks
,

1312 
MPI_Group
 *
√wgroup
);

1313 
OMPI_DECLSPEC
 
MPI_Group
 
MPI_Group_f2c
(
MPI_Föt
 
group
);

1314 
OMPI_DECLSPEC
 
MPI_Group_‰ì
(
MPI_Group
 *
group
);

1315 
OMPI_DECLSPEC
 
MPI_Group_ö˛
(
MPI_Group
 
group
, 
n
, *
ønks
,

1316 
MPI_Group
 *
√wgroup
);

1317 
OMPI_DECLSPEC
 
MPI_Group_öãr£˘i⁄
(
MPI_Group
 
group1
, MPI_Grou∞
group2
,

1318 
MPI_Group
 *
√wgroup
);

1319 
OMPI_DECLSPEC
 
MPI_Group_ønge_ex˛
(
MPI_Group
 
group
, 
n
, 
ønges
[][3],

1320 
MPI_Group
 *
√wgroup
);

1321 
OMPI_DECLSPEC
 
MPI_Group_ønge_ö˛
(
MPI_Group
 
group
, 
n
, 
ønges
[][3],

1322 
MPI_Group
 *
√wgroup
);

1323 
OMPI_DECLSPEC
 
MPI_Group_ønk
(
MPI_Group
 
group
, *
ønk
);

1324 
OMPI_DECLSPEC
 
MPI_Group_size
(
MPI_Group
 
group
, *
size
);

1325 
OMPI_DECLSPEC
 
MPI_Group_å™¶©e_ønks
(
MPI_Group
 
group1
, 
n
, *
ønks1
,

1326 
MPI_Group
 
group2
, *
ønks2
);

1327 
OMPI_DECLSPEC
 
MPI_Group_uni⁄
(
MPI_Group
 
group1
, MPI_Grou∞
group2
,

1328 
MPI_Group
 *
√wgroup
);

1329 
OMPI_DECLSPEC
 
MPI_Ib£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1330 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1331 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Info_c2f
(
MPI_Info
 
öfo
);

1332 
OMPI_DECLSPEC
 
MPI_Info_¸óã
(
MPI_Info
 *
öfo
);

1333 
OMPI_DECLSPEC
 
MPI_Info_dñëe
(
MPI_Info
 
öfo
, *
key
);

1334 
OMPI_DECLSPEC
 
MPI_Info_dup
(
MPI_Info
 
öfo
, MPI_Infÿ*
√wöfo
);

1335 
OMPI_DECLSPEC
 
MPI_Info
 
MPI_Info_f2c
(
MPI_Föt
 
öfo
);

1336 
OMPI_DECLSPEC
 
MPI_Info_‰ì
(
MPI_Info
 *
öfo
);

1337 
OMPI_DECLSPEC
 
MPI_Info_gë
(
MPI_Info
 
öfo
, *
key
, 
vÆuñí
,

1338 *
vÆue
, *
Êag
);

1339 
OMPI_DECLSPEC
 
MPI_Info_gë_nkeys
(
MPI_Info
 
öfo
, *
nkeys
);

1340 
OMPI_DECLSPEC
 
MPI_Info_gë_¡hkey
(
MPI_Info
 
öfo
, 
n
, *
key
);

1341 
OMPI_DECLSPEC
 
MPI_Info_gë_vÆuñí
(
MPI_Info
 
öfo
, *
key
, *
vÆuñí
,

1342 *
Êag
);

1343 
OMPI_DECLSPEC
 
MPI_Info_£t
(
MPI_Info
 
öfo
, *
key
, *
vÆue
);

1344 
OMPI_DECLSPEC
 
MPI_Inô
(*
¨gc
, ***
¨gv
);

1345 
OMPI_DECLSPEC
 
MPI_Inôülized
(*
Êag
);

1346 
OMPI_DECLSPEC
 
MPI_Inô_thªad
(*
¨gc
, ***
¨gv
, 
ªquúed
,

1347 *
¥ovided
);

1348 
OMPI_DECLSPEC
 
MPI_I¡îcomm_¸óã
(
MPI_Comm
 
loˇl_comm
, 
loˇl_Àadî
,

1349 
MPI_Comm
 
bridge_comm
, 
ªmŸe_Àadî
,

1350 
èg
, 
MPI_Comm
 *
√wöãrcomm
);

1351 
OMPI_DECLSPEC
 
MPI_I¡îcomm_mîge
(
MPI_Comm
 
öãrcomm
, 
high
,

1352 
MPI_Comm
 *
√wöãrcomm
);

1353 
OMPI_DECLSPEC
 
MPI_I¥obe
(
sour˚
, 
èg
, 
MPI_Comm
 
comm
, *
Êag
,

1354 
MPI_Sètus
 *
°©us
);

1355 
OMPI_DECLSPEC
 
MPI_Iªcv
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
sour˚
,

1356 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1357 
OMPI_DECLSPEC
 
MPI_Ir£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1358 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1359 
OMPI_DECLSPEC
 
MPI_I£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1360 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1361 
OMPI_DECLSPEC
 
MPI_Is£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1362 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1363 
OMPI_DECLSPEC
 
MPI_Is_thªad_maö
(*
Êag
);

1364 
OMPI_DECLSPEC
 
MPI_KeyvÆ_¸óã
(
MPI_C›y_fun˘i⁄
 *
c›y_‚
,

1365 
MPI_Dñëe_fun˘i⁄
 *
dñëe_‚
,

1366 *
keyvÆ
, *
exåa_°©e
);

1367 
OMPI_DECLSPEC
 
MPI_KeyvÆ_‰ì
(*
keyvÆ
);

1368 
OMPI_DECLSPEC
 
MPI_Lookup_«me
(*
£rvi˚_«me
, 
MPI_Info
 
öfo
, *
p‹t_«me
);

1369 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Op_c2f
(
MPI_Op
 
›
);

1370 
OMPI_DECLSPEC
 
MPI_Op_¸óã
(
MPI_U£r_fun˘i⁄
 *
fun˘i⁄
, 
commuã
, 
MPI_Op
 *
›
);

1371 
OMPI_DECLSPEC
 
MPI_O≥n_p‹t
(
MPI_Info
 
öfo
, *
p‹t_«me
);

1372 
OMPI_DECLSPEC
 
MPI_Op
 
MPI_Op_f2c
(
MPI_Föt
 
›
);

1373 
OMPI_DECLSPEC
 
MPI_Op_‰ì
(
MPI_Op
 *
›
);

1374 
OMPI_DECLSPEC
 
MPI_Pack_exã∫Æ
(*
d©¨ï
, *
öbuf
, 
öcou¡
,

1375 
MPI_D©©y≥
 
d©©y≥
, *
outbuf
,

1376 
MPI_Aöt
 
outsize
, MPI_Aöà*
posôi⁄
);

1377 
OMPI_DECLSPEC
 
MPI_Pack_exã∫Æ_size
(*
d©¨ï
, 
öcou¡
,

1378 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Aöt
 *
size
);

1379 
OMPI_DECLSPEC
 
MPI_Pack
(*
öbuf
, 
öcou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1380 *
outbuf
, 
outsize
, *
posôi⁄
, 
MPI_Comm
 
comm
);

1381 
OMPI_DECLSPEC
 
MPI_Pack_size
(
öcou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Comm
 
comm
,

1382 *
size
);

1383 
OMPI_DECLSPEC
 
MPI_Pc⁄åﬁ
(c⁄° 
Àvñ
, ...);

1384 
OMPI_DECLSPEC
 
MPI_Probe
(
sour˚
, 
èg
, 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1385 
OMPI_DECLSPEC
 
MPI_Publish_«me
(*
£rvi˚_«me
, 
MPI_Info
 
öfo
,

1386 *
p‹t_«me
);

1387 
OMPI_DECLSPEC
 
MPI_Put
(*
‹igö_addr
, 
‹igö_cou¡
, 
MPI_D©©y≥
 
‹igö_d©©y≥
,

1388 
èrgë_ønk
, 
MPI_Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

1389 
MPI_D©©y≥
 
èrgë_d©©y≥
, 
MPI_Wö
 
wö
);

1390 
OMPI_DECLSPEC
 
MPI_Quîy_thªad
(*
¥ovided
);

1391 
OMPI_DECLSPEC
 
MPI_Recv_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
sour˚
,

1392 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1393 
OMPI_DECLSPEC
 
MPI_Recv
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
sour˚
,

1394 
èg
, 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1395 
OMPI_DECLSPEC
 
MPI_Redu˚
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1396 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
roŸ
, 
MPI_Comm
 
comm
);

1397 
OMPI_DECLSPEC
 
MPI_Redu˚_sˇâî
(*
£ndbuf
, *
ªcvbuf
, *
ªcvcou¡s
,

1398 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1399 
OMPI_DECLSPEC
 
MPI_Regi°î_d©¨ï
(*
d©¨ï
,

1400 
MPI_D©¨ï_c⁄vîsi⁄_fun˘i⁄
 *
ªad_c⁄vîsi⁄_‚
,

1401 
MPI_D©¨ï_c⁄vîsi⁄_fun˘i⁄
 *
wrôe_c⁄vîsi⁄_‚
,

1402 
MPI_D©¨ï_exã¡_fun˘i⁄
 *
dty≥_fûe_exã¡_‚
,

1403 *
exåa_°©e
);

1404 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Reque°_c2f
(
MPI_Reque°
 
ªque°
);

1405 
OMPI_DECLSPEC
 
MPI_Reque°
 
MPI_Reque°_f2c
(
MPI_Föt
 
ªque°
);

1406 
OMPI_DECLSPEC
 
MPI_Reque°_‰ì
(
MPI_Reque°
 *
ªque°
);

1407 
OMPI_DECLSPEC
 
MPI_Reque°_gë_°©us
(
MPI_Reque°
 
ªque°
, *
Êag
,

1408 
MPI_Sètus
 *
°©us
);

1409 
OMPI_DECLSPEC
 
MPI_R£nd
(*
ibuf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1410 
èg
, 
MPI_Comm
 
comm
);

1411 
OMPI_DECLSPEC
 
MPI_R£nd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1412 
de°
, 
èg
, 
MPI_Comm
 
comm
,

1413 
MPI_Reque°
 *
ªque°
);

1414 
OMPI_DECLSPEC
 
MPI_Sˇn
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1415 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1416 
OMPI_DECLSPEC
 
MPI_Sˇâî
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1417 *
ªcvbuf
, 
ªcvcou¡
, 
MPI_D©©y≥
 
ªcvty≥
,

1418 
roŸ
, 
MPI_Comm
 
comm
);

1419 
OMPI_DECLSPEC
 
MPI_Sˇâîv
(*
£ndbuf
, *
£ndcou¡s
, *
di•ls
,

1420 
MPI_D©©y≥
 
£ndty≥
, *
ªcvbuf
, 
ªcvcou¡
,

1421 
MPI_D©©y≥
 
ªcvty≥
, 
roŸ
, 
MPI_Comm
 
comm
);

1422 
OMPI_DECLSPEC
 
MPI_Síd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1423 
de°
, 
èg
, 
MPI_Comm
 
comm
,

1424 
MPI_Reque°
 *
ªque°
);

1425 
OMPI_DECLSPEC
 
MPI_Síd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1426 
èg
, 
MPI_Comm
 
comm
);

1427 
OMPI_DECLSPEC
 
MPI_Sídªcv
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1428 
de°
, 
£ndèg
, *
ªcvbuf
, 
ªcvcou¡
,

1429 
MPI_D©©y≥
 
ªcvty≥
, 
sour˚
, 
ªcvèg
,

1430 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1431 
OMPI_DECLSPEC
 
MPI_Sídªcv_ª∂a˚
(* 
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1432 
de°
, 
£ndèg
, 
sour˚
, 
ªcvèg
,

1433 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1434 
OMPI_DECLSPEC
 
MPI_S£nd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1435 
de°
, 
èg
, 
MPI_Comm
 
comm
,

1436 
MPI_Reque°
 *
ªque°
);

1437 
OMPI_DECLSPEC
 
MPI_S£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1438 
èg
, 
MPI_Comm
 
comm
);

1439 
OMPI_DECLSPEC
 
MPI_Sèπ
(
MPI_Reque°
 *
ªque°
);

1440 
OMPI_DECLSPEC
 
MPI_SèπÆl
(
cou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
);

1441 
OMPI_DECLSPEC
 
MPI_Sètus_c2f
(
MPI_Sètus
 *
c_°©us
, 
MPI_Föt
 *
f_°©us
);

1442 
OMPI_DECLSPEC
 
MPI_Sètus_f2c
(
MPI_Föt
 *
f_°©us
, 
MPI_Sètus
 *
c_°©us
);

1443 
OMPI_DECLSPEC
 
MPI_Sètus_£t_ˇn˚Œed
(
MPI_Sètus
 *
°©us
, 
Êag
);

1444 
OMPI_DECLSPEC
 
MPI_Sètus_£t_ñemíts
(
MPI_Sètus
 *
°©us
, 
MPI_D©©y≥
 
d©©y≥
,

1445 
cou¡
);

1446 
OMPI_DECLSPEC
 
MPI_Te°Æl
(
cou¡
, 
MPI_Reque°
 
¨øy_of_ªque°s
[], *
Êag
,

1447 
MPI_Sètus
 
¨øy_of_°©u£s
[]);

1448 
OMPI_DECLSPEC
 
MPI_Te°™y
(
cou¡
, 
MPI_Reque°
 
¨øy_of_ªque°s
[], *
ödex
,

1449 *
Êag
, 
MPI_Sètus
 *
°©us
);

1450 
OMPI_DECLSPEC
 
MPI_Te°
(
MPI_Reque°
 *
ªque°
, *
Êag
, 
MPI_Sètus
 *
°©us
);

1451 
OMPI_DECLSPEC
 
MPI_Te°_ˇn˚Œed
(
MPI_Sètus
 *
°©us
, *
Êag
);

1452 
OMPI_DECLSPEC
 
MPI_Te°some
(
öcou¡
, 
MPI_Reque°
 
¨øy_of_ªque°s
[],

1453 *
outcou¡
, 
¨øy_of_ödi˚s
[],

1454 
MPI_Sètus
 
¨øy_of_°©u£s
[]);

1455 
OMPI_DECLSPEC
 
MPI_T›o_ã°
(
MPI_Comm
 
comm
, *
°©us
);

1456 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Ty≥_c2f
(
MPI_D©©y≥
 
d©©y≥
);

1457 
OMPI_DECLSPEC
 
MPI_Ty≥_commô
(
MPI_D©©y≥
 *
ty≥
);

1458 
OMPI_DECLSPEC
 
MPI_Ty≥_c⁄tiguous
(
cou¡
, 
MPI_D©©y≥
 
ﬁdty≥
,

1459 
MPI_D©©y≥
 *
√wty≥
);

1460 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_d¨øy
(
size
, 
ønk
, 
ndims
,

1461 
gsize_¨øy
[], 
di°rib_¨øy
[],

1462 
d¨g_¨øy
[], 
psize_¨øy
[],

1463 
‹dî
, 
MPI_D©©y≥
 
ﬁdty≥
,

1464 
MPI_D©©y≥
 *
√wty≥
);

1465 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_f90_com∂ex
(
p
, 
r
, 
MPI_D©©y≥
 *
√wty≥
);

1466 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_f90_öãgî
(
r
, 
MPI_D©©y≥
 *
√wty≥
);

1467 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_f90_ªÆ
(
p
, 
r
, 
MPI_D©©y≥
 *
√wty≥
);

1468 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_hödexed
(
cou¡
, 
¨øy_of_blockÀngths
[],

1469 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

1470 
MPI_D©©y≥
 
ﬁdty≥
,

1471 
MPI_D©©y≥
 *
√wty≥
);

1472 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_hve˘‹
(
cou¡
, 
blockÀngth
, 
MPI_Aöt
 
°ride
,

1473 
MPI_D©©y≥
 
ﬁdty≥
,

1474 
MPI_D©©y≥
 *
√wty≥
);

1475 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
 *
ty≥_c›y_©å_‚
,

1476 
MPI_Ty≥_dñëe_©å_fun˘i⁄
 *
ty≥_dñëe_©å_‚
,

1477 *
ty≥_keyvÆ
, *
exåa_°©e
);

1478 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_ödexed_block
(
cou¡
, 
blockÀngth
,

1479 
¨øy_of_di•œ˚míts
[],

1480 
MPI_D©©y≥
 
ﬁdty≥
,

1481 
MPI_D©©y≥
 *
√wty≥
);

1482 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_°ru˘
(
cou¡
, 
¨øy_of_block_Àngths
[],

1483 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

1484 
MPI_D©©y≥
 
¨øy_of_ty≥s
[],

1485 
MPI_D©©y≥
 *
√wty≥
);

1486 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_sub¨øy
(
ndims
, 
size_¨øy
[], 
subsize_¨øy
[],

1487 
°¨t_¨øy
[], 
‹dî
,

1488 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

1489 
OMPI_DECLSPEC
 
MPI_Ty≥_¸óã_ªsized
(
MPI_D©©y≥
 
ﬁdty≥
, 
MPI_Aöt
 
lb
,

1490 
MPI_Aöt
 
exã¡
, 
MPI_D©©y≥
 *
√wty≥
);

1491 
OMPI_DECLSPEC
 
MPI_Ty≥_dñëe_©å
(
MPI_D©©y≥
 
ty≥
, 
ty≥_keyvÆ
);

1492 
OMPI_DECLSPEC
 
MPI_Ty≥_dup
(
MPI_D©©y≥
 
ty≥
, MPI_D©©y≥ *
√wty≥
);

1493 
OMPI_DECLSPEC
 
MPI_Ty≥_exã¡
(
MPI_D©©y≥
 
ty≥
, 
MPI_Aöt
 *
exã¡
);

1494 
OMPI_DECLSPEC
 
MPI_Ty≥_‰ì
(
MPI_D©©y≥
 *
ty≥
);

1495 
OMPI_DECLSPEC
 
MPI_Ty≥_‰ì_keyvÆ
(*
ty≥_keyvÆ
);

1496 
OMPI_DECLSPEC
 
MPI_D©©y≥
 
MPI_Ty≥_f2c
(
MPI_Föt
 
d©©y≥
);

1497 
OMPI_DECLSPEC
 
MPI_Ty≥_gë_©å
(
MPI_D©©y≥
 
ty≥
, 
ty≥_keyvÆ
,

1498 *
©åibuã_vÆ
, *
Êag
);

1499 
OMPI_DECLSPEC
 
MPI_Ty≥_gë_c⁄ã¡s
(
MPI_D©©y≥
 
mty≥
, 
max_öãgîs
,

1500 
max_addªs£s
, 
max_d©©y≥s
,

1501 
¨øy_of_öãgîs
[],

1502 
MPI_Aöt
 
¨øy_of_addªs£s
[],

1503 
MPI_D©©y≥
 
¨øy_of_d©©y≥s
[]);

1504 
OMPI_DECLSPEC
 
MPI_Ty≥_gë_ívñ›e
(
MPI_D©©y≥
 
ty≥
, *
num_öãgîs
,

1505 *
num_addªs£s
, *
num_d©©y≥s
,

1506 *
comböî
);

1507 
OMPI_DECLSPEC
 
MPI_Ty≥_gë_exã¡
(
MPI_D©©y≥
 
ty≥
, 
MPI_Aöt
 *
lb
,

1508 
MPI_Aöt
 *
exã¡
);

1509 
OMPI_DECLSPEC
 
MPI_Ty≥_gë_«me
(
MPI_D©©y≥
 
ty≥
, *
ty≥_«me
,

1510 *
ªsu…Àn
);

1511 
OMPI_DECLSPEC
 
MPI_Ty≥_gë_åue_exã¡
(
MPI_D©©y≥
 
d©©y≥
, 
MPI_Aöt
 *
åue_lb
,

1512 
MPI_Aöt
 *
åue_exã¡
);

1513 
OMPI_DECLSPEC
 
MPI_Ty≥_hödexed
(
cou¡
, 
¨øy_of_blockÀngths
[],

1514 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

1515 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

1516 
OMPI_DECLSPEC
 
MPI_Ty≥_hve˘‹
(
cou¡
, 
blockÀngth
, 
MPI_Aöt
 
°ride
,

1517 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

1518 
OMPI_DECLSPEC
 
MPI_Ty≥_ödexed
(
cou¡
, 
¨øy_of_blockÀngths
[],

1519 
¨øy_of_di•œ˚míts
[],

1520 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

1521 
OMPI_DECLSPEC
 
MPI_Ty≥_lb
(
MPI_D©©y≥
 
ty≥
, 
MPI_Aöt
 *
lb
);

1522 
OMPI_DECLSPEC
 
MPI_Ty≥_m©ch_size
(
ty≥˛ass
, 
size
, 
MPI_D©©y≥
 *
ty≥
);

1523 
OMPI_DECLSPEC
 
MPI_Ty≥_£t_©å
(
MPI_D©©y≥
 
ty≥
, 
ty≥_keyvÆ
,

1524 *
©å_vÆ
);

1525 
OMPI_DECLSPEC
 
MPI_Ty≥_£t_«me
(
MPI_D©©y≥
 
ty≥
, *
ty≥_«me
);

1526 
OMPI_DECLSPEC
 
MPI_Ty≥_size
(
MPI_D©©y≥
 
ty≥
, *
size
);

1527 
OMPI_DECLSPEC
 
MPI_Ty≥_°ru˘
(
cou¡
, 
¨øy_of_blockÀngths
[],

1528 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

1529 
MPI_D©©y≥
 
¨øy_of_ty≥s
[],

1530 
MPI_D©©y≥
 *
√wty≥
);

1531 
OMPI_DECLSPEC
 
MPI_Ty≥_ub
(
MPI_D©©y≥
 
mty≥
, 
MPI_Aöt
 *
ub
);

1532 
OMPI_DECLSPEC
 
MPI_Ty≥_ve˘‹
(
cou¡
, 
blockÀngth
, 
°ride
,

1533 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

1534 
OMPI_DECLSPEC
 
MPI_U≈ack
(*
öbuf
, 
ösize
, *
posôi⁄
,

1535 *
outbuf
, 
outcou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1536 
MPI_Comm
 
comm
);

1537 
OMPI_DECLSPEC
 
MPI_U≈ublish_«me
(*
£rvi˚_«me
, 
MPI_Info
 
öfo
, *
p‹t_«me
);

1538 
OMPI_DECLSPEC
 
MPI_U≈ack_exã∫Æ
 (*
d©¨ï
, *
öbuf
, 
MPI_Aöt
 
ösize
,

1539 
MPI_Aöt
 *
posôi⁄
, *
outbuf
, 
outcou¡
,

1540 
MPI_D©©y≥
 
d©©y≥
);

1541 
OMPI_DECLSPEC
 
MPI_WaôÆl
(
cou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
,

1542 
MPI_Sètus
 *
¨øy_of_°©u£s
);

1543 
OMPI_DECLSPEC
 
MPI_Waô™y
(
cou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
,

1544 *
ödex
, 
MPI_Sètus
 *
°©us
);

1545 
OMPI_DECLSPEC
 
MPI_Waô
(
MPI_Reque°
 *
ªque°
, 
MPI_Sètus
 *
°©us
);

1546 
OMPI_DECLSPEC
 
MPI_Waôsome
(
öcou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
,

1547 *
outcou¡
, *
¨øy_of_ödi˚s
,

1548 
MPI_Sètus
 *
¨øy_of_°©u£s
);

1549 
OMPI_DECLSPEC
 
MPI_Föt
 
MPI_Wö_c2f
(
MPI_Wö
 
wö
);

1550 
OMPI_DECLSPEC
 
MPI_Wö_ˇŒ_îrh™dÀr
(
MPI_Wö
 
wö
, 
îr‹code
);

1551 
OMPI_DECLSPEC
 
MPI_Wö_com∂ëe
(
MPI_Wö
 
wö
);

1552 
OMPI_DECLSPEC
 
MPI_Wö_¸óã
(*
ba£
, 
MPI_Aöt
 
size
, 
di•_unô
,

1553 
MPI_Info
 
öfo
, 
MPI_Comm
 
comm
, 
MPI_Wö
 *
wö
);

1554 
OMPI_DECLSPEC
 
MPI_Wö_¸óã_îrh™dÀr
(
MPI_Wö_îrh™dÀr_‚
 *
fun˘i⁄
,

1555 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1556 
OMPI_DECLSPEC
 
MPI_Wö_¸óã_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
 *
wö_c›y_©å_‚
,

1557 
MPI_Wö_dñëe_©å_fun˘i⁄
 *
wö_dñëe_©å_‚
,

1558 *
wö_keyvÆ
, *
exåa_°©e
);

1559 
OMPI_DECLSPEC
 
MPI_Wö_dñëe_©å
(
MPI_Wö
 
wö
, 
wö_keyvÆ
);

1560 
OMPI_DECLSPEC
 
MPI_Wö
 
MPI_Wö_f2c
(
MPI_Föt
 
wö
);

1561 
OMPI_DECLSPEC
 
MPI_Wö_„n˚
(
as£π
, 
MPI_Wö
 
wö
);

1562 
OMPI_DECLSPEC
 
MPI_Wö_‰ì
(
MPI_Wö
 *
wö
);

1563 
OMPI_DECLSPEC
 
MPI_Wö_‰ì_keyvÆ
(*
wö_keyvÆ
);

1564 
OMPI_DECLSPEC
 
MPI_Wö_gë_©å
(
MPI_Wö
 
wö
, 
wö_keyvÆ
,

1565 *
©åibuã_vÆ
, *
Êag
);

1566 
OMPI_DECLSPEC
 
MPI_Wö_gë_îrh™dÀr
(
MPI_Wö
 
wö
, 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1567 
OMPI_DECLSPEC
 
MPI_Wö_gë_group
(
MPI_Wö
 
wö
, 
MPI_Group
 *
group
);

1568 
OMPI_DECLSPEC
 
MPI_Wö_gë_«me
(
MPI_Wö
 
wö
, *
wö_«me
, *
ªsu…Àn
);

1569 
OMPI_DECLSPEC
 
MPI_Wö_lock
(
lock_ty≥
, 
ønk
, 
as£π
, 
MPI_Wö
 
wö
);

1570 
OMPI_DECLSPEC
 
MPI_Wö_po°
(
MPI_Group
 
group
, 
as£π
, 
MPI_Wö
 
wö
);

1571 
OMPI_DECLSPEC
 
MPI_Wö_£t_©å
(
MPI_Wö
 
wö
, 
wö_keyvÆ
, *
©åibuã_vÆ
);

1572 
OMPI_DECLSPEC
 
MPI_Wö_£t_îrh™dÀr
(
MPI_Wö
 
wö
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1573 
OMPI_DECLSPEC
 
MPI_Wö_£t_«me
(
MPI_Wö
 
wö
, *
wö_«me
);

1574 
OMPI_DECLSPEC
 
MPI_Wö_°¨t
(
MPI_Group
 
group
, 
as£π
, 
MPI_Wö
 
wö
);

1575 
OMPI_DECLSPEC
 
MPI_Wö_ã°
(
MPI_Wö
 
wö
, *
Êag
);

1576 
OMPI_DECLSPEC
 
MPI_Wö_u∆ock
(
ønk
, 
MPI_Wö
 
wö
);

1577 
OMPI_DECLSPEC
 
MPI_Wö_waô
(
MPI_Wö
 
wö
);

1578 
OMPI_DECLSPEC
 
MPI_Wtick
();

1579 
OMPI_DECLSPEC
 
MPI_Wtime
();

1585 
OMPI_DECLSPEC
 
PMPI_Ab‹t
(
MPI_Comm
 
comm
, 
îr‹code
);

1586 
OMPI_DECLSPEC
 
PMPI_Accumuœã
(*
‹igö_addr
, 
‹igö_cou¡
, 
MPI_D©©y≥
 
‹igö_d©©y≥
,

1587 
èrgë_ønk
, 
MPI_Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

1588 
MPI_D©©y≥
 
èrgë_d©©y≥
, 
MPI_Op
 
›
, 
MPI_Wö
 
wö
);

1589 
OMPI_DECLSPEC
 
PMPI_Add_îr‹_˛ass
(*
îr‹˛ass
);

1590 
OMPI_DECLSPEC
 
PMPI_Add_îr‹_code
(
îr‹˛ass
, *
îr‹code
);

1591 
OMPI_DECLSPEC
 
PMPI_Add_îr‹_°rög
(
îr‹code
, *
°rög
);

1592 
OMPI_DECLSPEC
 
PMPI_Addªss
(*
loˇti⁄
, 
MPI_Aöt
 *
addªss
);

1593 
OMPI_DECLSPEC
 
PMPI_AŒg©hî
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1594 *
ªcvbuf
, 
ªcvcou¡
,

1595 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1596 
OMPI_DECLSPEC
 
PMPI_AŒg©hîv
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1597 *
ªcvbuf
, *
ªcvcou¡s
,

1598 *
di•ls
, 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1599 
OMPI_DECLSPEC
 
PMPI_AŒoc_mem
(
MPI_Aöt
 
size
, 
MPI_Info
 
öfo
,

1600 *
ba£±r
);

1601 
OMPI_DECLSPEC
 
PMPI_AŒªdu˚
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1602 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1603 
OMPI_DECLSPEC
 
PMPI_AŒtﬂŒ
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1604 *
ªcvbuf
, 
ªcvcou¡
,

1605 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1606 
OMPI_DECLSPEC
 
PMPI_AŒtﬂŒv
(*
£ndbuf
, *
£ndcou¡s
, *
sdi•ls
,

1607 
MPI_D©©y≥
 
£ndty≥
, *
ªcvbuf
, *
ªcvcou¡s
,

1608 *
rdi•ls
, 
MPI_D©©y≥
 
ªcvty≥
, 
MPI_Comm
 
comm
);

1609 
OMPI_DECLSPEC
 
PMPI_AŒtﬂŒw
(*
£ndbuf
, *
£ndcou¡s
, *
sdi•ls
, 
MPI_D©©y≥
 *
£ndty≥s
,

1610 *
ªcvbuf
, *
ªcvcou¡s
, *
rdi•ls
, 
MPI_D©©y≥
 *
ªcvty≥s
,

1611 
MPI_Comm
 
comm
);

1612 
OMPI_DECLSPEC
 
PMPI_Aâr_dñëe
(
MPI_Comm
 
comm
, 
keyvÆ
);

1613 
OMPI_DECLSPEC
 
PMPI_Aâr_gë
(
MPI_Comm
 
comm
, 
keyvÆ
, *
©åibuã_vÆ
, *
Êag
);

1614 
OMPI_DECLSPEC
 
PMPI_Aâr_put
(
MPI_Comm
 
comm
, 
keyvÆ
, *
©åibuã_vÆ
);

1615 
OMPI_DECLSPEC
 
PMPI_B¨rõr
(
MPI_Comm
 
comm
);

1616 
OMPI_DECLSPEC
 
PMPI_Bˇ°
(*
buf„r
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1617 
roŸ
, 
MPI_Comm
 
comm
);

1618 
OMPI_DECLSPEC
 
PMPI_B£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1619 
de°
, 
èg
, 
MPI_Comm
 
comm
);

1620 
OMPI_DECLSPEC
 
PMPI_B£nd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1621 
de°
, 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1622 
OMPI_DECLSPEC
 
PMPI_Buf„r_©èch
(*
buf„r
, 
size
);

1623 
OMPI_DECLSPEC
 
PMPI_Buf„r_dëach
(*
buf„r
, *
size
);

1624 
OMPI_DECLSPEC
 
PMPI_C™˚l
(
MPI_Reque°
 *
ªque°
);

1625 
OMPI_DECLSPEC
 
PMPI_C¨t_co‹ds
(
MPI_Comm
 
comm
, 
ønk
, 
maxdims
, *
co‹ds
);

1626 
OMPI_DECLSPEC
 
PMPI_C¨t_¸óã
(
MPI_Comm
 
ﬁd_comm
, 
ndims
, *
dims
,

1627 *
≥riods
, 
ª‹dî
, 
MPI_Comm
 *
comm_ˇπ
);

1628 
OMPI_DECLSPEC
 
PMPI_C¨t_gë
(
MPI_Comm
 
comm
, 
maxdims
, *
dims
,

1629 *
≥riods
, *
co‹ds
);

1630 
OMPI_DECLSPEC
 
PMPI_C¨t_m≠
(
MPI_Comm
 
comm
, 
ndims
, *
dims
,

1631 *
≥riods
, *
√wønk
);

1632 
OMPI_DECLSPEC
 
PMPI_C¨t_ønk
(
MPI_Comm
 
comm
, *
co‹ds
, *
ønk
);

1633 
OMPI_DECLSPEC
 
PMPI_C¨t_shi·
(
MPI_Comm
 
comm
, 
dúe˘i⁄
, 
di•
,

1634 *
ønk_sour˚
, *
ønk_de°
);

1635 
OMPI_DECLSPEC
 
PMPI_C¨t_sub
(
MPI_Comm
 
comm
, *
ªmaö_dims
, MPI_Comm *
√w_comm
);

1636 
OMPI_DECLSPEC
 
PMPI_C¨tdim_gë
(
MPI_Comm
 
comm
, *
ndims
);

1637 
OMPI_DECLSPEC
 
PMPI_Clo£_p‹t
(*
p‹t_«me
);

1638 
OMPI_DECLSPEC
 
PMPI_Comm_ac˚±
(*
p‹t_«me
, 
MPI_Info
 
öfo
, 
roŸ
,

1639 
MPI_Comm
 
comm
, MPI_Comm *
√wcomm
);

1640 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Comm_c2f
(
MPI_Comm
 
comm
);

1641 
OMPI_DECLSPEC
 
PMPI_Comm_ˇŒ_îrh™dÀr
(
MPI_Comm
 
comm
, 
îr‹code
);

1642 
OMPI_DECLSPEC
 
PMPI_Comm_com∑ª
(
MPI_Comm
 
comm1
, MPI_Comm 
comm2
, *
ªsu…
);

1643 
OMPI_DECLSPEC
 
PMPI_Comm_c⁄√˘
(*
p‹t_«me
, 
MPI_Info
 
öfo
, 
roŸ
,

1644 
MPI_Comm
 
comm
, MPI_Comm *
√wcomm
);

1645 
OMPI_DECLSPEC
 
PMPI_Comm_¸óã_îrh™dÀr
(
MPI_Comm_îrh™dÀr_‚
 *
fun˘i⁄
,

1646 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1647 
OMPI_DECLSPEC
 
PMPI_Comm_¸óã_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
 *
comm_c›y_©å_‚
,

1648 
MPI_Comm_dñëe_©å_fun˘i⁄
 *
comm_dñëe_©å_‚
,

1649 *
comm_keyvÆ
, *
exåa_°©e
);

1650 
OMPI_DECLSPEC
 
PMPI_Comm_¸óã
(
MPI_Comm
 
comm
, 
MPI_Group
 
group
, MPI_Comm *
√wcomm
);

1651 
OMPI_DECLSPEC
 
PMPI_Comm_dñëe_©å
(
MPI_Comm
 
comm
, 
comm_keyvÆ
);

1652 
OMPI_DECLSPEC
 
PMPI_Comm_disc⁄√˘
(
MPI_Comm
 *
comm
);

1653 
OMPI_DECLSPEC
 
PMPI_Comm_dup
(
MPI_Comm
 
comm
, MPI_Comm *
√wcomm
);

1654 
OMPI_DECLSPEC
 
MPI_Comm
 
PMPI_Comm_f2c
(
MPI_Föt
 
comm
);

1655 
OMPI_DECLSPEC
 
PMPI_Comm_‰ì_keyvÆ
(*
comm_keyvÆ
);

1656 
OMPI_DECLSPEC
 
PMPI_Comm_‰ì
(
MPI_Comm
 *
comm
);

1657 
OMPI_DECLSPEC
 
PMPI_Comm_gë_©å
(
MPI_Comm
 
comm
, 
comm_keyvÆ
,

1658 *
©åibuã_vÆ
, *
Êag
);

1659 
OMPI_DECLSPEC
 
PMPI_Comm_gë_îrh™dÀr
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 *
îh™dÀr
);

1660 
OMPI_DECLSPEC
 
PMPI_Comm_gë_«me
(
MPI_Comm
 
comm
, *
comm_«me
, *
ªsu…Àn
);

1661 
OMPI_DECLSPEC
 
PMPI_Comm_gë_∑ª¡
(
MPI_Comm
 *
∑ª¡
);

1662 
OMPI_DECLSPEC
 
PMPI_Comm_group
(
MPI_Comm
 
comm
, 
MPI_Group
 *
group
);

1663 
OMPI_DECLSPEC
 
PMPI_Comm_joö
(
fd
, 
MPI_Comm
 *
öãrcomm
);

1664 
OMPI_DECLSPEC
 
PMPI_Comm_ønk
(
MPI_Comm
 
comm
, *
ønk
);

1665 
OMPI_DECLSPEC
 
PMPI_Comm_ªmŸe_group
(
MPI_Comm
 
comm
, 
MPI_Group
 *
group
);

1666 
OMPI_DECLSPEC
 
PMPI_Comm_ªmŸe_size
(
MPI_Comm
 
comm
, *
size
);

1667 
OMPI_DECLSPEC
 
PMPI_Comm_£t_©å
(
MPI_Comm
 
comm
, 
comm_keyvÆ
, *
©åibuã_vÆ
);

1668 
OMPI_DECLSPEC
 
PMPI_Comm_£t_îrh™dÀr
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1669 
OMPI_DECLSPEC
 
PMPI_Comm_£t_«me
(
MPI_Comm
 
comm
, *
comm_«me
);

1670 
OMPI_DECLSPEC
 
PMPI_Comm_size
(
MPI_Comm
 
comm
, *
size
);

1671 
OMPI_DECLSPEC
 
PMPI_Comm_•awn
(*
comm™d
, **
¨gv
, 
max¥ocs
, 
MPI_Info
 
öfo
,

1672 
roŸ
, 
MPI_Comm
 
comm
, MPI_Comm *
öãrcomm
,

1673 *
¨øy_of_îrcodes
);

1674 
OMPI_DECLSPEC
 
PMPI_Comm_•awn_mu…ùÀ
(
cou¡
, **
¨øy_of_comm™ds
, ***
¨øy_of_¨gv
,

1675 *
¨øy_of_max¥ocs
, 
MPI_Info
 *
¨øy_of_öfo
,

1676 
roŸ
, 
MPI_Comm
 
comm
, MPI_Comm *
öãrcomm
,

1677 *
¨øy_of_îrcodes
);

1678 
OMPI_DECLSPEC
 
PMPI_Comm_•lô
(
MPI_Comm
 
comm
, 
cﬁ‹
, 
key
, MPI_Comm *
√wcomm
);

1679 
OMPI_DECLSPEC
 
PMPI_Comm_ã°_öãr
(
MPI_Comm
 
comm
, *
Êag
);

1680 
OMPI_DECLSPEC
 
PMPI_Dims_¸óã
(
¬odes
, 
ndims
, *
dims
);

1681 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Eºh™dÀr_c2f
(
MPI_Eºh™dÀr
 
îrh™dÀr
);

1682 
OMPI_DECLSPEC
 
PMPI_Eºh™dÀr_¸óã
(
MPI_H™dÀr_fun˘i⁄
 *
fun˘i⁄
,

1683 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1684 
OMPI_DECLSPEC
 
MPI_Eºh™dÀr
 
PMPI_Eºh™dÀr_f2c
(
MPI_Föt
 
îrh™dÀr
);

1685 
OMPI_DECLSPEC
 
PMPI_Eºh™dÀr_‰ì
(
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1686 
OMPI_DECLSPEC
 
PMPI_Eºh™dÀr_gë
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1687 
OMPI_DECLSPEC
 
PMPI_Eºh™dÀr_£t
(
MPI_Comm
 
comm
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1688 
OMPI_DECLSPEC
 
PMPI_Eº‹_˛ass
(
îr‹code
, *
îr‹˛ass
);

1689 
OMPI_DECLSPEC
 
PMPI_Eº‹_°rög
(
îr‹code
, *
°rög
, *
ªsu…Àn
);

1690 
OMPI_DECLSPEC
 
PMPI_Exsˇn
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1691 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1692 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Fûe_c2f
(
MPI_Fûe
 
fûe
);

1693 
OMPI_DECLSPEC
 
MPI_Fûe
 
PMPI_Fûe_f2c
(
MPI_Föt
 
fûe
);

1694 
OMPI_DECLSPEC
 
PMPI_Fûe_ˇŒ_îrh™dÀr
(
MPI_Fûe
 
fh
, 
îr‹code
);

1695 
OMPI_DECLSPEC
 
PMPI_Fûe_¸óã_îrh™dÀr
(
MPI_Fûe_îrh™dÀr_‚
 *
fun˘i⁄
,

1696 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1697 
OMPI_DECLSPEC
 
PMPI_Fûe_£t_îrh™dÀr
–
MPI_Fûe
 
fûe
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

1698 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_îrh™dÀr
–
MPI_Fûe
 
fûe
, 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

1699 
OMPI_DECLSPEC
 
PMPI_Fûe_›í
(
MPI_Comm
 
comm
, *
fûíame
, 
amode
,

1700 
MPI_Info
 
öfo
, 
MPI_Fûe
 *
fh
);

1701 
OMPI_DECLSPEC
 
PMPI_Fûe_˛o£
(
MPI_Fûe
 *
fh
);

1702 
OMPI_DECLSPEC
 
PMPI_Fûe_dñëe
(*
fûíame
, 
MPI_Info
 
öfo
);

1703 
OMPI_DECLSPEC
 
PMPI_Fûe_£t_size
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
size
);

1704 
OMPI_DECLSPEC
 
PMPI_Fûe_¥óŒoˇã
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
size
);

1705 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_size
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
size
);

1706 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_group
(
MPI_Fûe
 
fh
, 
MPI_Group
 *
group
);

1707 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_amode
(
MPI_Fûe
 
fh
, *
amode
);

1708 
OMPI_DECLSPEC
 
PMPI_Fûe_£t_öfo
(
MPI_Fûe
 
fh
, 
MPI_Info
 
öfo
);

1709 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_öfo
(
MPI_Fûe
 
fh
, 
MPI_Info
 *
öfo_u£d
);

1710 
OMPI_DECLSPEC
 
PMPI_Fûe_£t_võw
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
di•
, 
MPI_D©©y≥
 
ëy≥
,

1711 
MPI_D©©y≥
 
fûëy≥
, *
d©¨ï
, 
MPI_Info
 
öfo
);

1712 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_võw
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
di•
,

1713 
MPI_D©©y≥
 *
ëy≥
,

1714 
MPI_D©©y≥
 *
fûëy≥
, *
d©¨ï
);

1715 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1716 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1717 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_©_Æl
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1718 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1719 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1720 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1721 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_©_Æl
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1722 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1723 
OMPI_DECLSPEC
 
PMPI_Fûe_úód_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1724 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1725 
OMPI_DECLSPEC
 
PMPI_Fûe_iwrôe_©
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1726 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1727 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1728 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1729 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_Æl
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1730 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1731 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1732 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1733 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_Æl
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1734 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1735 
OMPI_DECLSPEC
 
PMPI_Fûe_úód
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1736 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1737 
OMPI_DECLSPEC
 
PMPI_Fûe_iwrôe
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1738 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1739 
OMPI_DECLSPEC
 
PMPI_Fûe_£ek
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, 
whí˚
);

1740 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_posôi⁄
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
off£t
);

1741 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_byã_off£t
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
,

1742 
MPI_Off£t
 *
di•
);

1743 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1744 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1745 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1746 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1747 
OMPI_DECLSPEC
 
PMPI_Fûe_úód_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1748 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1749 
OMPI_DECLSPEC
 
PMPI_Fûe_iwrôe_sh¨ed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1750 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Reque°
 *
ªque°
);

1751 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_‹dîed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1752 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1753 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_‹dîed
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1754 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Sètus
 *
°©us
);

1755 
OMPI_DECLSPEC
 
PMPI_Fûe_£ek_sh¨ed
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, 
whí˚
);

1756 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_posôi⁄_sh¨ed
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 *
off£t
);

1757 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_©_Æl_begö
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1758 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
);

1759 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_©_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1760 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_©_Æl_begö
(
MPI_Fûe
 
fh
, 
MPI_Off£t
 
off£t
, *
buf
,

1761 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
);

1762 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_©_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1763 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_Æl_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1764 
MPI_D©©y≥
 
d©©y≥
);

1765 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1766 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_Æl_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1767 
MPI_D©©y≥
 
d©©y≥
);

1768 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_Æl_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1769 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_‹dîed_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1770 
MPI_D©©y≥
 
d©©y≥
);

1771 
OMPI_DECLSPEC
 
PMPI_Fûe_ªad_‹dîed_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1772 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_‹dîed_begö
(
MPI_Fûe
 
fh
, *
buf
, 
cou¡
,

1773 
MPI_D©©y≥
 
d©©y≥
);

1774 
OMPI_DECLSPEC
 
PMPI_Fûe_wrôe_‹dîed_íd
(
MPI_Fûe
 
fh
, *
buf
, 
MPI_Sètus
 *
°©us
);

1775 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_ty≥_exã¡
(
MPI_Fûe
 
fh
, 
MPI_D©©y≥
 
d©©y≥
,

1776 
MPI_Aöt
 *
exã¡
);

1777 
OMPI_DECLSPEC
 
PMPI_Fûe_£t_©omicôy
(
MPI_Fûe
 
fh
, 
Êag
);

1778 
OMPI_DECLSPEC
 
PMPI_Fûe_gë_©omicôy
(
MPI_Fûe
 
fh
, *
Êag
);

1779 
OMPI_DECLSPEC
 
PMPI_Fûe_sync
(
MPI_Fûe
 
fh
);

1780 
OMPI_DECLSPEC
 
PMPI_FöÆize
();

1781 
OMPI_DECLSPEC
 
PMPI_FöÆized
(*
Êag
);

1782 
OMPI_DECLSPEC
 
PMPI_Fªe_mem
(*
ba£
);

1783 
OMPI_DECLSPEC
 
PMPI_G©hî
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1784 *
ªcvbuf
, 
ªcvcou¡
, 
MPI_D©©y≥
 
ªcvty≥
,

1785 
roŸ
, 
MPI_Comm
 
comm
);

1786 
OMPI_DECLSPEC
 
PMPI_G©hîv
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1787 *
ªcvbuf
, *
ªcvcou¡s
, *
di•ls
,

1788 
MPI_D©©y≥
 
ªcvty≥
, 
roŸ
, 
MPI_Comm
 
comm
);

1789 
OMPI_DECLSPEC
 
PMPI_Gë_addªss
(*
loˇti⁄
, 
MPI_Aöt
 *
addªss
);

1790 
OMPI_DECLSPEC
 
PMPI_Gë_cou¡
(
MPI_Sètus
 *
°©us
, 
MPI_D©©y≥
 
d©©y≥
, *
cou¡
);

1791 
OMPI_DECLSPEC
 
PMPI_Gë_ñemíts
(
MPI_Sètus
 *
°©us
, 
MPI_D©©y≥
 
d©©y≥
,

1792 *
cou¡
);

1793 
OMPI_DECLSPEC
 
PMPI_Gë
(*
‹igö_addr
, 
‹igö_cou¡
,

1794 
MPI_D©©y≥
 
‹igö_d©©y≥
, 
èrgë_ønk
,

1795 
MPI_Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

1796 
MPI_D©©y≥
 
èrgë_d©©y≥
, 
MPI_Wö
 
wö
);

1797 
OMPI_DECLSPEC
 
PMPI_Gë_¥o˚ss‹_«me
(*
«me
, *
ªsu…Àn
);

1798 
OMPI_DECLSPEC
 
PMPI_Gë_vîsi⁄
(*
vîsi⁄
, *
subvîsi⁄
);

1799 
OMPI_DECLSPEC
 
PMPI_Gøph_¸óã
(
MPI_Comm
 
comm_ﬁd
, 
¬odes
, *
ödex
,

1800 *
edges
, 
ª‹dî
, 
MPI_Comm
 *
comm_gøph
);

1801 
OMPI_DECLSPEC
 
PMPI_Gøph_gë
(
MPI_Comm
 
comm
, 
maxödex
, 
maxedges
,

1802 *
ödex
, *
edges
);

1803 
OMPI_DECLSPEC
 
PMPI_Gøph_m≠
(
MPI_Comm
 
comm
, 
¬odes
, *
ödex
, *
edges
,

1804 *
√wønk
);

1805 
OMPI_DECLSPEC
 
PMPI_Gøph_√ighb‹s_cou¡
(
MPI_Comm
 
comm
, 
ønk
, *
¬eighb‹s
);

1806 
OMPI_DECLSPEC
 
PMPI_Gøph_√ighb‹s
(
MPI_Comm
 
comm
, 
ønk
, 
max√ighb‹s
,

1807 *
√ighb‹s
);

1808 
OMPI_DECLSPEC
 
PMPI_Gøphdims_gë
(
MPI_Comm
 
comm
, *
¬odes
, *
√dges
);

1809 
OMPI_DECLSPEC
 
PMPI_Gªque°_com∂ëe
(
MPI_Reque°
 
ªque°
);

1810 
OMPI_DECLSPEC
 
PMPI_Gªque°_°¨t
(
MPI_Gªque°_quîy_fun˘i⁄
 *
quîy_‚
,

1811 
MPI_Gªque°_‰ì_fun˘i⁄
 *
‰ì_‚
,

1812 
MPI_Gªque°_ˇn˚l_fun˘i⁄
 *
ˇn˚l_‚
,

1813 *
exåa_°©e
, 
MPI_Reque°
 *
ªque°
);

1814 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Group_c2f
(
MPI_Group
 
group
);

1815 
OMPI_DECLSPEC
 
PMPI_Group_com∑ª
(
MPI_Group
 
group1
, MPI_Grou∞
group2
, *
ªsu…
);

1816 
OMPI_DECLSPEC
 
PMPI_Group_dif„ªn˚
(
MPI_Group
 
group1
, MPI_Grou∞
group2
,

1817 
MPI_Group
 *
√wgroup
);

1818 
OMPI_DECLSPEC
 
PMPI_Group_ex˛
(
MPI_Group
 
group
, 
n
, *
ønks
,

1819 
MPI_Group
 *
√wgroup
);

1820 
OMPI_DECLSPEC
 
MPI_Group
 
PMPI_Group_f2c
(
MPI_Föt
 
group
);

1821 
OMPI_DECLSPEC
 
PMPI_Group_‰ì
(
MPI_Group
 *
group
);

1822 
OMPI_DECLSPEC
 
PMPI_Group_ö˛
(
MPI_Group
 
group
, 
n
, *
ønks
,

1823 
MPI_Group
 *
√wgroup
);

1824 
OMPI_DECLSPEC
 
PMPI_Group_öãr£˘i⁄
(
MPI_Group
 
group1
, MPI_Grou∞
group2
,

1825 
MPI_Group
 *
√wgroup
);

1826 
OMPI_DECLSPEC
 
PMPI_Group_ønge_ex˛
(
MPI_Group
 
group
, 
n
, 
ønges
[][3],

1827 
MPI_Group
 *
√wgroup
);

1828 
OMPI_DECLSPEC
 
PMPI_Group_ønge_ö˛
(
MPI_Group
 
group
, 
n
, 
ønges
[][3],

1829 
MPI_Group
 *
√wgroup
);

1830 
OMPI_DECLSPEC
 
PMPI_Group_ønk
(
MPI_Group
 
group
, *
ønk
);

1831 
OMPI_DECLSPEC
 
PMPI_Group_size
(
MPI_Group
 
group
, *
size
);

1832 
OMPI_DECLSPEC
 
PMPI_Group_å™¶©e_ønks
(
MPI_Group
 
group1
, 
n
, *
ønks1
,

1833 
MPI_Group
 
group2
, *
ønks2
);

1834 
OMPI_DECLSPEC
 
PMPI_Group_uni⁄
(
MPI_Group
 
group1
, MPI_Grou∞
group2
,

1835 
MPI_Group
 *
√wgroup
);

1836 
OMPI_DECLSPEC
 
PMPI_Ib£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1837 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1838 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Info_c2f
(
MPI_Info
 
öfo
);

1839 
OMPI_DECLSPEC
 
PMPI_Info_¸óã
(
MPI_Info
 *
öfo
);

1840 
OMPI_DECLSPEC
 
PMPI_Info_dñëe
(
MPI_Info
 
öfo
, *
key
);

1841 
OMPI_DECLSPEC
 
PMPI_Info_dup
(
MPI_Info
 
öfo
, MPI_Infÿ*
√wöfo
);

1842 
OMPI_DECLSPEC
 
MPI_Info
 
PMPI_Info_f2c
(
MPI_Föt
 
öfo
);

1843 
OMPI_DECLSPEC
 
PMPI_Info_‰ì
(
MPI_Info
 *
öfo
);

1844 
OMPI_DECLSPEC
 
PMPI_Info_gë
(
MPI_Info
 
öfo
, *
key
, 
vÆuñí
,

1845 *
vÆue
, *
Êag
);

1846 
OMPI_DECLSPEC
 
PMPI_Info_gë_nkeys
(
MPI_Info
 
öfo
, *
nkeys
);

1847 
OMPI_DECLSPEC
 
PMPI_Info_gë_¡hkey
(
MPI_Info
 
öfo
, 
n
, *
key
);

1848 
OMPI_DECLSPEC
 
PMPI_Info_gë_vÆuñí
(
MPI_Info
 
öfo
, *
key
, *
vÆuñí
,

1849 *
Êag
);

1850 
OMPI_DECLSPEC
 
PMPI_Info_£t
(
MPI_Info
 
öfo
, *
key
, *
vÆue
);

1851 
OMPI_DECLSPEC
 
PMPI_Inô
(*
¨gc
, ***
¨gv
);

1852 
OMPI_DECLSPEC
 
PMPI_Inôülized
(*
Êag
);

1853 
OMPI_DECLSPEC
 
PMPI_Inô_thªad
(*
¨gc
, ***
¨gv
, 
ªquúed
,

1854 *
¥ovided
);

1855 
OMPI_DECLSPEC
 
PMPI_I¡îcomm_¸óã
(
MPI_Comm
 
loˇl_comm
, 
loˇl_Àadî
,

1856 
MPI_Comm
 
bridge_comm
, 
ªmŸe_Àadî
,

1857 
èg
, 
MPI_Comm
 *
√wöãrcomm
);

1858 
OMPI_DECLSPEC
 
PMPI_I¡îcomm_mîge
(
MPI_Comm
 
öãrcomm
, 
high
,

1859 
MPI_Comm
 *
√wöãrcomm
);

1860 
OMPI_DECLSPEC
 
PMPI_I¥obe
(
sour˚
, 
èg
, 
MPI_Comm
 
comm
, *
Êag
,

1861 
MPI_Sètus
 *
°©us
);

1862 
OMPI_DECLSPEC
 
PMPI_Iªcv
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
sour˚
,

1863 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1864 
OMPI_DECLSPEC
 
PMPI_Ir£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1865 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1866 
OMPI_DECLSPEC
 
PMPI_I£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1867 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1868 
OMPI_DECLSPEC
 
PMPI_Is£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1869 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1870 
OMPI_DECLSPEC
 
PMPI_Is_thªad_maö
(*
Êag
);

1871 
OMPI_DECLSPEC
 
PMPI_KeyvÆ_¸óã
(
MPI_C›y_fun˘i⁄
 *
c›y_‚
,

1872 
MPI_Dñëe_fun˘i⁄
 *
dñëe_‚
,

1873 *
keyvÆ
, *
exåa_°©e
);

1874 
OMPI_DECLSPEC
 
PMPI_KeyvÆ_‰ì
(*
keyvÆ
);

1875 
OMPI_DECLSPEC
 
PMPI_Lookup_«me
(*
£rvi˚_«me
, 
MPI_Info
 
öfo
, *
p‹t_«me
);

1876 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Op_c2f
(
MPI_Op
 
›
);

1877 
OMPI_DECLSPEC
 
PMPI_Op_¸óã
(
MPI_U£r_fun˘i⁄
 *
fun˘i⁄
, 
commuã
,

1878 
MPI_Op
 *
›
);

1879 
OMPI_DECLSPEC
 
PMPI_O≥n_p‹t
(
MPI_Info
 
öfo
, *
p‹t_«me
);

1880 
OMPI_DECLSPEC
 
MPI_Op
 
PMPI_Op_f2c
(
MPI_Föt
 
›
);

1881 
OMPI_DECLSPEC
 
PMPI_Op_‰ì
(
MPI_Op
 *
›
);

1882 
OMPI_DECLSPEC
 
PMPI_Pack_exã∫Æ
(*
d©¨ï
, *
öbuf
, 
öcou¡
,

1883 
MPI_D©©y≥
 
d©©y≥
, *
outbuf
,

1884 
MPI_Aöt
 
outsize
, MPI_Aöà*
posôi⁄
);

1885 
OMPI_DECLSPEC
 
PMPI_Pack_exã∫Æ_size
(*
d©¨ï
, 
öcou¡
,

1886 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Aöt
 *
size
);

1887 
OMPI_DECLSPEC
 
PMPI_Pack
(*
öbuf
, 
öcou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1888 *
outbuf
, 
outsize
, *
posôi⁄
, 
MPI_Comm
 
comm
);

1889 
OMPI_DECLSPEC
 
PMPI_Pack_size
(
öcou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Comm
 
comm
,

1890 *
size
);

1891 
OMPI_DECLSPEC
 
PMPI_Pc⁄åﬁ
(c⁄° 
Àvñ
, ...);

1892 
OMPI_DECLSPEC
 
PMPI_Probe
(
sour˚
, 
èg
, 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1893 
OMPI_DECLSPEC
 
PMPI_Publish_«me
(*
£rvi˚_«me
, 
MPI_Info
 
öfo
,

1894 *
p‹t_«me
);

1895 
OMPI_DECLSPEC
 
PMPI_Put
(*
‹igö_addr
, 
‹igö_cou¡
, 
MPI_D©©y≥
 
‹igö_d©©y≥
,

1896 
èrgë_ønk
, 
MPI_Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

1897 
MPI_D©©y≥
 
èrgë_d©©y≥
, 
MPI_Wö
 
wö
);

1898 
OMPI_DECLSPEC
 
PMPI_Quîy_thªad
(*
¥ovided
);

1899 
OMPI_DECLSPEC
 
PMPI_Recv_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
sour˚
,

1900 
èg
, 
MPI_Comm
 
comm
, 
MPI_Reque°
 *
ªque°
);

1901 
OMPI_DECLSPEC
 
PMPI_Recv
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
sour˚
,

1902 
èg
, 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1903 
OMPI_DECLSPEC
 
PMPI_Redu˚
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1904 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
roŸ
, 
MPI_Comm
 
comm
);

1905 
OMPI_DECLSPEC
 
PMPI_Redu˚_sˇâî
(*
£ndbuf
, *
ªcvbuf
, *
ªcvcou¡s
,

1906 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1907 
OMPI_DECLSPEC
 
PMPI_Regi°î_d©¨ï
(*
d©¨ï
,

1908 
MPI_D©¨ï_c⁄vîsi⁄_fun˘i⁄
 *
ªad_c⁄vîsi⁄_‚
,

1909 
MPI_D©¨ï_c⁄vîsi⁄_fun˘i⁄
 *
wrôe_c⁄vîsi⁄_‚
,

1910 
MPI_D©¨ï_exã¡_fun˘i⁄
 *
dty≥_fûe_exã¡_‚
,

1911 *
exåa_°©e
);

1912 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Reque°_c2f
(
MPI_Reque°
 
ªque°
);

1913 
OMPI_DECLSPEC
 
MPI_Reque°
 
PMPI_Reque°_f2c
(
MPI_Föt
 
ªque°
);

1914 
OMPI_DECLSPEC
 
PMPI_Reque°_‰ì
(
MPI_Reque°
 *
ªque°
);

1915 
OMPI_DECLSPEC
 
PMPI_Reque°_gë_°©us
(
MPI_Reque°
 
ªque°
, *
Êag
,

1916 
MPI_Sètus
 *
°©us
);

1917 
OMPI_DECLSPEC
 
PMPI_R£nd
(*
ibuf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1918 
èg
, 
MPI_Comm
 
comm
);

1919 
OMPI_DECLSPEC
 
PMPI_R£nd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1920 
de°
, 
èg
, 
MPI_Comm
 
comm
,

1921 
MPI_Reque°
 *
ªque°
);

1922 
OMPI_DECLSPEC
 
PMPI_Sˇn
(*
£ndbuf
, *
ªcvbuf
, 
cou¡
,

1923 
MPI_D©©y≥
 
d©©y≥
, 
MPI_Op
 
›
, 
MPI_Comm
 
comm
);

1924 
OMPI_DECLSPEC
 
PMPI_Sˇâî
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1925 *
ªcvbuf
, 
ªcvcou¡
, 
MPI_D©©y≥
 
ªcvty≥
,

1926 
roŸ
, 
MPI_Comm
 
comm
);

1927 
OMPI_DECLSPEC
 
PMPI_Sˇâîv
(*
£ndbuf
, *
£ndcou¡s
, *
di•ls
,

1928 
MPI_D©©y≥
 
£ndty≥
, *
ªcvbuf
, 
ªcvcou¡
,

1929 
MPI_D©©y≥
 
ªcvty≥
, 
roŸ
, 
MPI_Comm
 
comm
);

1930 
OMPI_DECLSPEC
 
PMPI_Síd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1931 
de°
, 
èg
, 
MPI_Comm
 
comm
,

1932 
MPI_Reque°
 *
ªque°
);

1933 
OMPI_DECLSPEC
 
PMPI_Síd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1934 
èg
, 
MPI_Comm
 
comm
);

1935 
OMPI_DECLSPEC
 
PMPI_Sídªcv
(*
£ndbuf
, 
£ndcou¡
, 
MPI_D©©y≥
 
£ndty≥
,

1936 
de°
, 
£ndèg
, *
ªcvbuf
, 
ªcvcou¡
,

1937 
MPI_D©©y≥
 
ªcvty≥
, 
sour˚
, 
ªcvèg
,

1938 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1939 
OMPI_DECLSPEC
 
PMPI_Sídªcv_ª∂a˚
(* 
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1940 
de°
, 
£ndèg
, 
sour˚
, 
ªcvèg
,

1941 
MPI_Comm
 
comm
, 
MPI_Sètus
 *
°©us
);

1942 
OMPI_DECLSPEC
 
PMPI_S£nd_öô
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
,

1943 
de°
, 
èg
, 
MPI_Comm
 
comm
,

1944 
MPI_Reque°
 *
ªque°
);

1945 
OMPI_DECLSPEC
 
PMPI_S£nd
(*
buf
, 
cou¡
, 
MPI_D©©y≥
 
d©©y≥
, 
de°
,

1946 
èg
, 
MPI_Comm
 
comm
);

1947 
OMPI_DECLSPEC
 
PMPI_Sèπ
(
MPI_Reque°
 *
ªque°
);

1948 
OMPI_DECLSPEC
 
PMPI_SèπÆl
(
cou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
);

1949 
OMPI_DECLSPEC
 
PMPI_Sètus_c2f
(
MPI_Sètus
 *
c_°©us
, 
MPI_Föt
 *
f_°©us
);

1950 
OMPI_DECLSPEC
 
PMPI_Sètus_f2c
(
MPI_Föt
 *
f_°©us
, 
MPI_Sètus
 *
c_°©us
);

1951 
OMPI_DECLSPEC
 
PMPI_Sètus_£t_ˇn˚Œed
(
MPI_Sètus
 *
°©us
, 
Êag
);

1952 
OMPI_DECLSPEC
 
PMPI_Sètus_£t_ñemíts
(
MPI_Sètus
 *
°©us
, 
MPI_D©©y≥
 
d©©y≥
,

1953 
cou¡
);

1954 
OMPI_DECLSPEC
 
PMPI_Te°Æl
(
cou¡
, 
MPI_Reque°
 
¨øy_of_ªque°s
[], *
Êag
,

1955 
MPI_Sètus
 
¨øy_of_°©u£s
[]);

1956 
OMPI_DECLSPEC
 
PMPI_Te°™y
(
cou¡
, 
MPI_Reque°
 
¨øy_of_ªque°s
[], *
ödex
, *
Êag
, 
MPI_Sètus
 *
°©us
);

1957 
OMPI_DECLSPEC
 
PMPI_Te°
(
MPI_Reque°
 *
ªque°
, *
Êag
, 
MPI_Sètus
 *
°©us
);

1958 
OMPI_DECLSPEC
 
PMPI_Te°_ˇn˚Œed
(
MPI_Sètus
 *
°©us
, *
Êag
);

1959 
OMPI_DECLSPEC
 
PMPI_Te°some
(
öcou¡
, 
MPI_Reque°
 
¨øy_of_ªque°s
[],

1960 *
outcou¡
, 
¨øy_of_ödi˚s
[],

1961 
MPI_Sètus
 
¨øy_of_°©u£s
[]);

1962 
OMPI_DECLSPEC
 
PMPI_T›o_ã°
(
MPI_Comm
 
comm
, *
°©us
);

1963 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Ty≥_c2f
(
MPI_D©©y≥
 
d©©y≥
);

1964 
OMPI_DECLSPEC
 
PMPI_Ty≥_commô
(
MPI_D©©y≥
 *
ty≥
);

1965 
OMPI_DECLSPEC
 
PMPI_Ty≥_c⁄tiguous
(
cou¡
, 
MPI_D©©y≥
 
ﬁdty≥
,

1966 
MPI_D©©y≥
 *
√wty≥
);

1967 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_d¨øy
(
size
, 
ønk
, 
ndims
,

1968 
gsize_¨øy
[], 
di°rib_¨øy
[],

1969 
d¨g_¨øy
[], 
psize_¨øy
[],

1970 
‹dî
, 
MPI_D©©y≥
 
ﬁdty≥
,

1971 
MPI_D©©y≥
 *
√wty≥
);

1972 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_f90_com∂ex
(
p
, 
r
, 
MPI_D©©y≥
 *
√wty≥
);

1973 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_f90_öãgî
(
r
, 
MPI_D©©y≥
 *
√wty≥
);

1974 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_f90_ªÆ
(
p
, 
r
, 
MPI_D©©y≥
 *
√wty≥
);

1975 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_hödexed
(
cou¡
, 
¨øy_of_blockÀngths
[],

1976 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

1977 
MPI_D©©y≥
 
ﬁdty≥
,

1978 
MPI_D©©y≥
 *
√wty≥
);

1979 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_hve˘‹
(
cou¡
, 
blockÀngth
, 
MPI_Aöt
 
°ride
,

1980 
MPI_D©©y≥
 
ﬁdty≥
,

1981 
MPI_D©©y≥
 *
√wty≥
);

1982 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
 *
ty≥_c›y_©å_‚
,

1983 
MPI_Ty≥_dñëe_©å_fun˘i⁄
 *
ty≥_dñëe_©å_‚
,

1984 *
ty≥_keyvÆ
, *
exåa_°©e
);

1985 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_ödexed_block
(
cou¡
, 
blockÀngth
,

1986 
¨øy_of_di•œ˚míts
[],

1987 
MPI_D©©y≥
 
ﬁdty≥
,

1988 
MPI_D©©y≥
 *
√wty≥
);

1989 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_°ru˘
(
cou¡
, 
¨øy_of_block_Àngths
[],

1990 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

1991 
MPI_D©©y≥
 
¨øy_of_ty≥s
[],

1992 
MPI_D©©y≥
 *
√wty≥
);

1993 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_sub¨øy
(
ndims
, 
size_¨øy
[], 
subsize_¨øy
[],

1994 
°¨t_¨øy
[], 
‹dî
,

1995 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

1996 
OMPI_DECLSPEC
 
PMPI_Ty≥_¸óã_ªsized
(
MPI_D©©y≥
 
ﬁdty≥
, 
MPI_Aöt
 
lb
,

1997 
MPI_Aöt
 
exã¡
, 
MPI_D©©y≥
 *
√wty≥
);

1998 
OMPI_DECLSPEC
 
PMPI_Ty≥_dñëe_©å
(
MPI_D©©y≥
 
ty≥
, 
ty≥_keyvÆ
);

1999 
OMPI_DECLSPEC
 
PMPI_Ty≥_dup
(
MPI_D©©y≥
 
ty≥
, MPI_D©©y≥ *
√wty≥
);

2000 
OMPI_DECLSPEC
 
PMPI_Ty≥_exã¡
(
MPI_D©©y≥
 
ty≥
, 
MPI_Aöt
 *
exã¡
);

2001 
OMPI_DECLSPEC
 
PMPI_Ty≥_‰ì
(
MPI_D©©y≥
 *
ty≥
);

2002 
OMPI_DECLSPEC
 
PMPI_Ty≥_‰ì_keyvÆ
(*
ty≥_keyvÆ
);

2003 
OMPI_DECLSPEC
 
MPI_D©©y≥
 
PMPI_Ty≥_f2c
(
MPI_Föt
 
d©©y≥
);

2004 
OMPI_DECLSPEC
 
PMPI_Ty≥_gë_©å
(
MPI_D©©y≥
 
ty≥
, 
ty≥_keyvÆ
,

2005 *
©åibuã_vÆ
, *
Êag
);

2006 
OMPI_DECLSPEC
 
PMPI_Ty≥_gë_c⁄ã¡s
(
MPI_D©©y≥
 
mty≥
, 
max_öãgîs
,

2007 
max_addªs£s
, 
max_d©©y≥s
,

2008 
¨øy_of_öãgîs
[],

2009 
MPI_Aöt
 
¨øy_of_addªs£s
[],

2010 
MPI_D©©y≥
 
¨øy_of_d©©y≥s
[]);

2011 
OMPI_DECLSPEC
 
PMPI_Ty≥_gë_ívñ›e
(
MPI_D©©y≥
 
ty≥
, *
num_öãgîs
,

2012 *
num_addªs£s
, *
num_d©©y≥s
,

2013 *
comböî
);

2014 
OMPI_DECLSPEC
 
PMPI_Ty≥_gë_exã¡
(
MPI_D©©y≥
 
ty≥
, 
MPI_Aöt
 *
lb
,

2015 
MPI_Aöt
 *
exã¡
);

2016 
OMPI_DECLSPEC
 
PMPI_Ty≥_gë_«me
(
MPI_D©©y≥
 
ty≥
, *
ty≥_«me
,

2017 *
ªsu…Àn
);

2018 
OMPI_DECLSPEC
 
PMPI_Ty≥_gë_åue_exã¡
(
MPI_D©©y≥
 
d©©y≥
, 
MPI_Aöt
 *
åue_lb
,

2019 
MPI_Aöt
 *
åue_exã¡
);

2020 
OMPI_DECLSPEC
 
PMPI_Ty≥_hödexed
(
cou¡
, 
¨øy_of_blockÀngths
[],

2021 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

2022 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

2023 
OMPI_DECLSPEC
 
PMPI_Ty≥_hve˘‹
(
cou¡
, 
blockÀngth
, 
MPI_Aöt
 
°ride
,

2024 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

2025 
OMPI_DECLSPEC
 
PMPI_Ty≥_ödexed
(
cou¡
, 
¨øy_of_blockÀngths
[],

2026 
¨øy_of_di•œ˚míts
[],

2027 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

2028 
OMPI_DECLSPEC
 
PMPI_Ty≥_lb
(
MPI_D©©y≥
 
ty≥
, 
MPI_Aöt
 *
lb
);

2029 
OMPI_DECLSPEC
 
PMPI_Ty≥_m©ch_size
(
ty≥˛ass
, 
size
, 
MPI_D©©y≥
 *
ty≥
);

2030 
OMPI_DECLSPEC
 
PMPI_Ty≥_£t_©å
(
MPI_D©©y≥
 
ty≥
, 
ty≥_keyvÆ
,

2031 *
©å_vÆ
);

2032 
OMPI_DECLSPEC
 
PMPI_Ty≥_£t_«me
(
MPI_D©©y≥
 
ty≥
, *
ty≥_«me
);

2033 
OMPI_DECLSPEC
 
PMPI_Ty≥_size
(
MPI_D©©y≥
 
ty≥
, *
size
);

2034 
OMPI_DECLSPEC
 
PMPI_Ty≥_°ru˘
(
cou¡
, 
¨øy_of_blockÀngths
[],

2035 
MPI_Aöt
 
¨øy_of_di•œ˚míts
[],

2036 
MPI_D©©y≥
 
¨øy_of_ty≥s
[],

2037 
MPI_D©©y≥
 *
√wty≥
);

2038 
OMPI_DECLSPEC
 
PMPI_Ty≥_ub
(
MPI_D©©y≥
 
mty≥
, 
MPI_Aöt
 *
ub
);

2039 
OMPI_DECLSPEC
 
PMPI_Ty≥_ve˘‹
(
cou¡
, 
blockÀngth
, 
°ride
,

2040 
MPI_D©©y≥
 
ﬁdty≥
, MPI_D©©y≥ *
√wty≥
);

2041 
OMPI_DECLSPEC
 
PMPI_U≈ack
(*
öbuf
, 
ösize
, *
posôi⁄
,

2042 *
outbuf
, 
outcou¡
, 
MPI_D©©y≥
 
d©©y≥
,

2043 
MPI_Comm
 
comm
);

2044 
OMPI_DECLSPEC
 
PMPI_U≈ublish_«me
(*
£rvi˚_«me
, 
MPI_Info
 
öfo
,

2045 *
p‹t_«me
);

2046 
OMPI_DECLSPEC
 
PMPI_U≈ack_exã∫Æ
 (*
d©¨ï
, *
öbuf
, 
MPI_Aöt
 
ösize
,

2047 
MPI_Aöt
 *
posôi⁄
, *
outbuf
, 
outcou¡
,

2048 
MPI_D©©y≥
 
d©©y≥
);

2049 
OMPI_DECLSPEC
 
PMPI_WaôÆl
(
cou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
,

2050 
MPI_Sètus
 *
¨øy_of_°©u£s
);

2051 
OMPI_DECLSPEC
 
PMPI_Waô™y
(
cou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
,

2052 *
ödex
, 
MPI_Sètus
 *
°©us
);

2053 
OMPI_DECLSPEC
 
PMPI_Waô
(
MPI_Reque°
 *
ªque°
, 
MPI_Sètus
 *
°©us
);

2054 
OMPI_DECLSPEC
 
PMPI_Waôsome
(
öcou¡
, 
MPI_Reque°
 *
¨øy_of_ªque°s
,

2055 *
outcou¡
, *
¨øy_of_ödi˚s
,

2056 
MPI_Sètus
 *
¨øy_of_°©u£s
);

2057 
OMPI_DECLSPEC
 
MPI_Föt
 
PMPI_Wö_c2f
(
MPI_Wö
 
wö
);

2058 
OMPI_DECLSPEC
 
PMPI_Wö_ˇŒ_îrh™dÀr
(
MPI_Wö
 
wö
, 
îr‹code
);

2059 
OMPI_DECLSPEC
 
PMPI_Wö_com∂ëe
(
MPI_Wö
 
wö
);

2060 
OMPI_DECLSPEC
 
PMPI_Wö_¸óã
(*
ba£
, 
MPI_Aöt
 
size
, 
di•_unô
,

2061 
MPI_Info
 
öfo
, 
MPI_Comm
 
comm
, 
MPI_Wö
 *
wö
);

2062 
OMPI_DECLSPEC
 
PMPI_Wö_¸óã_îrh™dÀr
(
MPI_Wö_îrh™dÀr_‚
 *
fun˘i⁄
,

2063 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

2064 
OMPI_DECLSPEC
 
PMPI_Wö_¸óã_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
 *
wö_c›y_©å_‚
,

2065 
MPI_Wö_dñëe_©å_fun˘i⁄
 *
wö_dñëe_©å_‚
,

2066 *
wö_keyvÆ
, *
exåa_°©e
);

2067 
OMPI_DECLSPEC
 
PMPI_Wö_dñëe_©å
(
MPI_Wö
 
wö
, 
wö_keyvÆ
);

2068 
OMPI_DECLSPEC
 
MPI_Wö
 
PMPI_Wö_f2c
(
MPI_Föt
 
wö
);

2069 
OMPI_DECLSPEC
 
PMPI_Wö_„n˚
(
as£π
, 
MPI_Wö
 
wö
);

2070 
OMPI_DECLSPEC
 
PMPI_Wö_‰ì
(
MPI_Wö
 *
wö
);

2071 
OMPI_DECLSPEC
 
PMPI_Wö_‰ì_keyvÆ
(*
wö_keyvÆ
);

2072 
OMPI_DECLSPEC
 
PMPI_Wö_gë_©å
(
MPI_Wö
 
wö
, 
wö_keyvÆ
,

2073 *
©åibuã_vÆ
, *
Êag
);

2074 
OMPI_DECLSPEC
 
PMPI_Wö_gë_îrh™dÀr
(
MPI_Wö
 
wö
, 
MPI_Eºh™dÀr
 *
îrh™dÀr
);

2075 
OMPI_DECLSPEC
 
PMPI_Wö_gë_group
(
MPI_Wö
 
wö
, 
MPI_Group
 *
group
);

2076 
OMPI_DECLSPEC
 
PMPI_Wö_gë_«me
(
MPI_Wö
 
wö
, *
wö_«me
, *
ªsu…Àn
);

2077 
OMPI_DECLSPEC
 
PMPI_Wö_lock
(
lock_ty≥
, 
ønk
, 
as£π
, 
MPI_Wö
 
wö
);

2078 
OMPI_DECLSPEC
 
PMPI_Wö_po°
(
MPI_Group
 
group
, 
as£π
, 
MPI_Wö
 
wö
);

2079 
OMPI_DECLSPEC
 
PMPI_Wö_£t_©å
(
MPI_Wö
 
wö
, 
wö_keyvÆ
, *
©åibuã_vÆ
);

2080 
OMPI_DECLSPEC
 
PMPI_Wö_£t_îrh™dÀr
(
MPI_Wö
 
wö
, 
MPI_Eºh™dÀr
 
îrh™dÀr
);

2081 
OMPI_DECLSPEC
 
PMPI_Wö_£t_«me
(
MPI_Wö
 
wö
, *
wö_«me
);

2082 
OMPI_DECLSPEC
 
PMPI_Wö_°¨t
(
MPI_Group
 
group
, 
as£π
, 
MPI_Wö
 
wö
);

2083 
OMPI_DECLSPEC
 
PMPI_Wö_ã°
(
MPI_Wö
 
wö
, *
Êag
);

2084 
OMPI_DECLSPEC
 
PMPI_Wö_u∆ock
(
ønk
, 
MPI_Wö
 
wö
);

2085 
OMPI_DECLSPEC
 
PMPI_Wö_waô
(
MPI_Wö
 
wö
);

2086 
OMPI_DECLSPEC
 
PMPI_Wtick
();

2087 
OMPI_DECLSPEC
 
PMPI_Wtime
();

2089 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

2101 #i‡!
deföed
(
OMPI_SKIP_MPICXX
Ë&& 
OMPI_WANT_CXX_BINDINGS
 && !
OMPI_BUILDING


2102 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

2103 
	~"›ímpi/ompi/mpi/cxx/mpicxx.h
"

	@/usr/include/stdio.h

61 #i‚def 
_STDIO_H_


62 
	#_STDIO_H_


	)

64 
	~<_ty≥s.h
>

66 #i‚de‡
_VA_LIST


67 
	#_VA_LIST


	)

70 
__d¨wö_va_li°
 
	tva_li°
;

73 #i‚def 
_OFF_T


74 
	#_OFF_T


	)

75 
__d¨wö_off_t
 
	toff_t
;

78 #i‚def 
_SIZE_T


79 
	#_SIZE_T


	)

80 
__d¨wö_size_t
 
	tsize_t
;

83 #i‚de‡
NULL


84 
	#NULL
 
__DARWIN_NULL


	)

87 
__d¨wö_off_t
 
	tÂos_t
;

89 
	#_FSTDIO


	)

98 
	s__sbuf
 {

99 *
	m_ba£
;

100 
	m_size
;

104 
	g__sFILEX
;

132 
	s__sFILE
 {

133 *
	m_p
;

134 
	m_r
;

135 
	m_w
;

136 
	m_Êags
;

137 
	m_fûe
;

138 
__sbuf
 
	m_bf
;

139 
	m_lbfsize
;

142 *
	m_cookõ
;

143 (*
	m_˛o£
)(*);

144 (*
	m_ªad
) (*, *, );

145 
Âos_t
 (*
_£ek
Ë(*, 
	mÂos_t
, );

146 (*
	m_wrôe
)(*, const *, );

149 
__sbuf
 
	m_ub
;

150 
__sFILEX
 *
	m_exåa
;

151 
	m_ur
;

154 
	m_ubuf
[3];

155 
	m_nbuf
[1];

158 
__sbuf
 
	m_lb
;

161 
	m_blksize
;

162 
Âos_t
 
	m_off£t
;

163 } 
	tFILE
;

165 
	g__BEGIN_DECLS


166 #i‡
__DARWIN_UNIX03


167 
FILE
 *
__°döp
;

168 
FILE
 *
__°douç
;

169 
FILE
 *
__°dîΩ
;

171 
FILE
 
__sF
[];

173 
	g__END_DECLS


175 
	#__SLBF
 0x0001

	)

176 
	#__SNBF
 0x0002

	)

177 
	#__SRD
 0x0004

	)

178 
	#__SWR
 0x0008

	)

180 
	#__SRW
 0x0010

	)

181 
	#__SEOF
 0x0020

	)

182 
	#__SERR
 0x0040

	)

183 
	#__SMBF
 0x0080

	)

184 
	#__SAPP
 0x0100

	)

185 
	#__SSTR
 0x0200

	)

186 
	#__SOPT
 0x0400

	)

187 
	#__SNPT
 0x0800

	)

188 
	#__SOFF
 0x1000

	)

189 
	#__SMOD
 0x2000

	)

190 
	#__SALC
 0x4000

	)

191 
	#__SIGN
 0x8000

	)

202 
	#_IOFBF
 0

	)

203 
	#_IOLBF
 1

	)

204 
	#_IONBF
 2

	)

206 
	#BUFSIZ
 1024

	)

207 
	#EOF
 (-1)

	)

215 
	#FOPEN_MAX
 20

	)

216 
	#FILENAME_MAX
 1024

	)

219 #i‚de‡
_ANSI_SOURCE


220 
	#P_tmpdú
 "/v¨/tmp/"

	)

222 
	#L_tm≤am
 1024

	)

223 
	#TMP_MAX
 308915776

	)

225 #i‚de‡
SEEK_SET


226 
	#SEEK_SET
 0

	)

228 #i‚de‡
SEEK_CUR


229 
	#SEEK_CUR
 1

	)

231 #i‚de‡
SEEK_END


232 
	#SEEK_END
 2

	)

235 #i‡
__DARWIN_UNIX03


236 
	#°dö
 
__°döp


	)

237 
	#°dout
 
__°douç


	)

238 
	#°dîr
 
__°dîΩ


	)

240 
	#°dö
 (&
__sF
[0])

	)

241 
	#°dout
 (&
__sF
[1])

	)

242 
	#°dîr
 (&
__sF
[2])

	)

248 
__BEGIN_DECLS


249 
˛óªº
(
FILE
 *);

250 
f˛o£
(
FILE
 *);

251 
„of
(
FILE
 *);

252 
„º‹
(
FILE
 *);

253 
fÊush
(
FILE
 *);

254 
fgëc
(
FILE
 *);

255 
fgëpos
(
FILE
 * 
__ª°ri˘
, 
Âos_t
 *);

256 *
fgës
(* 
__ª°ri˘
, , 
FILE
 *);

257 
FILE
 *
f›í
(c⁄° * 
__ª°ri˘
, const * __restrict);

258 
	$Ârötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
Ârötf
);

259 
	`Âutc
(, 
FILE
 *);

260 
	$Âuts
(c⁄° * 
__ª°ri˘
, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
Âuts
);

261 
size_t
 
	`‰ód
(* 
__ª°ri˘
, size_t, size_t, 
FILE
 * __restrict);

262 
FILE
 *
	$‰e›í
(c⁄° * 
__ª°ri˘
, const * __restrict,

263 
FILE
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
‰e›í
);

264 
	$fsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
fsˇnf
);

265 
	`f£ek
(
FILE
 *, , );

266 
	`f£ços
(
FILE
 *, c⁄° 
Âos_t
 *);

267 
	`·ñl
(
FILE
 *);

268 
size_t
 
	$fwrôe
(c⁄° * 
__ª°ri˘
, 
size_t
, size_t, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
fwrôe
);

269 
	`gëc
(
FILE
 *);

270 
	`gëch¨
();

271 *
	`gës
(*);

272 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

273 
__c⁄°
 
sys_√º
;

274 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

276 
	`≥º‹
(const *);

277 
	$¥ötf
(c⁄° * 
__ª°ri˘
, ...Ë
	`__DARWIN_LDBL_COMPAT
(
¥ötf
);

278 
	`putc
(, 
FILE
 *);

279 
	`putch¨
();

280 
	`puts
(const *);

281 
	`ªmove
(const *);

282 
	`ª«me
 (const *, const *);

283 
	`ªwöd
(
FILE
 *);

284 
	$sˇnf
(c⁄° * 
__ª°ri˘
, ...Ë
	`__DARWIN_LDBL_COMPAT
(
sˇnf
);

285 
	`£tbuf
(
FILE
 * 
__ª°ri˘
, * __restrict);

286 
	`£tvbuf
(
FILE
 * 
__ª°ri˘
, * __ª°ri˘, , 
size_t
);

287 
	$•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
•rötf
);

288 
	$ssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
ssˇnf
);

289 
FILE
 *
	`tmpfûe
();

290 *
	`tm≤am
(*);

291 
	`ungëc
(, 
FILE
 *);

292 
	$vÂrötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vÂrötf
);

293 
	$v¥ötf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
v¥ötf
);

294 
	$v•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
v•rötf
);

295 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

296 
	$a•rötf
(**, c⁄° *, ...Ë
	`__DARWIN_LDBL_COMPAT
(
a•rötf
);

297 
	$va•rötf
(**, c⁄° *, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
va•rötf
);

299 
__END_DECLS


304 #i‚de‡
_ANSI_SOURCE


305 
	#L_˘îmid
 1024

	)

307 
__BEGIN_DECLS


308 *
	`˘îmid
(*);

309 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

310 *
	`˘îmid_r
(*);

312 
FILE
 *
	`fd›í
(, const *);

313 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

314 *
	`fgë 
(
FILE
 *, 
size_t
 *);

316 
	`fûío
(
FILE
 *);

317 
	`Êockfûe
(
FILE
 *);

318 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

319 
__c⁄°
 

320 *
	`fmtcheck
(const *, const *);

321 
	`Âurge
(
FILE
 *);

323 
	`f£eko
(
FILE
 *, 
off_t
, );

324 
off_t
 
	`·ñlo
(
FILE
 *);

325 
	`·rylockfûe
(
FILE
 *);

326 
	`fu∆ockfûe
(
FILE
 *);

327 
	`gëc_u∆ocked
(
FILE
 *);

328 
	`gëch¨_u∆ocked
();

329 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

330 
	`gëw
(
FILE
 *);

332 
	`p˛o£
(
FILE
 *);

333 
FILE
 *
	`p›í
(const *, const *);

334 
	`putc_u∆ocked
(, 
FILE
 *);

335 
	`putch¨_u∆ocked
();

336 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

337 
	`putw
(, 
FILE
 *);

338 
	`£tbuf„r
(
FILE
 *, *, );

339 
	`£éöebuf
(
FILE
 *);

341 
	$¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
¢¥ötf
);

342 *
	$ãm≤am
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS
(
ãm≤am
);

343 
	$vfsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vfsˇnf
);

344 
	$vsˇnf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vsˇnf
);

345 
	$v¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
v¢¥ötf
);

346 
	$vssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vssˇnf
);

347 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

348 
FILE
 *
	`z›í
(const *, const *, );

350 
__END_DECLS


355 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

356 
__BEGIN_DECLS


357 
FILE
 *
	`fun›í
(const *,

360 
	$Âos_t
 (*)(*, 
Âos_t
, ),

362 
__END_DECLS


363 
	#‰›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, fn, 0, 0, 0)

	)

364 
	#fw›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, 0, fn, 0, 0)

	)

371 
__BEGIN_DECLS


372 
	`__§gë
(
FILE
 *);

373 
	$__svfsˇnf
(
FILE
 *, c⁄° *, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
__svfsˇnf
);

374 
	`__swbuf
(, 
FILE
 *);

375 
__END_DECLS


381 
	#__sgëc
(
p
Ë(--’)->
_r
 < 0 ? 
	`__§gë
’Ë: ()(*’)->
_p
++))

	)

382 #i‡
	`deföed
(
__GNUC__
Ë&& deföed(
__STDC__
)

383 
__ölöe
 
	$__•utc
(
_c
, 
FILE
 *
_p
) {

384 i‡(--
_p
->
_w
 >0 || (_p->_w >_p->
_lbfsize
 && ()
_c
 != '\n'))

385  (*
_p
->_p++ = 
_c
);

387  (
	`__swbuf
(
_c
, 
_p
));

388 
	}
}

393 
	#__•utc
(
c
, 
p
) \

394 (--(
p
)->
_w
 < 0 ? \

395 (
p
)->
_w
 >’)->
_lbfsize
 ? \

396 (*(
p
)->
_p
 = (
c
)), *(p)->_p != '\n' ? \

397 ()*(
p
)->
_p
++ : \

398 
	`__swbuf
('\n', 
p
) : \

399 
	`__swbuf
(()(
c
), 
p
) : \

400 (*(
p
)->
_p
 = (
c
), ()*’)->_p++))

	)

403 
	#__s„of
(
p
Ë((’)->
_Êags
 & 
__SEOF
Ë!0)

	)

404 
	#__s„º‹
(
p
Ë((’)->
_Êags
 & 
__SERR
Ë!0)

	)

405 
	#__s˛óªº
(
p
Ë(()(’)->
_Êags
 &~(
__SERR
|
__SEOF
)))

	)

406 
	#__sfûío
(
p
Ë(’)->
_fûe
)

	)

408 #i‚de‡
_ANSI_SOURCE


409 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

410 
	#„of_u∆ocked
(
p
Ë
	`__s„of
’)

	)

411 
	#„º‹_u∆ocked
(
p
Ë
	`__s„º‹
’)

	)

412 
	#˛óªº_u∆ocked
(
p
Ë
	`__s˛óªº
’)

	)

413 
	#fûío_u∆ocked
(
p
Ë
	`__sfûío
’)

	)

416 #i‚de‡
löt


417 
	#gëc_u∆ocked
(
Â
Ë
	`__sgëc
(Â)

	)

418 
	#putc_u∆ocked
(
x
, 
Â
Ë
	`__•utc
(x, fp)

	)

421 
	#gëch¨_u∆ocked
(Ë
	`gëc_u∆ocked
(
°dö
)

	)

422 
	#putch¨_u∆ocked
(
x
Ë
	`putc_u∆ocked
(x, 
°dout
)

	)

425 #ifde‡
_USE_EXTENDED_LOCALES_


426 
	~<xloˇÀ/_°dio.h
>

429 #i‡
deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

431 
	~<£cuª/_°dio.h
>

	@/usr/include/stdlib.h

58 #i‚de‡
_STDLIB_H_


59 
	#_STDLIB_H_


	)

61 
	~<avaûabÀ.h
>

63 
	~<_ty≥s.h
>

64 #i‡!
deföed
(
_ANSI_SOURCE
)

65 
	~<sys/waô.h
>

66 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

67 
	~<Æloˇ.h
>

71 #i‚def 
_SIZE_T


72 
	#_SIZE_T


	)

75 
__d¨wö_size_t
 
	tsize_t
;

78 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

79 #i‚de‡
_CT_RUNE_T


80 
	#_CT_RUNE_T


	)

81 
__d¨wö_˘_ru√_t
 
	t˘_ru√_t
;

84 #i‚de‡
_RUNE_T


85 
	#_RUNE_T


	)

86 
__d¨wö_ru√_t
 
	tru√_t
;

90 #i‚def 
__˝lu•lus


91 #i‚def 
_WCHAR_T


92 
	#_WCHAR_T


	)

93 
__d¨wö_wch¨_t
 
	twch¨_t
;

98 
	mquŸ
;

99 
	mªm
;

100 } 
	tdiv_t
;

103 
	mquŸ
;

104 
	mªm
;

105 } 
	tldiv_t
;

107 #i‡!
__DARWIN_NO_LONG_LONG


109 
	mquŸ
;

110 
	mªm
;

111 } 
	tŒdiv_t
;

114 #i‚de‡
NULL


115 
	#NULL
 
__DARWIN_NULL


	)

118 
	#EXIT_FAILURE
 1

	)

119 
	#EXIT_SUCCESS
 0

	)

121 
	#RAND_MAX
 0x7fffffff

	)

123 #ifde‡
_USE_EXTENDED_LOCALES_


124 
	~<_xloˇÀ.h
>

127 #i‚de‡
MB_CUR_MAX


128 #ifde‡
_USE_EXTENDED_LOCALES_


129 
	#MB_CUR_MAX
 (
	`___mb_cur_max
())

	)

130 #i‚de‡
MB_CUR_MAX_L


131 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

134 
__mb_cur_max
;

135 
	#MB_CUR_MAX
 
__mb_cur_max


	)

139 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)) \

140 && 
deföed
(
_USE_EXTENDED_LOCALES_
Ë&& !
	$deföed
(
MB_CUR_MAX_L
)

141 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

144 
__BEGIN_DECLS


145 
	$ab‹t
(Ë
__dód2
;

146 
	$abs
(Ë
__puª2
;

147 
	`©exô
((*)());

148 
	`©of
(const *);

149 
	`©oi
(const *);

150 
	`©ﬁ
(const *);

151 #i‡!
__DARWIN_NO_LONG_LONG


153 
	`©ﬁl
(const *);

155 *
	`b£¨ch
(c⁄° *, c⁄° *, 
size_t
,

156 
size_t
, (*)(const *, const *));

157 *
	`ˇŒoc
(
size_t
, size_t);

158 
div_t
 
	$div
(, Ë
__puª2
;

159 
	$exô
(Ë
__dód2
;

160 
	`‰ì
(*);

161 *
	`gëív
(const *);

162 
	$œbs
(Ë
__puª2
;

163 
ldiv_t
 
	$ldiv
(, Ë
__puª2
;

164 #i‡!
__DARWIN_NO_LONG_LONG


166 
	`Œabs
();

167 
Œdiv_t
 
	`Œdiv
(, );

169 *
	`mÆloc
(
size_t
);

170 
	`mbÀn
(c⁄° *, 
size_t
);

171 
size_t
 
	`mb°owcs
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t);

172 
	`mbtowc
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
);

173 
	`qs‹t
(*, 
size_t
, size_t,

175 
	`ønd
();

176 *
	`ªÆloc
(*, 
size_t
);

177 
	`§™d
();

178 
	$°πod
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πod
);

179 
	$°πof
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πof
);

180 
	`°πﬁ
(const *, **, );

182 
	$°πﬁd
(c⁄° *, **Ë
	`__DARWIN_LDBL_COMPAT
(
°πﬁd
);

183 #i‡!
__DARWIN_NO_LONG_LONG


185 
	`°πﬁl
(const *, **, );

188 
	`°πoul
(const *, **, );

189 #i‡!
__DARWIN_NO_LONG_LONG


191 
	`°πouŒ
(const *, **, );

193 
	$sy°em
(c⁄° *Ë
	`__DARWIN_ALIAS_C
(
sy°em
);

194 
size_t
 
	`wc°ombs
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t);

195 
	`w˘omb
(*, 
wch¨_t
);

197 #i‚de‡
_ANSI_SOURCE


198 
	$_Exô
(Ë
__dód2
;

199 
	`a64l
(const *);

200 
	`dønd48
();

201 *
	`ecvt
(, , *
__ª°ri˘
, *__restrict);

202 
	`î™d48
([3]);

203 *
	`fcvt
(, , *
__ª°ri˘
, *__restrict);

204 *
	`gcvt
(, , *);

205 
	`gësub›t
(**, * const *, **);

206 
	`gø¡±
();

207 #i‡
__DARWIN_UNIX03


208 *
	`öô°©e
(, *, 
size_t
);

210 *
	`öô°©e
(, *, );

212 
	`jønd48
([3]);

213 *
	`l64a
();

214 
	`lc⁄g48
([7]);

215 
	`Ã™d48
();

216 *
	`mkãmp
(*);

217 
	`mk°emp
(*);

218 
	`mønd48
();

219 
	`ƒ™d48
([3]);

220 
	`posix_›í±
();

221 *
	`±¢ame
();

222 
	$puãnv
(*Ë
	`__DARWIN_ALIAS
(
puãnv
);

223 
	`øndom
();

224 
	`ønd_r
(*);

225 #i‡(
__DARWIN_UNIX03
 && !
	`deföed
(
_POSIX_C_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_BETTER_REALPATH
)

226 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_EXTSN
(
ªÆ∑th
);

228 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
ªÆ∑th
);

231 *
	`£ed48
([3]);

232 
	$£ãnv
(c⁄° *, c⁄° *, Ë
	`__DARWIN_ALIAS
(
£ãnv
);

233 #i‡
__DARWIN_UNIX03


234 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

236 
	`£tkey
(const *);

238 *
	`£t°©e
(const *);

239 
	`§™d48
();

240 #i‡
__DARWIN_UNIX03


241 
	`§™dom
();

243 
	`§™dom
();

245 
	`u∆ock±
();

246 #i‡
__DARWIN_UNIX03


247 
	$un£ãnv
(c⁄° *Ë
	`__DARWIN_ALIAS
(
un£ãnv
);

249 
	`un£ãnv
(const *);

253 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

254 
	~<machöe/ty≥s.h
>

256 #i‚de‡
_DEV_T


257 
__d¨wö_dev_t
 
	tdev_t
;

258 
	#_DEV_T


	)

261 #i‚def 
_MODE_T


262 
__d¨wö_mode_t
 
	tmode_t
;

263 
	#_MODE_T


	)

266 
u_öt32_t


267 
	`¨c4øndom
();

268 
	`¨c4øndom_addøndom
(*
d©
, 
d©Àn
);

269 
	`¨c4øndom_°ú
();

272 *
	`cgëˇp
(*, const *, );

273 
	`cgë˛o£
();

274 
	`cgëít
(**, **, const *);

275 
	`cgëfú°
(**, **);

276 
	`cgëm©ch
(const *, const *);

277 
	`cgë√xt
(**, **);

278 
	`cgënum
(*, const *, *);

279 
	`cgë£t
(const *);

280 
	`cgë°r
(*, const *, **);

281 
	`cgëu°r
(*, const *, **);

283 
	$d´m⁄
(, Ë
	$__DARWIN_1050
(
d´m⁄
Ë
__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
;

284 *
	`dev«me
(
dev_t
, 
mode_t
);

285 *
	`dev«me_r
(
dev_t
, 
mode_t
, *
buf
, 
Àn
);

286 *
	`gëbsize
(*, *);

287 
	`gëlﬂdavg
([], );

289 *
	`gë¥og«me
();

291 
	`hóps‹t
(*, 
size_t
, size_t,

293 
	`mîges‹t
(*, 
size_t
, size_t,

295 
	`qs‹t_r
(*, 
size_t
, size_t, *,

297 
	`ødixs‹t
(const **, , const *,

299 
	`£çrog«me
(const *);

300 
	`§adixs‹t
(const **, , const *,

302 
	`§™ddev
();

303 
	`§™domdev
();

304 *
	`ªÆlocf
(*, 
size_t
);

305 #i‡!
__DARWIN_NO_LONG_LONG


307 
	`°πoq
(const *, **, );

309 
	`°πouq
(const *, **, );

311 *
sub›èrg
;

312 *
	`vÆloc
(
size_t
);

316 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

317 #¥agm®
GCC
 
pois⁄
 
mb°owcs
 
mbtowc
 
wc°ombs
 
w˘omb


319 
__END_DECLS


321 #ifde‡
_USE_EXTENDED_LOCALES_


322 
	~<xloˇÀ/_°dlib.h
>

	@/usr/include/string.h

58 #i‚de‡
_STRING_H_


59 
	#_STRING_H_


	)

60 
	~<_ty≥s.h
>

62 #i‚def 
_SIZE_T


63 
	#_SIZE_T


	)

64 
__d¨wö_size_t
 
	tsize_t
;

67 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

68 #i‚de‡
_SSIZE_T


69 
	#_SSIZE_T


	)

70 
__d¨wö_ssize_t
 
	tssize_t
;

74 #i‚de‡
NULL


75 
	#NULL
 
__DARWIN_NULL


	)

78 
	~<sys/cdefs.h
>

80 
__BEGIN_DECLS


81 *
memchr
(c⁄° *, , 
size_t
);

82 
memcmp
(c⁄° *, c⁄° *, 
size_t
);

83 *
mem˝y
(*, c⁄° *, 
size_t
);

84 *
memmove
(*, c⁄° *, 
size_t
);

85 *
mem£t
(*, , 
size_t
);

86 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

87 *
°p˝y
(*, const *);

88 *
°rˇ£°r
(const *, const *);

90 *
°rˇt
(*, const *);

91 *
°rchr
(const *, );

92 
°rcmp
(const *, const *);

93 
°rcﬁl
(const *, const *);

94 *
°r˝y
(*, const *);

95 
size_t
 
°rc•n
(const *, const *);

96 *
	$°ªº‹
(Ë
	`__DARWIN_ALIAS
(
°ªº‹
);

97 
	`°ªº‹_r
(, *, 
size_t
);

98 
size_t
 
	`°æí
(const *);

99 *
	`°∫ˇt
(*, c⁄° *, 
size_t
);

100 
	`°∫cmp
(c⁄° *, c⁄° *, 
size_t
);

101 *
	`°∫˝y
(*, c⁄° *, 
size_t
);

102 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

103 *
	`°∫°r
(c⁄° *, c⁄° *, 
size_t
);

105 *
	`°Ωbrk
(const *, const *);

106 *
	`°ºchr
(const *, );

107 
size_t
 
	`°r•n
(const *, const *);

108 *
	`°r°r
(const *, const *);

109 *
	`°πok
(*, const *);

110 
size_t
 
	`°rx‰m
(*, const *, size_t);

113 #i‚de‡
_ANSI_SOURCE


114 *
	`memc˝y
(*, c⁄° *, , 
size_t
);

115 *
	`°πok_r
(*, const *, **);

116 *
	`°rdup
(const *);

117 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

118 
	`bcmp
(c⁄° *, c⁄° *, 
size_t
);

119 
	`bc›y
(c⁄° *, *, 
size_t
);

120 
	`bzîo
(*, 
size_t
);

121 
	`ffs
();

122 
	`ff¶
();

123 
	`Ês
();

124 
	`Ê¶
();

125 *
	`ödex
(const *, );

126 
	`mem£t_∑âîn4
(*, c⁄° *, 
size_t
);

127 
	`mem£t_∑âîn8
(*, c⁄° *, 
size_t
);

128 
	`mem£t_∑âîn16
(*, c⁄° *, 
size_t
);

129 *
	`rödex
(const *, );

130 
	`°rˇ£cmp
(const *, const *);

131 
size_t
 
	`°æˇt
(*, const *, size_t);

132 
size_t
 
	`°æ˝y
(*, const *, size_t);

133 
	`°rmode
(, *);

134 
	`°∫ˇ£cmp
(c⁄° *, c⁄° *, 
size_t
);

135 *
	`°r£p
(**, const *);

136 *
	`°rsig«l
(
sig
);

137 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

140 
__END_DECLS


142 #ifde‡
_USE_EXTENDED_LOCALES_


143 
	~<xloˇÀ/_°rög.h
>

146 #i‡
	`deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

148 
	~<£cuª/_°rög.h
>

	@/usr/include/sys/stat.h

70 #i‚de‡
_SYS_STAT_H_


71 
	#_SYS_STAT_H_


	)

73 
	~<sys/_ty≥s.h
>

74 
	~<sys/cdefs.h
>

77 
	#__√ed_°ru˘_time•ec


	)

78 
	~<sys/_°ru˘s.h
>

85 #i‚de‡
_BLKCNT_T


86 
__d¨wö_blk˙t_t
 
	tblk˙t_t
;

87 
	#_BLKCNT_T


	)

90 #i‚de‡
_BLKSIZE_T


91 
__d¨wö_blksize_t
 
	tblksize_t
;

92 
	#_BLKSIZE_T


	)

95 #i‚de‡
_DEV_T


96 
__d¨wö_dev_t
 
	tdev_t
;

97 
	#_DEV_T


	)

100 #i‚def 
_INO_T


101 
__d¨wö_öo_t
 
	töo_t
;

102 
	#_INO_T


	)

105 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

106 #i‚def 
_INO64_T


107 
__d¨wö_öo64_t
 
	töo64_t
;

108 
	#_INO64_T


	)

112 #i‚def 
_MODE_T


113 
__d¨wö_mode_t
 
	tmode_t
;

114 
	#_MODE_T


	)

117 #i‚de‡
_NLINK_T


118 
__uöt16_t
 
	t∆ök_t
;

119 
	#_NLINK_T


	)

122 #i‚de‡
_UID_T


123 
__d¨wö_uid_t
 
	tuid_t
;

124 
	#_UID_T


	)

127 #i‚de‡
_GID_T


128 
__d¨wö_gid_t
 
	tgid_t
;

129 
	#_GID_T


	)

132 #i‚de‡
_OFF_T


133 
__d¨wö_off_t
 
	toff_t
;

134 
	#_OFF_T


	)

137 #i‚def 
_TIME_T


138 
	#_TIME_T


	)

139 
__d¨wö_time_t
 
	ttime_t
;

143 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

152 
	so°©
 {

153 
__uöt16_t
 
	m°_dev
;

154 
öo_t
 
	m°_öo
;

155 
mode_t
 
	m°_mode
;

156 
∆ök_t
 
	m°_∆ök
;

157 
__uöt16_t
 
	m°_uid
;

158 
__uöt16_t
 
	m°_gid
;

159 
__uöt16_t
 
	m°_rdev
;

160 
__öt32_t
 
	m°_size
;

161 
time•ec
 
	m°_©ime•ec
;

162 
time•ec
 
	m°_mtime•ec
;

163 
time•ec
 
	m°_˘ime•ec
;

164 
__öt32_t
 
	m°_blksize
;

165 
__öt32_t
 
	m°_blocks
;

166 
__uöt32_t
 
	m°_Êags
;

167 
__uöt32_t
 
	m°_gí
;

170 
	#__DARWIN_STRUCT_STAT64_TIMES
 \

171 
time•ec
 
°_©ime•ec
; \

172 
time•ec
 
°_mtime•ec
; \

173 
time•ec
 
°_˘ime•ec
; \

174 
time•ec
 
°_búthtime•ec
;

	)

178 
	#__DARWIN_STRUCT_STAT64_TIMES
 \

179 
time_t
 
°_©ime
; \

180 
°_©imí£c
; \

181 
time_t
 
°_mtime
; \

182 
°_mtimí£c
; \

183 
time_t
 
°_˘ime
; \

184 
°_˘imí£c
; \

185 
time_t
 
°_búthtime
; \

186 
°_búthtimí£c
;

	)

200 
	#__DARWIN_STRUCT_STAT64
 { \

201 
dev_t
 
°_dev
; \

202 
mode_t
 
°_mode
; \

203 
∆ök_t
 
°_∆ök
; \

204 
__d¨wö_öo64_t
 
°_öo
; \

205 
uid_t
 
°_uid
; \

206 
gid_t
 
°_gid
; \

207 
dev_t
 
°_rdev
; \

208 
__DARWIN_STRUCT_STAT64_TIMES
 \

209 
off_t
 
°_size
; \

210 
blk˙t_t
 
°_blocks
; \

211 
blksize_t
 
°_blksize
; \

212 
__uöt32_t
 
°_Êags
; \

213 
__uöt32_t
 
°_gí
; \

214 
__öt32_t
 
°_l•¨e
; \

215 
__öt64_t
 
°_q•¨e
[2]; \

216 }

	)

222 #i‡
__DARWIN_64_BIT_INO_T


224 
°©
 
	g__DARWIN_STRUCT_STAT64
;

228 
	s°©
 {

229 
dev_t
 
	m°_dev
;

230 
öo_t
 
	m°_öo
;

231 
mode_t
 
	m°_mode
;

232 
∆ök_t
 
	m°_∆ök
;

233 
uid_t
 
	m°_uid
;

234 
gid_t
 
	m°_gid
;

235 
dev_t
 
	m°_rdev
;

236 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

237 
time•ec
 
	m°_©ime•ec
;

238 
time•ec
 
	m°_mtime•ec
;

239 
time•ec
 
	m°_˘ime•ec
;

241 
time_t
 
	m°_©ime
;

242 
	m°_©imí£c
;

243 
time_t
 
	m°_mtime
;

244 
	m°_mtimí£c
;

245 
time_t
 
	m°_˘ime
;

246 
	m°_˘imí£c
;

248 
off_t
 
	m°_size
;

249 
blk˙t_t
 
	m°_blocks
;

250 
blksize_t
 
	m°_blksize
;

251 
__uöt32_t
 
	m°_Êags
;

252 
__uöt32_t
 
	m°_gí
;

253 
__öt32_t
 
	m°_l•¨e
;

254 
__öt64_t
 
	m°_q•¨e
[2];

259 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

261 
°©64
 
	g__DARWIN_STRUCT_STAT64
;

268 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

269 
	#°_©ime
 
°_©ime•ec
.
tv_£c


	)

270 
	#°_mtime
 
°_mtime•ec
.
tv_£c


	)

271 
	#°_˘ime
 
°_˘ime•ec
.
tv_£c


	)

272 
	#°_búthtime
 
°_búthtime•ec
.
tv_£c


	)

279 #i‚de‡
S_IFMT


281 
	#S_IFMT
 0170000

	)

282 
	#S_IFIFO
 0010000

	)

283 
	#S_IFCHR
 0020000

	)

284 
	#S_IFDIR
 0040000

	)

285 
	#S_IFBLK
 0060000

	)

286 
	#S_IFREG
 0100000

	)

287 
	#S_IFLNK
 0120000

	)

288 
	#S_IFSOCK
 0140000

	)

289 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

290 
	#S_IFWHT
 0160000

	)

291 
	#S_IFXATTR
 0200000

	)

296 
	#S_IRWXU
 0000700

	)

297 
	#S_IRUSR
 0000400

	)

298 
	#S_IWUSR
 0000200

	)

299 
	#S_IXUSR
 0000100

	)

301 
	#S_IRWXG
 0000070

	)

302 
	#S_IRGRP
 0000040

	)

303 
	#S_IWGRP
 0000020

	)

304 
	#S_IXGRP
 0000010

	)

306 
	#S_IRWXO
 0000007

	)

307 
	#S_IROTH
 0000004

	)

308 
	#S_IWOTH
 0000002

	)

309 
	#S_IXOTH
 0000001

	)

311 
	#S_ISUID
 0004000

	)

312 
	#S_ISGID
 0002000

	)

313 
	#S_ISVTX
 0001000

	)

315 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

316 
	#S_ISTXT
 
S_ISVTX


	)

317 
	#S_IREAD
 
S_IRUSR


	)

318 
	#S_IWRITE
 
S_IWUSR


	)

319 
	#S_IEXEC
 
S_IXUSR


	)

329 
	#S_ISBLK
(
m
Ë(((mË& 0170000Ë=0060000Ë

	)

330 
	#S_ISCHR
(
m
Ë(((mË& 0170000Ë=0020000Ë

	)

331 
	#S_ISDIR
(
m
Ë(((mË& 0170000Ë=0040000Ë

	)

332 
	#S_ISFIFO
(
m
Ë(((mË& 0170000Ë=0010000Ë

	)

333 
	#S_ISREG
(
m
Ë(((mË& 0170000Ë=0100000Ë

	)

334 
	#S_ISLNK
(
m
Ë(((mË& 0170000Ë=0120000Ë

	)

335 
	#S_ISSOCK
(
m
Ë(((mË& 0170000Ë=0140000Ë

	)

336 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

337 
	#S_ISWHT
(
m
Ë(((mË& 0170000Ë=0160000Ë

	)

338 
	#S_ISXATTR
(
m
Ë(((mË& 0200000Ë=0200000Ë

	)

356 
	#S_TYPEISMQ
(
buf
Ë(0Ë

	)

357 
	#S_TYPEISSEM
(
buf
Ë(0Ë

	)

358 
	#S_TYPEISSHM
(
buf
Ë(0Ë

	)

374 
	#S_TYPEISTMO
(
buf
Ë(0Ë

	)

377 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

378 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

380 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISTXT
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

382 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

384 
	#S_BLKSIZE
 512

	)

391 
	#UF_SETTABLE
 0x0000fff‡

	)

392 
	#UF_NODUMP
 0x00000001

	)

393 
	#UF_IMMUTABLE
 0x00000002

	)

394 
	#UF_APPEND
 0x00000004

	)

395 
	#UF_OPAQUE
 0x00000008

	)

402 
	#UF_HIDDEN
 0x00008000

	)

407 
	#SF_SETTABLE
 0xffff0000

	)

408 
	#SF_ARCHIVED
 0x00010000

	)

409 
	#SF_IMMUTABLE
 0x00020000

	)

410 
	#SF_APPEND
 0x00040000

	)

422 
__BEGIN_DECLS


424 
	$chmod
(c⁄° *, 
mode_t
Ë
	`__DARWIN_ALIAS
(
chmod
);

425 
	$fchmod
(, 
mode_t
Ë
	`__DARWIN_ALIAS
(
fchmod
);

426 
	$f°©
(, 
°©
 *Ë
	`__DARWIN_INODE64
(
f°©
);

427 
	$l°©
(c⁄° *, 
°©
 *Ë
	`__DARWIN_INODE64
(
l°©
);

428 
	`mkdú
(c⁄° *, 
mode_t
);

429 
	`mkfifo
(c⁄° *, 
mode_t
);

430 
	$°©
(c⁄° *, 
°©
 *Ë
	`__DARWIN_INODE64
(stat);

431 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

432 
mode_t
 
	`umask
(mode_t);

434 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

435 #i‚de‡
_FILESEC_T


436 
_fûe£c
;

437 
_fûe£c
 *
	tfûe£c_t
;

438 
	#_FILESEC_T


	)

440 
	`chÊags
(c⁄° *, 
__uöt32_t
);

441 
	`chmodx_≈
(c⁄° *, 
fûe£c_t
);

442 
	`fchÊags
(, 
__uöt32_t
);

443 
	`fchmodx_≈
(, 
fûe£c_t
);

444 
	$f°©x_≈
(, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
f°©x_≈
);

445 
	`lchÊags
(c⁄° *, 
__uöt32_t
);

446 
	`lchmod
(c⁄° *, 
mode_t
);

447 
	$l°©x_≈
(c⁄° *, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
l°©x_≈
);

448 
	`mkdúx_≈
(c⁄° *, 
fûe£c_t
);

449 
	`mkfifox_≈
(c⁄° *, 
fûe£c_t
);

450 
	$°©x_≈
(c⁄° *, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
°©x_≈
);

451 
	`umaskx_≈
(
fûe£c_t
);

453 
	`f°©x64_≈
(, 
°©64
 *, 
fûe£c_t
);

454 
	`l°©x64_≈
(c⁄° *, 
°©64
 *, 
fûe£c_t
);

455 
	`°©x64_≈
(c⁄° *, 
°©64
 *, 
fûe£c_t
);

456 
	`f°©64
(, 
°©64
 *);

457 
	`l°©64
(c⁄° *, 
°©64
 *);

458 
	`°©64
(c⁄° *, 
°©64
 *);

461 
__END_DECLS


	@/usr/include/sys/types.h

69 #i‚de‡
_SYS_TYPES_H_


70 
	#_SYS_TYPES_H_


	)

72 
	~<sys/≠∂ópi›ts.h
>

74 #i‚de‡
__ASSEMBLER__


75 
	~<sys/cdefs.h
>

78 
	~<machöe/ty≥s.h
>

79 
	~<sys/_ty≥s.h
>

81 
	~<machöe/ídün.h
>

83 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

84 
	tu_ch¨
;

85 
	tu_sh‹t
;

86 
	tu_öt
;

87 #i‚de‡
_U_LONG


88 
	tu_l⁄g
;

89 
	#_U_LONG


	)

91 
	tush‹t
;

92 
	tuöt
;

95 
u_öt64_t
 
	tu_quad_t
;

96 
öt64_t
 
	tquad_t
;

97 
quad_t
 * 
	tqaddr_t
;

99 * 
	tˇddr_t
;

100 
öt32_t
 
	tdaddr_t
;

102 #i‚de‡
_DEV_T


103 
__d¨wö_dev_t
 
	tdev_t
;

104 
	#_DEV_T


	)

107 
u_öt32_t
 
	tfix±_t
;

109 #i‚de‡
_BLKCNT_T


110 
__d¨wö_blk˙t_t
 
	tblk˙t_t
;

111 
	#_BLKCNT_T


	)

114 #i‚de‡
_BLKSIZE_T


115 
__d¨wö_blksize_t
 
	tblksize_t
;

116 
	#_BLKSIZE_T


	)

119 #i‚de‡
_GID_T


120 
__d¨wö_gid_t
 
	tgid_t
;

121 
	#_GID_T


	)

124 #i‚de‡
_IN_ADDR_T


125 
	#_IN_ADDR_T


	)

126 
__uöt32_t
 
	tö_addr_t
;

129 #i‚de‡
_IN_PORT_T


130 
	#_IN_PORT_T


	)

131 
__uöt16_t
 
	tö_p‹t_t
;

134 #i‚def 
_INO_T


135 
__d¨wö_öo_t
 
	töo_t
;

136 
	#_INO_T


	)

139 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

140 #i‚def 
_INO64_T


141 
__d¨wö_öo64_t
 
	töo64_t
;

142 
	#_INO64_T


	)

146 #i‚de‡
_KEY_T


147 
	#_KEY_T


	)

148 
__öt32_t
 
	tkey_t
;

151 #i‚def 
_MODE_T


152 
__d¨wö_mode_t
 
	tmode_t
;

153 
	#_MODE_T


	)

156 #i‚de‡
_NLINK_T


157 
__uöt16_t
 
	t∆ök_t
;

158 
	#_NLINK_T


	)

161 #i‚de‡
_ID_T


162 
	#_ID_T


	)

163 
__d¨wö_id_t
 
	tid_t
;

166 #i‚de‡
_PID_T


167 
__d¨wö_pid_t
 
	tpid_t
;

168 
	#_PID_T


	)

171 #i‚de‡
_OFF_T


172 
__d¨wö_off_t
 
	toff_t
;

173 
	#_OFF_T


	)

176 
öt32_t
 
	t£gsz_t
;

177 
öt32_t
 
	tswblk_t
;

179 #i‚de‡
_UID_T


180 
__d¨wö_uid_t
 
	tuid_t
;

181 
	#_UID_T


	)

184 #i‚de‡
_ID_T


185 
__d¨wö_id_t
 
	tid_t
;

186 
	#_ID_T


	)

189 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

191 #i‡
deföed
(
__˝lu•lus
)

197 
ölöe
 
__öt32_t
 
	$maj‹
(
__uöt32_t
 
_x
)

199  (
__öt32_t
)(((
__uöt32_t
)
_x
 >> 24) & 0xff);

200 
	}
}

202 
ölöe
 
__öt32_t
 
	$mö‹
(
__uöt32_t
 
_x
)

204  (
__öt32_t
)((
_x
) & 0xffffff);

205 
	}
}

207 
ölöe
 
dev_t
 
	$makedev
(
__uöt32_t
 
_maj‹
, __uöt32_à
_mö‹
)

209  (
dev_t
)(((
_maj‹
Ë<< 24Ë| (
_mö‹
));

210 
	}
}

214 
	#maj‹
(
x
Ë((
öt32_t
)(((
u_öt32_t
)(xË>> 24Ë& 0xff))

	)

215 
	#mö‹
(
x
Ë((
öt32_t
)((xË& 0xffffff))

	)

216 
	#makedev
(
x
,
y
Ë((
dev_t
)(((xË<< 24Ë| (y)))

	)

221 #i‚def 
_CLOCK_T


222 
	#_CLOCK_T


	)

223 
__d¨wö_˛ock_t
 
	t˛ock_t
;

226 #i‚de‡
_SIZE_T


227 
	#_SIZE_T


	)

230 
__d¨wö_size_t
 
	tsize_t
;

233 #i‚def 
_SSIZE_T


234 
	#_SSIZE_T


	)

235 
__d¨wö_ssize_t
 
	tssize_t
;

238 #i‚def 
_TIME_T


239 
	#_TIME_T


	)

240 
__d¨wö_time_t
 
	ttime_t
;

243 #i‚de‡
_USECONDS_T


244 
	#_USECONDS_T


	)

245 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

248 #i‚de‡
_SUSECONDS_T


249 
	#_SUSECONDS_T


	)

250 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

253 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

259 
	#__√ed_fd_£t


	)

260 
	~<sys/_°ru˘s.h
>

262 
	#NBBY
 
__DARWIN_NBBY


	)

263 
	#NFDBITS
 
__DARWIN_NFDBITS


	)

264 
	#howm™y
(
x
, 
y
Ë
	`__DARWIN_howm™y
(x, yË

	)

265 
__öt32_t
 
	tfd_mask
;

273 #i‚def 
FD_SETSIZE


274 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

276 #i‚de‡
FD_SET


277 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

279 #i‚de‡
FD_CLR


280 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

282 #i‚de‡
FD_ISSET


283 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

285 #i‚de‡
FD_ZERO


286 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

288 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

289 #i‚de‡
FD_COPY


290 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

295 #i‡
deföed
(
__STDC__
Ë&& deföed(
KERNEL
)

301 
	g¥oc
;

302 
	gpgΩ
;

303 
	gu¸ed
;

304 
	grußge
;

305 
	gfûe
;

306 
	gbuf
;

307 
	gây
;

308 
	guio
;

314 #i‚de‡
__POSIX_LIB__


316 #i‚de‡
_PTHREAD_ATTR_T


317 
	#_PTHREAD_ATTR_T


	)

318 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

320 #i‚de‡
_PTHREAD_COND_T


321 
	#_PTHREAD_COND_T


	)

322 
__d¨wö_±hªad_c⁄d_t
 
	t±hªad_c⁄d_t
;

324 #i‚de‡
_PTHREAD_CONDATTR_T


325 
	#_PTHREAD_CONDATTR_T


	)

326 
__d¨wö_±hªad_c⁄d©å_t
 
	t±hªad_c⁄d©å_t
;

328 #i‚de‡
_PTHREAD_MUTEX_T


329 
	#_PTHREAD_MUTEX_T


	)

330 
__d¨wö_±hªad_muãx_t
 
	t±hªad_muãx_t
;

332 #i‚de‡
_PTHREAD_MUTEXATTR_T


333 
	#_PTHREAD_MUTEXATTR_T


	)

334 
__d¨wö_±hªad_muãx©å_t
 
	t±hªad_muãx©å_t
;

336 #i‚de‡
_PTHREAD_ONCE_T


337 
	#_PTHREAD_ONCE_T


	)

338 
__d¨wö_±hªad_⁄˚_t
 
	t±hªad_⁄˚_t
;

340 #i‚de‡
_PTHREAD_RWLOCK_T


341 
	#_PTHREAD_RWLOCK_T


	)

342 
__d¨wö_±hªad_rwlock_t
 
	t±hªad_rwlock_t
;

344 #i‚de‡
_PTHREAD_RWLOCKATTR_T


345 
	#_PTHREAD_RWLOCKATTR_T


	)

346 
__d¨wö_±hªad_rwlock©å_t
 
	t±hªad_rwlock©å_t
;

348 #i‚de‡
_PTHREAD_T


349 
	#_PTHREAD_T


	)

350 
__d¨wö_±hªad_t
 
	t±hªad_t
;

355 #i‚de‡
_PTHREAD_KEY_T


356 
	#_PTHREAD_KEY_T


	)

357 
__d¨wö_±hªad_key_t
 
	t±hªad_key_t
;

361 #i‚de‡
_FSBLKCNT_T


362 
	#_FSBLKCNT_T


	)

363 
__d¨wö_fsblk˙t_t
 
	tfsblk˙t_t
;

366 #i‚de‡
_FSFILCNT_T


367 
	#_FSFILCNT_T


	)

368 
__d¨wö_fsfû˙t_t
 
	tfsfû˙t_t
;

	@/usr/include/unistd.h

68 #i‚de‡
_UNISTD_H_


69 
	#_UNISTD_H_


	)

71 
	~<_ty≥s.h
>

72 
	~<sys/uni°d.h
>

74 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

75 #i‚de‡
_DEV_T


76 
	#_DEV_T


	)

77 
__d¨wö_dev_t
 
	tdev_t
;

81 #i‚de‡
_GID_T


82 
	#_GID_T


	)

83 
__d¨wö_gid_t
 
	tgid_t
;

86 #i‚de‡
_INTPTR_T


87 
	#_INTPTR_T


	)

88 
__d¨wö_öçå_t
 
	töçå_t
;

91 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

92 #i‚de‡
_MODE_T


93 
	#_MODE_T


	)

94 
__d¨wö_mode_t
 
	tmode_t
;

98 #i‚de‡
_OFF_T


99 
	#_OFF_T


	)

100 
__d¨wö_off_t
 
	toff_t
;

103 #i‚de‡
_PID_T


104 
	#_PID_T


	)

105 
__d¨wö_pid_t
 
	tpid_t
;

108 #i‚de‡
_SIZE_T


109 
	#_SIZE_T


	)

112 
__d¨wö_size_t
 
	tsize_t
;

115 #i‚def 
_SSIZE_T


116 
	#_SSIZE_T


	)

117 
__d¨wö_ssize_t
 
	tssize_t
;

120 #i‚de‡
_UID_T


121 
	#_UID_T


	)

122 
__d¨wö_uid_t
 
	tuid_t
;

125 #i‚de‡
_USECONDS_T


126 
	#_USECONDS_T


	)

127 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

130 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

131 #i‚de‡
_UUID_T


132 
	#_UUID_T


	)

133 
__d¨wö_uuid_t
 
	tuuid_t
;

137 
	#STDIN_FILENO
 0

	)

138 
	#STDOUT_FILENO
 1

	)

139 
	#STDERR_FILENO
 2

	)

141 #i‚de‡
NULL


142 
	#NULL
 
__DARWIN_NULL


	)

147 
	#_XOPEN_VERSION
 600

	)

148 
	#_XOPEN_XCU_VERSION
 4

	)

152 
	#_POSIX_ADVISORY_INFO
 (-1Ë

	)

153 
	#_POSIX_ASYNCHRONOUS_IO
 (-1Ë

	)

154 
	#_POSIX_BARRIERS
 (-1Ë

	)

155 
	#_POSIX_CHOWN_RESTRICTED
 200112L

	)

156 
	#_POSIX_CLOCK_SELECTION
 (-1Ë

	)

157 
	#_POSIX_CPUTIME
 (-1Ë

	)

158 
	#_POSIX_FSYNC
 200112L

	)

159 
	#_POSIX_IPV6
 200112L

	)

160 
	#_POSIX_JOB_CONTROL
 200112L

	)

161 
	#_POSIX_MAPPED_FILES
 200112L

	)

162 
	#_POSIX_MEMLOCK
 (-1Ë

	)

163 
	#_POSIX_MEMLOCK_RANGE
 (-1Ë

	)

164 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

165 
	#_POSIX_MESSAGE_PASSING
 (-1Ë

	)

166 
	#_POSIX_MONOTONIC_CLOCK
 (-1Ë

	)

167 
	#_POSIX_NO_TRUNC
 200112L

	)

168 
	#_POSIX_PRIORITIZED_IO
 (-1Ë

	)

169 
	#_POSIX_PRIORITY_SCHEDULING
 (-1Ë

	)

170 
	#_POSIX_RAW_SOCKETS
 (-1Ë

	)

171 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

172 
	#_POSIX_REALTIME_SIGNALS
 (-1Ë

	)

173 
	#_POSIX_REGEXP
 200112L

	)

174 
	#_POSIX_SAVED_IDS
 200112L

	)

175 
	#_POSIX_SEMAPHORES
 (-1Ë

	)

176 
	#_POSIX_SHARED_MEMORY_OBJECTS
 (-1Ë

	)

177 
	#_POSIX_SHELL
 200112L

	)

178 
	#_POSIX_SPAWN
 (-1Ë

	)

179 
	#_POSIX_SPIN_LOCKS
 (-1Ë

	)

180 
	#_POSIX_SPORADIC_SERVER
 (-1Ë

	)

181 
	#_POSIX_SYNCHRONIZED_IO
 (-1Ë

	)

182 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

183 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

184 
	#_POSIX_THREAD_CPUTIME
 (-1Ë

	)

185 
	#_POSIX_THREAD_PRIO_INHERIT
 (-1Ë

	)

186 
	#_POSIX_THREAD_PRIO_PROTECT
 (-1Ë

	)

187 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 (-1Ë

	)

188 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

189 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

190 
	#_POSIX_THREAD_SPORADIC_SERVER
 (-1Ë

	)

191 
	#_POSIX_THREADS
 200112L

	)

192 
	#_POSIX_TIMEOUTS
 (-1Ë

	)

193 
	#_POSIX_TIMERS
 (-1Ë

	)

194 
	#_POSIX_TRACE
 (-1Ë

	)

195 
	#_POSIX_TRACE_EVENT_FILTER
 (-1Ë

	)

196 
	#_POSIX_TRACE_INHERIT
 (-1Ë

	)

197 
	#_POSIX_TRACE_LOG
 (-1Ë

	)

198 
	#_POSIX_TYPED_MEMORY_OBJECTS
 (-1Ë

	)

199 #i‚de‡
_POSIX_VDISABLE


200 
	#_POSIX_VDISABLE
 0xf‡

	)

203 
	#_POSIX2_C_BIND
 200112L

	)

204 
	#_POSIX2_C_DEV
 200112L

	)

205 
	#_POSIX2_CHAR_TERM
 200112L

	)

206 
	#_POSIX2_FORT_DEV
 (-1Ë

	)

207 
	#_POSIX2_FORT_RUN
 200112L

	)

208 
	#_POSIX2_LOCALEDEF
 200112L

	)

209 
	#_POSIX2_PBS
 (-1)

	)

210 
	#_POSIX2_PBS_ACCOUNTING
 (-1)

	)

211 
	#_POSIX2_PBS_CHECKPOINT
 (-1)

	)

212 
	#_POSIX2_PBS_LOCATE
 (-1)

	)

213 
	#_POSIX2_PBS_MESSAGE
 (-1)

	)

214 
	#_POSIX2_PBS_TRACK
 (-1)

	)

215 
	#_POSIX2_SW_DEV
 200112L

	)

216 
	#_POSIX2_UPE
 200112L

	)

218 
	#_V6_ILP32_OFF32
 (-1)

	)

219 
	#_V6_ILP32_OFFBIG
 (1)

	)

220 
	#_V6_LP64_OFF64
 (-1)

	)

221 
	#_V6_LPBIG_OFFBIG
 (-1)

	)

223 
	#_XBS5_ILP32_OFF32
 
_V6_ILP32_OFF32


	)

224 
	#_XBS5_ILP32_OFFBIG
 
_V6_ILP32_OFFBIG


	)

225 
	#_XBS5_LP64_OFF64
 
_V6_LP64_OFF64


	)

226 
	#_XBS5_LPBIG_OFFBIG
 
_V6_LPBIG_OFFBIG


	)

228 
	#_XOPEN_CRYPT
 (1)

	)

229 
	#_XOPEN_ENH_I18N
 (1Ë

	)

230 
	#_XOPEN_LEGACY
 (-1Ë

	)

231 
	#_XOPEN_REALTIME
 (-1Ë

	)

232 
	#_XOPEN_REALTIME_THREADS
 (-1Ë

	)

233 
	#_XOPEN_SHM
 (1)

	)

234 
	#_XOPEN_STREAMS
 (-1)

	)

235 
	#_XOPEN_UNIX
 (1)

	)

238 
	#F_ULOCK
 0

	)

239 
	#F_LOCK
 1

	)

240 
	#F_TLOCK
 2

	)

241 
	#F_TEST
 3

	)

244 
	#_SC_ARG_MAX
 1

	)

245 
	#_SC_CHILD_MAX
 2

	)

246 
	#_SC_CLK_TCK
 3

	)

247 
	#_SC_NGROUPS_MAX
 4

	)

248 
	#_SC_OPEN_MAX
 5

	)

249 
	#_SC_JOB_CONTROL
 6

	)

250 
	#_SC_SAVED_IDS
 7

	)

251 
	#_SC_VERSION
 8

	)

252 
	#_SC_BC_BASE_MAX
 9

	)

253 
	#_SC_BC_DIM_MAX
 10

	)

254 
	#_SC_BC_SCALE_MAX
 11

	)

255 
	#_SC_BC_STRING_MAX
 12

	)

256 
	#_SC_COLL_WEIGHTS_MAX
 13

	)

257 
	#_SC_EXPR_NEST_MAX
 14

	)

258 
	#_SC_LINE_MAX
 15

	)

259 
	#_SC_RE_DUP_MAX
 16

	)

260 
	#_SC_2_VERSION
 17

	)

261 
	#_SC_2_C_BIND
 18

	)

262 
	#_SC_2_C_DEV
 19

	)

263 
	#_SC_2_CHAR_TERM
 20

	)

264 
	#_SC_2_FORT_DEV
 21

	)

265 
	#_SC_2_FORT_RUN
 22

	)

266 
	#_SC_2_LOCALEDEF
 23

	)

267 
	#_SC_2_SW_DEV
 24

	)

268 
	#_SC_2_UPE
 25

	)

269 
	#_SC_STREAM_MAX
 26

	)

270 
	#_SC_TZNAME_MAX
 27

	)

271 
	#_SC_ASYNCHRONOUS_IO
 28

	)

272 
	#_SC_PAGESIZE
 29

	)

273 
	#_SC_MEMLOCK
 30

	)

274 
	#_SC_MEMLOCK_RANGE
 31

	)

275 
	#_SC_MEMORY_PROTECTION
 32

	)

276 
	#_SC_MESSAGE_PASSING
 33

	)

277 
	#_SC_PRIORITIZED_IO
 34

	)

278 
	#_SC_PRIORITY_SCHEDULING
 35

	)

279 
	#_SC_REALTIME_SIGNALS
 36

	)

280 
	#_SC_SEMAPHORES
 37

	)

281 
	#_SC_FSYNC
 38

	)

282 
	#_SC_SHARED_MEMORY_OBJECTS
 39

	)

283 
	#_SC_SYNCHRONIZED_IO
 40

	)

284 
	#_SC_TIMERS
 41

	)

285 
	#_SC_AIO_LISTIO_MAX
 42

	)

286 
	#_SC_AIO_MAX
 43

	)

287 
	#_SC_AIO_PRIO_DELTA_MAX
 44

	)

288 
	#_SC_DELAYTIMER_MAX
 45

	)

289 
	#_SC_MQ_OPEN_MAX
 46

	)

290 
	#_SC_MAPPED_FILES
 47

	)

291 
	#_SC_RTSIG_MAX
 48

	)

292 
	#_SC_SEM_NSEMS_MAX
 49

	)

293 
	#_SC_SEM_VALUE_MAX
 50

	)

294 
	#_SC_SIGQUEUE_MAX
 51

	)

295 
	#_SC_TIMER_MAX
 52

	)

296 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

297 
	#_SC_NPROCESSORS_CONF
 57

	)

298 
	#_SC_NPROCESSORS_ONLN
 58

	)

300 
	#_SC_2_PBS
 59

	)

301 
	#_SC_2_PBS_ACCOUNTING
 60

	)

302 
	#_SC_2_PBS_CHECKPOINT
 61

	)

303 
	#_SC_2_PBS_LOCATE
 62

	)

304 
	#_SC_2_PBS_MESSAGE
 63

	)

305 
	#_SC_2_PBS_TRACK
 64

	)

306 
	#_SC_ADVISORY_INFO
 65

	)

307 
	#_SC_BARRIERS
 66

	)

308 
	#_SC_CLOCK_SELECTION
 67

	)

309 
	#_SC_CPUTIME
 68

	)

310 
	#_SC_FILE_LOCKING
 69

	)

311 
	#_SC_GETGR_R_SIZE_MAX
 70

	)

312 
	#_SC_GETPW_R_SIZE_MAX
 71

	)

313 
	#_SC_HOST_NAME_MAX
 72

	)

314 
	#_SC_LOGIN_NAME_MAX
 73

	)

315 
	#_SC_MONOTONIC_CLOCK
 74

	)

316 
	#_SC_MQ_PRIO_MAX
 75

	)

317 
	#_SC_READER_WRITER_LOCKS
 76

	)

318 
	#_SC_REGEXP
 77

	)

319 
	#_SC_SHELL
 78

	)

320 
	#_SC_SPAWN
 79

	)

321 
	#_SC_SPIN_LOCKS
 80

	)

322 
	#_SC_SPORADIC_SERVER
 81

	)

323 
	#_SC_THREAD_ATTR_STACKADDR
 82

	)

324 
	#_SC_THREAD_ATTR_STACKSIZE
 83

	)

325 
	#_SC_THREAD_CPUTIME
 84

	)

326 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 85

	)

327 
	#_SC_THREAD_KEYS_MAX
 86

	)

328 
	#_SC_THREAD_PRIO_INHERIT
 87

	)

329 
	#_SC_THREAD_PRIO_PROTECT
 88

	)

330 
	#_SC_THREAD_PRIORITY_SCHEDULING
 89

	)

331 
	#_SC_THREAD_PROCESS_SHARED
 90

	)

332 
	#_SC_THREAD_SAFE_FUNCTIONS
 91

	)

333 
	#_SC_THREAD_SPORADIC_SERVER
 92

	)

334 
	#_SC_THREAD_STACK_MIN
 93

	)

335 
	#_SC_THREAD_THREADS_MAX
 94

	)

336 
	#_SC_TIMEOUTS
 95

	)

337 
	#_SC_THREADS
 96

	)

338 
	#_SC_TRACE
 97

	)

339 
	#_SC_TRACE_EVENT_FILTER
 98

	)

340 
	#_SC_TRACE_INHERIT
 99

	)

341 
	#_SC_TRACE_LOG
 100

	)

342 
	#_SC_TTY_NAME_MAX
 101

	)

343 
	#_SC_TYPED_MEMORY_OBJECTS
 102

	)

344 
	#_SC_V6_ILP32_OFF32
 103

	)

345 
	#_SC_V6_ILP32_OFFBIG
 104

	)

346 
	#_SC_V6_LP64_OFF64
 105

	)

347 
	#_SC_V6_LPBIG_OFFBIG
 106

	)

348 
	#_SC_IPV6
 118

	)

349 
	#_SC_RAW_SOCKETS
 119

	)

350 
	#_SC_SYMLOOP_MAX
 120

	)

351 
	#_SC_ATEXIT_MAX
 107

	)

352 
	#_SC_IOV_MAX
 56

	)

353 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

354 
	#_SC_XOPEN_CRYPT
 108

	)

355 
	#_SC_XOPEN_ENH_I18N
 109

	)

356 
	#_SC_XOPEN_LEGACY
 110

	)

357 
	#_SC_XOPEN_REALTIME
 111

	)

358 
	#_SC_XOPEN_REALTIME_THREADS
 112

	)

359 
	#_SC_XOPEN_SHM
 113

	)

360 
	#_SC_XOPEN_STREAMS
 114

	)

361 
	#_SC_XOPEN_UNIX
 115

	)

362 
	#_SC_XOPEN_VERSION
 116

	)

363 
	#_SC_XOPEN_XCU_VERSION
 121

	)

364 
	#_SC_XBS5_ILP32_OFF32
 122

	)

365 
	#_SC_XBS5_ILP32_OFFBIG
 123

	)

366 
	#_SC_XBS5_LP64_OFF64
 124

	)

367 
	#_SC_XBS5_LPBIG_OFFBIG
 125

	)

368 
	#_SC_SS_REPL_MAX
 126

	)

369 
	#_SC_TRACE_EVENT_NAME_MAX
 127

	)

370 
	#_SC_TRACE_NAME_MAX
 128

	)

371 
	#_SC_TRACE_SYS_MAX
 129

	)

372 
	#_SC_TRACE_USER_EVENT_MAX
 130

	)

373 
	#_SC_PASS_MAX
 131

	)

375 #i‚de‡
_CS_PATH


376 
	#_CS_PATH
 1

	)

378 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2

	)

379 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 3

	)

380 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 4

	)

381 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 5

	)

382 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 6

	)

383 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 7

	)

384 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 8

	)

385 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 9

	)

386 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 10

	)

387 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 11

	)

388 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 12

	)

389 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 13

	)

390 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 14

	)

393 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 20

	)

394 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 21

	)

395 
	#_CS_XBS5_ILP32_OFF32_LIBS
 22

	)

396 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 23

	)

397 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 24

	)

398 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 25

	)

399 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 26

	)

400 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 27

	)

401 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 28

	)

402 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 29

	)

403 
	#_CS_XBS5_LP64_OFF64_LIBS
 30

	)

404 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 31

	)

405 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 32

	)

406 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 33

	)

407 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 34

	)

408 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 35

	)

410 
	#_CS_DARWIN_USER_DIR
 65536

	)

411 
	#_CS_DARWIN_USER_TEMP_DIR
 65537

	)

412 
	#_CS_DARWIN_USER_CACHE_DIR
 65538

	)

414 
__BEGIN_DECLS


416 
	$_exô
(Ë
__dód2
;

417 
	`ac˚ss
(const *, );

419 
	`Æ¨m
();

420 
	`chdú
(const *);

421 
	`chown
(c⁄° *, 
uid_t
, 
gid_t
);

422 
	$˛o£
(Ë
	`__DARWIN_ALIAS_C
(
˛o£
);

423 
size_t
 
	$c⁄f°r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
c⁄f°r
);

424 *
	`¸y±
(const *, const *);

425 *
	`˘îmid
(*);

426 
	`dup
();

427 
	`dup2
(, );

428 #i‡
__DARWIN_UNIX03


429 
	$í¸y±
(*, Ë
	`__DARWIN_ALIAS
(
í¸y±
);

431 
	`í¸y±
(*, );

433 
	`exe˛
(const *, const *, ...);

434 
	`exe˛e
(const *, const *, ...);

435 
	`exe˛p
(const *, const *, ...);

436 
	`execv
(const *, * const *);

437 
	`execve
(const *, * const *, * const *);

438 
	`execvp
(const *, * const *);

439 
	`fchown
(, 
uid_t
, 
gid_t
);

440 
	`fchdú
();

441 
pid_t
 
	`f‹k
();

442 
	`Â©hc⁄f
(, );

443 
	$fsync
(Ë
	`__DARWIN_ALIAS_C
(
fsync
);

444 
	`·runˇã
(, 
off_t
);

445 *
	`gëcwd
(*, 
size_t
);

446 
gid_t
 
	`gëegid
();

447 
uid_t
 
	`gëeuid
();

448 
gid_t
 
	`gëgid
();

449 
	`gëgroups
(, 
gid_t
 []);

450 
	`gëho°id
();

451 
	`gëho°«me
(*, 
size_t
);

452 *
	`gëlogö
();

453 
	`gëlogö_r
(*, 
size_t
);

454 
	$gë›t
(, * c⁄° [], c⁄° *Ë
	`__DARWIN_ALIAS
(
gë›t
);

455 
pid_t
 
	`gëpgid
(pid_t);

456 
pid_t
 
	`gëpgΩ
();

457 
pid_t
 
	`gëpid
();

458 
pid_t
 
	`gëµid
();

459 
pid_t
 
	`gësid
(pid_t);

460 
uid_t
 
	`gëuid
();

461 *
	`gëwd
(*);

462 
	`ißây
();

463 
	$lchown
(c⁄° *, 
uid_t
, 
gid_t
Ë
	`__DARWIN_ALIAS
(
lchown
);

464 
	`lök
(const *, const *);

465 
	$lockf
(, , 
off_t
Ë
	`__DARWIN_ALIAS_C
(
lockf
);

466 
off_t
 
	`l£ek
(, off_t, );

467 
	$ni˚
(Ë
	`__DARWIN_ALIAS
(
ni˚
);

468 
	`∑thc⁄f
(const *, );

469 
	$∑u£
(Ë
	`__DARWIN_ALIAS_C
(
∑u£
);

470 
	`pùe
([2]);

471 
ssize_t
 
	$¥ód
(, *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
¥ód
);

472 
ssize_t
 
	$pwrôe
(, c⁄° *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
pwrôe
);

473 
ssize_t
 
	$ªad
(, *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
ªad
);

474 
ssize_t
 
	`ªadlök
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
size_t
);

475 
	`rmdú
(const *);

476 
	`£ãgid
(
gid_t
);

477 
	`£ãuid
(
uid_t
);

478 
	`£tgid
(
gid_t
);

479 
	`£çgid
(
pid_t
,Öid_t);

480 #i‡
__DARWIN_UNIX03


481 
pid_t
 
	$£çgΩ
(Ë
	`__DARWIN_ALIAS
(
£çgΩ
);

483 
	`£çgΩ
(
pid_t
 
pid
,Öid_à
pgΩ
);

485 
	$£åegid
(
gid_t
, gid_tË
	`__DARWIN_ALIAS
(
£åegid
);

486 
	$£åeuid
(
uid_t
, uid_tË
	`__DARWIN_ALIAS
(
£åeuid
);

487 
pid_t
 
	`£tsid
();

488 
	`£tuid
(
uid_t
);

490 
	$¶ìp
(Ë
	`__DARWIN_ALIAS_C
(
¶ìp
);

491 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

492 
	`symlök
(const *, const *);

493 
	`sync
();

494 
	`sysc⁄f
();

495 
pid_t
 
	`tcgëpgΩ
();

496 
	`tc£çgΩ
(, 
pid_t
);

497 
	`åunˇã
(c⁄° *, 
off_t
);

498 *
	`ây«me
();

499 #i‡
__DARWIN_UNIX03


500 
	$ây«me_r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
ây«me_r
);

502 *
	`ây«me_r
(, *, 
size_t
);

504 
u£c⁄ds_t


505 
	`uÆ¨m
(
u£c⁄ds_t
, useconds_t);

506 
	`u∆ök
(const *);

507 
	$u¶ìp
(
u£c⁄ds_t
Ë
	`__DARWIN_ALIAS_C
(
u¶ìp
);

508 
pid_t
 
	`vf‹k
();

509 
ssize_t
 
	$wrôe
(, c⁄° *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
wrôe
);

511 *
›èrg
;

512 
›töd
, 
›ãº
, 
›t›t
;

514 #if !
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

515 
	~<sys/£À˘.h
>

517 
	$_Exô
(Ë
__dód2
;

518 
	`ac˚ssx_≈
(c⁄° 
ac˚ssx_des¸ùt‹
 *, 
size_t
, *, 
uid_t
);

519 
	`ac˘
(const *);

520 
	`add_¥ofû
(*, 
size_t
, , );

521 *
	`brk
(const *);

522 
	`chroŸ
(const *);

523 
	`ídu£rshñl
();

524 
	`execvP
(const *, const *, * const *);

525 *
	`fÊag°o°r
();

526 
	`gëdèbÀsize
();

527 
	`gëdomaö«me
(*, );

528 
	`gëgrou∂i°
(const *, , *, *);

529 
mode_t
 
	`gëmode
(const *, mode_t);

530 
	$gë∑gesize
(Ë
__puª2
;

531 *
	`gë∑ss
(const *);

532 
	`gë≥îeid
(, 
uid_t
 *, 
gid_t
 *);

533 
	`gëpgid
(
pid_t
 
_pid
);

534 
	`gësgroups_≈
(*, 
uuid_t
);

535 
	`gësid
(
pid_t
 
_pid
);

536 *
	`gëu£rshñl
();

537 
	`gëwgroups_≈
(*, 
uuid_t
);

538 
	`öôgroups
(const *, );

539 
	`úu£rok
(, , const *, const *);

540 
	`úu£rok_ß
(const *, , , const *, const *);

541 
	`is£tugid
();

542 *
	`mkdãmp
(*);

543 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

544 
	`mk°emp
(*);

545 
	`mk°emps
(*, );

546 *
	`mkãmp
(*);

547 
	`nfssvc
(, *);

548 
	`¥ofû
(*, 
size_t
, , );

549 
	`±hªad_£tugid_≈
(
uid_t
, 
gid_t
);

550 
	`±hªad_gëugid_≈
–
uid_t
 *, 
gid_t
 *);

551 
	`rcmd
(**, , const *, const *, const *, *);

552 
	`rcmd_af
(**, , const *, const *, const *, *,

554 
	`ªboŸ
();

555 
	`ªvoke
(const *);

556 
	`ºesvp‹t
(*);

557 
	`ºesvp‹t_af
(*, );

558 
	`ru£rok
(const *, , const *, const *);

559 *
	`sbrk
();

560 
	`£tdomaö«me
(const *, );

561 
	`£tgroups
(, c⁄° 
gid_t
 *);

562 
	`£tho°id
();

563 
	`£tho°«me
(const *, );

564 #i‡
__DARWIN_UNIX03


565 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

567 
	`£tkey
(const *);

569 
	`£éogö
(const *);

570 *
	`£tmode
(const *);

571 
	`£ågid
(
gid_t
);

572 
	`£åuid
(
uid_t
);

573 
	`£tsgroups_≈
(, c⁄° 
uuid_t
);

574 
	`£tu£rshñl
();

575 
	`£twgroups_≈
(, c⁄° 
uuid_t
);

576 
	`°πofÊags
(**, *, *);

577 
	`sw≠⁄
(const *);

578 
	`sysˇŒ
(, ...);

579 
	`ây¶Ÿ
();

580 
	`undñëe
(const *);

581 
	`unwhôeout
(const *);

582 *
	`vÆloc
(
size_t
);

584 *
sub›èrg
;

585 
	`gësub›t
(**, * const *, **);

588 #ifde‡
__LP64__


589 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

590 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

591 
	`exch™ged©a
(const *,const *,);

592 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

593 
	`£¨chfs
(const *,*,*,,,*);

595 
	`fs˘l
(const *,,*,);

597 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

598 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

599 
	`exch™ged©a
(const *,const *,);

600 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

601 
	`£¨chfs
(const *,*,*,,,*);

603 
	`fs˘l
(const *,,*,);

606 
›åe£t
;

609 
__END_DECLS


	@/usr/include/_types.h

24 #i‚de‡
__TYPES_H_


25 
	#__TYPES_H_


	)

27 
	~<sys/_ty≥s.h
>

29 
	t__d¨wö_∆_ôem
;

30 
	t__d¨wö_w˘øns_t
;

31 #ifde‡
__LP64__


32 
__uöt32_t
 
	t__d¨wö_w˘y≥_t
;

34 
	t__d¨wö_w˘y≥_t
;

37 #ifde‡
__WCHAR_MAX__


38 
	#__DARWIN_WCHAR_MAX
 
__WCHAR_MAX__


	)

40 
	#__DARWIN_WCHAR_MAX
 0x7fffffff

	)

43 #i‡
__DARWIN_WCHAR_MAX
 > 0xffffU

44 
	#__DARWIN_WCHAR_MIN
 (-0x7ffffff‡- 1)

	)

46 
	#__DARWIN_WCHAR_MIN
 0

	)

48 
	#__DARWIN_WEOF
 ((
__d¨wö_wöt_t
)-1)

	)

	@/usr/include/_xlocale.h

24 #i‚de‡
__XLOCALE_H_


25 
	#__XLOCALE_H_


	)

27 
	~<sys/cdefs.h
>

29 
__BEGIN_DECLS


30 
___mb_cur_max
();

31 
___mb_cur_max_l
(
loˇÀ_t
);

32 
	g__END_DECLS


	@/usr/include/alloca.h

24 #i‚de‡
_ALLOCA_H_


25 
	#_ALLOCA_H_


	)

27 
	~<sys/cdefs.h
>

28 
	~<_ty≥s.h
>

30 #i‚def 
_SIZE_T


31 
	#_SIZE_T


	)

32 
__d¨wö_size_t
 
	tsize_t
;

35 
__BEGIN_DECLS


36 *
Æloˇ
(
size_t
);

37 
	g__END_DECLS


39 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

41 #unde‡
Æloˇ


42 #unde‡
__Æloˇ


43 
	#Æloˇ
(
size
Ë
	`__Æloˇ
(size)

	)

44 
	#__Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
(size)

	)

	@/usr/include/available.h

65 #i‚de‡
_AVAILABLE_H_


66 
	#_AVAILABLE_H_


	)

72 
	#__MAC_OS_X_VERSION_10_0
 1000

	)

73 
	#__MAC_OS_X_VERSION_10_1
 1010

	)

74 
	#__MAC_OS_X_VERSION_10_2
 1020

	)

75 
	#__MAC_OS_X_VERSION_10_3
 1030

	)

76 
	#__MAC_OS_X_VERSION_10_4
 1040

	)

77 
	#__MAC_OS_X_VERSION_10_5
 1050

	)

84 #i‚de‡
__MAC_OS_X_VERSION_MIN_REQUIRED


85 #ifde‡
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


86 
	#__MAC_OS_X_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


	)

88 #i‡
__µc64__
 || 
__i386__
 || 
__x86_64__


89 
	#__MAC_OS_X_VERSION_MIN_REQUIRED
 
__MAC_OS_X_VERSION_10_4


	)

91 
	#__MAC_OS_X_VERSION_MIN_REQUIRED
 
__MAC_OS_X_VERSION_10_1


	)

99 #i‚de‡
__MAC_OS_X_VERSION_MAX_ALLOWED


100 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 > 
__MAC_OS_X_VERSION_10_5


101 
	#__MAC_OS_X_VERSION_MAX_ALLOWED
 
__MAC_OS_X_VERSION_MIN_REQUIRED


	)

103 
	#__MAC_OS_X_VERSION_MAX_ALLOWED
 
__MAC_OS_X_VERSION_10_5


	)

110 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_OS_X_VERSION_MIN_REQUIRED


111 #îr‹ 
__MAC_OS_X_VERSION_MAX_ALLOWED
 
mu°
 
be
 >
__MAC_OS_X_VERSION_MIN_REQUIRED


113 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_OS_X_VERSION_10_0


114 #îr‹ 
__MAC_OS_X_VERSION_MIN_REQUIRED
 
mu°
 
be
 >
__MAC_OS_X_VERSION_10_0


120 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >1))Ë&& (
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1020)

121 
	#__DARWIN_WEAK_IMPORT_ATTRIBUTE
 
	`__©åibuã__
((
wók_imp‹t
))

	)

122 #ñi‡
deföed
(
__MWERKS__
Ë&& (__MWERKS__ >0x3205Ë&& (
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1020)

123 
	#__DARWIN_WEAK_IMPORT_ATTRIBUTE
 
	`__©åibuã__
((
wók_imp‹t
))

	)

125 
	#__DARWIN_WEAK_IMPORT_ATTRIBUTE


	)

131 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >= 1)))

132 
	#__DARWIN_DEPRECATED_ATTRIBUTE
 
	`__©åibuã__
((
dïªˇãd
))

	)

134 
	#__DARWIN_DEPRECATED_ATTRIBUTE


	)

140 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >= 1)))

141 
	#__DARWIN_UNAVAILABLE_ATTRIBUTE
 
	`__©åibuã__
((
u«vaûabÀ
))

	)

143 
	#__DARWIN_UNAVAILABLE_ATTRIBUTE


	)

153 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

161 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

168 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

180 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_OS_X_VERSION_10_1


181 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
 
__DARWIN_UNAVAILABLE_ATTRIBUTE


	)

182 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_OS_X_VERSION_10_1


183 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
 
__DARWIN_WEAK_IMPORT_ATTRIBUTE


	)

185 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

194 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_1


195 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

197 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED
 
__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

206 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_1


207 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

209 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1
 
__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

217 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_1


218 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

220 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER


	)

234 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_OS_X_VERSION_10_2


235 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
 
__DARWIN_UNAVAILABLE_ATTRIBUTE


	)

236 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_OS_X_VERSION_10_2


237 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
 
__DARWIN_WEAK_IMPORT_ATTRIBUTE


	)

239 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

248 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_2


249 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

251 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED
 
__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

260 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_2


261 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

263 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

272 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_2


273 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

275 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

283 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_2


284 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

286 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER


	)

298 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_OS_X_VERSION_10_3


299 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
 
__DARWIN_UNAVAILABLE_ATTRIBUTE


	)

300 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_OS_X_VERSION_10_3


301 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
 
__DARWIN_WEAK_IMPORT_ATTRIBUTE


	)

303 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

312 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_3


313 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

315 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED
 
__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

324 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_3


325 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

327 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

336 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_3


337 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

339 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

348 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_3


349 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

351 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

359 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_3


360 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

362 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER


	)

375 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_OS_X_VERSION_10_4


376 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
 
__DARWIN_UNAVAILABLE_ATTRIBUTE


	)

377 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_OS_X_VERSION_10_4


378 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
 
__DARWIN_WEAK_IMPORT_ATTRIBUTE


	)

380 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

389 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_4


390 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

392 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED
 
__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

401 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_4


402 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

404 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

413 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_4


414 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

416 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

425 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_4


426 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

428 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

437 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_4


438 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

440 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

448 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_4


449 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

451 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER


	)

463 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_OS_X_VERSION_10_5


464 
	#__AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER
 
__DARWIN_UNAVAILABLE_ATTRIBUTE


	)

465 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_OS_X_VERSION_10_5


466 
	#__AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER
 
__DARWIN_WEAK_IMPORT_ATTRIBUTE


	)

468 
	#__AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

477 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


478 
	#__AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

480 
	#__AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED
 
__AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

489 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


490 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

492 
	#__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

501 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


502 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

504 
	#__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

513 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


514 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

516 
	#__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

525 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


526 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

528 
	#__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

537 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


538 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

540 
	#__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
__AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

548 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_OS_X_VERSION_10_5


549 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER
 
__DARWIN_DEPRECATED_ATTRIBUTE


	)

551 
	#__DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER


	)

	@/usr/include/machine/endian.h

31 #i‚de‡
_BSD_MACHINE_ENDIAN_H_


32 
	#_BSD_MACHINE_ENDIAN_H_


	)

34 #i‡
deföed
 (
__µc__
Ë|| deföed(
__µc64__
)

35 
	~"µc/ídün.h
"

36 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

37 
	~"i386/ídün.h
"

38 #ñi‡
deföed
 (
__¨m__
)

39 
	~"¨m/ídün.h
"

41 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/limits.h

5 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

6 
	~<µc/limôs.h
>

7 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

8 
	~<i386/limôs.h
>

10 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/types.h

31 #i‚de‡
_BSD_MACHINE_TYPES_H_


32 
	#_BSD_MACHINE_TYPES_H_


	)

34 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

35 
	~"µc/ty≥s.h
"

36 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

37 
	~"i386/ty≥s.h
"

38 #ñi‡
deföed
 (
__¨m__
)

39 
	~"¨m/ty≥s.h
"

41 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/openmpi/ompi/mpi/cxx/mpicxx.h

21 #i‚de‡
MPIPP_H


22 
	#MPIPP_H


	)

29 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

32 
	~<mpi.h
>

35 
	~<m≠
>

36 
	~<utûôy
>

38 
	~<°d¨g.h
>

40 #i‡!
deföed
(
OMPI_IGNORE_CXX_SEEK
Ë& 
OMPI_WANT_MPI_CXX_SEEK


47 
	~<°dio.h
>

50 
	~<io°ªam
>

53 #ifde‡
SEEK_SET


54 #unde‡
SEEK_SET


55 #unde‡
SEEK_CUR


56 #unde‡
SEEK_END


60 c⁄° 
SEEK_SET
;

61 c⁄° 
SEEK_CUR
;

62 c⁄° 
SEEK_END
;

66 
	g›Æ_muãx_t
;

70 
ompi_mpi_cxx_›_öãr˚±
(*
övec
, *
outvec
, *
Àn
,

71 
MPI_D©©y≥
 *
d©©y≥
, 
MPI_U£r_fun˘i⁄
 *
‚
);

74 
ompi_mpi_cxx_comm_îrh™dÀr_öãr˚±
(
MPI_Comm
 * 
mpi_comm
, * 
îr
, ...);

76 
ompi_mpi_cxx_wö_îrh™dÀr_öãr˚±
(
MPI_Wö
 * 
mpi_comm
, * 
îr
, ...);

78 
ompi_mpi_cxx_fûe_îrh™dÀr_öãr˚±
(
MPI_Fûe
 * 
mpi_comm
, * 
îr
, ...);

82 
	eCommTy≥
 { 
	meI¡øcomm
, 
	meI¡îcomm
, 
	meC¨tcomm
, 
	meGøphcomm
};

85 
ompi_mpi_cxx_comm_c›y_©å_öãr˚±
(
MPI_Comm
 
ﬁdcomm
, 
keyvÆ
,

86 *
exåa_°©e
, *
©åibuã_vÆ_ö
,

87 *
©åibuã_vÆ_out
, *
Êag
,

88 
MPI_Comm
 
√wcomm
);

90 
ompi_mpi_cxx_comm_dñëe_©å_öãr˚±
(
MPI_Comm
 
comm
, 
keyvÆ
,

91 *
©åibuã_vÆ
, *
exåa_°©e
);

94 
ompi_mpi_cxx_ty≥_c›y_©å_öãr˚±
(
MPI_D©©y≥
 
ﬁdty≥
, 
keyvÆ
,

95 *
exåa_°©e
, *
©åibuã_vÆ_ö
,

96 *
©åibuã_vÆ_out
, *
Êag
);

98 
ompi_mpi_cxx_ty≥_dñëe_©å_öãr˚±
(
MPI_D©©y≥
 
ty≥
, 
keyvÆ
,

99 *
©åibuã_vÆ
, *
exåa_°©e
);

102 
ompi_mpi_cxx_wö_c›y_©å_öãr˚±
(
MPI_Wö
 
ﬁdwö
, 
keyvÆ
,

103 *
exåa_°©e
, *
©åibuã_vÆ_ö
,

104 *
©åibuã_vÆ_out
, *
Êag
);

106 
ompi_mpi_cxx_wö_dñëe_©å_öãr˚±
(
MPI_Wö
 
wö
, 
keyvÆ
,

107 *
©åibuã_vÆ
, *
exåa_°©e
);

116 
ompi_mpi_cxx_gªque°_quîy_‚_öãr˚±
(*
°©e
, 
MPI_Sètus
 *
°©us
);

118 
ompi_mpi_cxx_gªque°_‰ì_‚_öãr˚±
(*
°©e
);

120 
ompi_mpi_cxx_gªque°_ˇn˚l_‚_öãr˚±
(*
°©e
, 
ˇn˚Àd
);

126 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
WIN64
)

127 
	#OPAL_INT_TO_BOOL
(
VALUE
Ë((VALUEË!0 ? 
åue
 : 
Ál£
)

	)

129 
	#OPAL_INT_TO_BOOL
(
VALUE
Ë((
boﬁ
)(VALUE))

	)

133 
	~"ompi/mpi/cxx/pmpicxx.h
"

136 
«me•a˚
 
	gMPI
 {

138 #i‡! 
OMPI_HAVE_CXX_EXCEPTION_SUPPORT


139 
OMPI_DECLSPEC
 
mpi_î∫o
;

142 
˛ass
 
	gComm_NuŒ
;

143 
˛ass
 
	gComm
;

144 
˛ass
 
	gI¡øcomm
;

145 
˛ass
 
	gI¡îcomm
;

146 
˛ass
 
	gGøphcomm
;

147 
˛ass
 
	gC¨tcomm
;

148 
˛ass
 
	gD©©y≥
;

149 
˛ass
 
	gEºh™dÀr
;

150 
˛ass
 
	gGroup
;

151 
˛ass
 
	gOp
;

152 
˛ass
 
	gReque°
;

153 
˛ass
 
	gGªque°
;

154 
˛ass
 
	gSètus
;

155 
˛ass
 
	gInfo
;

156 
˛ass
 
	gWö
;

157 
˛ass
 
	gFûe
;

159 
MPI_Aöt
 
	tAöt
;

160 
MPI_Off£t
 
	tOff£t
;

162 #ifde‡
OMPI_BUILDING_CXX_BINDINGS_LIBRARY


163 
	~"ompi/mpi/cxx/c⁄°™ts.h
"

164 
	~"ompi/mpi/cxx/fun˘i⁄s.h
"

165 
	~"ompi/mpi/cxx/d©©y≥.h
"

167 
	~"›ímpi/ompi/mpi/cxx/c⁄°™ts.h
"

168 
	~"›ímpi/ompi/mpi/cxx/fun˘i⁄s.h
"

169 
	~"›ímpi/ompi/mpi/cxx/d©©y≥.h
"

172 
	tU£r_fun˘i⁄
(c⁄° * 
	tövec
, * 
	töoutvec
, 
	tÀn
,

173 c⁄° 
	tD©©y≥
& 
	td©©y≥
);

178 #ifde‡
OMPI_BUILDING_CXX_BINDINGS_LIBRARY


179 
	~"ompi/mpi/cxx/ex˚±i⁄.h
"

180 
	~"ompi/mpi/cxx/›.h
"

181 
	~"ompi/mpi/cxx/°©us.h
"

182 
	~"ompi/mpi/cxx/ªque°.h
"

183 
	~"ompi/mpi/cxx/group.h
"

184 
	~"ompi/mpi/cxx/comm.h
"

185 
	~"ompi/mpi/cxx/wö.h
"

186 
	~"ompi/mpi/cxx/fûe.h
"

187 
	~"ompi/mpi/cxx/îrh™dÀr.h
"

188 
	~"ompi/mpi/cxx/öåacomm.h
"

189 
	~"ompi/mpi/cxx/t›ﬁogy.h
"

190 
	~"ompi/mpi/cxx/öãrcomm.h
"

191 
	~"ompi/mpi/cxx/öfo.h
"

193 
	~"›ímpi/ompi/mpi/cxx/ex˚±i⁄.h
"

194 
	~"›ímpi/ompi/mpi/cxx/›.h
"

195 
	~"›ímpi/ompi/mpi/cxx/°©us.h
"

196 
	~"›ímpi/ompi/mpi/cxx/ªque°.h
"

197 
	~"›ímpi/ompi/mpi/cxx/group.h
"

198 
	~"›ímpi/ompi/mpi/cxx/comm.h
"

199 
	~"›ímpi/ompi/mpi/cxx/wö.h
"

200 
	~"›ímpi/ompi/mpi/cxx/fûe.h
"

201 
	~"›ímpi/ompi/mpi/cxx/îrh™dÀr.h
"

202 
	~"›ímpi/ompi/mpi/cxx/öåacomm.h
"

203 
	~"›ímpi/ompi/mpi/cxx/t›ﬁogy.h
"

204 
	~"›ímpi/ompi/mpi/cxx/öãrcomm.h
"

205 
	~"›ímpi/ompi/mpi/cxx/öfo.h
"

208 
›Æ_muãx_t
 *
mpi_m≠_muãx
;

212 
	~"ompi/mpi/cxx/p›_ö .h
"

213 
	~"ompi/mpi/cxx/pgroup_ö .h
"

214 
	~"ompi/mpi/cxx/p°©us_ö .h
"

215 
	~"ompi/mpi/cxx/¥eque°_ö .h
"

228 #ifde‡
OMPI_BUILDING_CXX_BINDINGS_LIBRARY


229 
	~"ompi/mpi/cxx/d©©y≥_ö .h
"

230 
	~"ompi/mpi/cxx/fun˘i⁄s_ö .h
"

231 
	~"ompi/mpi/cxx/ªque°_ö .h
"

232 
	~"ompi/mpi/cxx/comm_ö .h
"

233 
	~"ompi/mpi/cxx/öåacomm_ö .h
"

234 
	~"ompi/mpi/cxx/t›ﬁogy_ö .h
"

235 
	~"ompi/mpi/cxx/öãrcomm_ö .h
"

236 
	~"ompi/mpi/cxx/group_ö .h
"

237 
	~"ompi/mpi/cxx/›_ö .h
"

238 
	~"ompi/mpi/cxx/îrh™dÀr_ö .h
"

239 
	~"ompi/mpi/cxx/°©us_ö .h
"

240 
	~"ompi/mpi/cxx/öfo_ö .h
"

241 
	~"ompi/mpi/cxx/wö_ö .h
"

242 
	~"ompi/mpi/cxx/fûe_ö .h
"

244 
	~"›ímpi/ompi/mpi/cxx/d©©y≥_ö .h
"

245 
	~"›ímpi/ompi/mpi/cxx/fun˘i⁄s_ö .h
"

246 
	~"›ímpi/ompi/mpi/cxx/ªque°_ö .h
"

247 
	~"›ímpi/ompi/mpi/cxx/comm_ö .h
"

248 
	~"›ímpi/ompi/mpi/cxx/öåacomm_ö .h
"

249 
	~"›ímpi/ompi/mpi/cxx/t›ﬁogy_ö .h
"

250 
	~"›ímpi/ompi/mpi/cxx/öãrcomm_ö .h
"

251 
	~"›ímpi/ompi/mpi/cxx/group_ö .h
"

252 
	~"›ímpi/ompi/mpi/cxx/›_ö .h
"

253 
	~"›ímpi/ompi/mpi/cxx/îrh™dÀr_ö .h
"

254 
	~"›ímpi/ompi/mpi/cxx/°©us_ö .h
"

255 
	~"›ímpi/ompi/mpi/cxx/öfo_ö .h
"

256 
	~"›ímpi/ompi/mpi/cxx/wö_ö .h
"

257 
	~"›ímpi/ompi/mpi/cxx/fûe_ö .h
"

	@/usr/include/secure/_stdio.h

24 #i‚de‡
_STDIO_H_


25 #îr‹ 
îr‹
 "Never use <secure/_stdio.h> directly; include <stdio.h> instead."

28 #i‚de‡
_SECURE__STDIO_H_


29 
	#_SECURE__STDIO_H_


	)

31 
	~<£cuª/_comm⁄.h
>

33 #i‡
_USE_FORTIFY_LEVEL
 > 0

35 #unde‡
•rötf


36 #unde‡
v•rötf


37 #unde‡
¢¥ötf


38 #unde‡
v¢¥ötf


42 
	$__•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

43 c⁄° * 
__ª°ri˘
, ...)

44 
	`__DARWIN_LDBL_COMPAT
 (
__•rötf_chk
);

46 
	#•rötf
(
°r
, ...) \

47 
	`__buûtö___•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

49 
	$__¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

50 c⁄° * 
__ª°ri˘
, ...)

51 
	`__DARWIN_LDBL_COMPAT
 (
__¢¥ötf_chk
);

53 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

54 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

56 
	$__v•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

57 c⁄° * 
__ª°ri˘
, 
va_li°
 
¨g
)

58 
	`__DARWIN_LDBL_COMPAT
 (
__v•rötf_chk
);

60 
	#v•rötf
(
°r
, 
f‹m©
, 
≠
) \

61 
	`__buûtö___v•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

63 
	$__v¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

64 c⁄° * 
__ª°ri˘
, 
va_li°
 
¨g
)

65 
	`__DARWIN_LDBL_COMPAT
 (
__v¢¥ötf_chk
);

67 
	#v¢¥ötf
(
°r
, 
Àn
, 
f‹m©
, 
≠
) \

68 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

	@/usr/include/secure/_string.h

24 #i‚de‡
_STRING_H_


28 #i‚de‡
_SECURE__STRING_H_


29 
	#_SECURE__STRING_H_


	)

31 
	~<£cuª/_comm⁄.h
>

33 #i‡
_USE_FORTIFY_LEVEL
 > 0

38 #unde‡
mem˝y


39 #unde‡
memmove


40 #unde‡
mem£t


41 #unde‡
°r˝y


42 #unde‡
°p˝y


43 #unde‡
°∫˝y


44 #unde‡
°rˇt


45 #unde‡
°∫ˇt


47 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

48 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

49 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

50 : 
	`__ölöe_mem˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

52 
ölöe
 *

53 
	$__ölöe_mem˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

55  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

56 
	}
}

58 
	#memmove
(
de°
, 
§c
, 
Àn
) \

59 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

60 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

61 : 
	`__ölöe_memmove_chk
 (
de°
, 
§c
, 
Àn
))

	)

63 
ölöe
 *

64 
	$__ölöe_memmove_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

66  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

67 
	}
}

69 
	#mem£t
(
de°
, 
vÆ
, 
Àn
) \

70 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

71 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
vÆ
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

72 : 
	`__ölöe_mem£t_chk
 (
de°
, 
vÆ
, 
Àn
))

	)

74 
ölöe
 *

75 
	$__ölöe_mem£t_chk
 (*
__de°
, 
__vÆ
, 
size_t
 
__Àn
)

77  
	`__buûtö___mem£t_chk
 (
__de°
, 
__vÆ
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

78 
	}
}

80 
	#°r˝y
(
de°
, 
§c
) \

81 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

82 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

83 : 
	`__ölöe_°r˝y_chk
 (
de°
, 
§c
))

	)

85 
ölöe
 *

86 
	$__ölöe_°r˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

88  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

89 
	}
}

91 
	#°p˝y
(
de°
, 
§c
) \

92 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

93 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

94 : 
	`__ölöe_°p˝y_chk
 (
de°
, 
§c
))

	)

96 
ölöe
 *

97 
	$__ölöe_°p˝y_chk
 (*
__de°
, c⁄° *
__§c
)

99  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

100 
	}
}

102 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

103 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

104 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (dest)) \

105 : 
	`__ölöe_°∫˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

107 
ölöe
 *

108 
	$__ölöe_°∫˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
)

111  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

112 
	}
}

114 
	#°rˇt
(
de°
, 
§c
) \

115 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

116 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

117 : 
	`__ölöe_°rˇt_chk
 (
de°
, 
§c
))

	)

119 
ölöe
 *

120 
	$__ölöe_°rˇt_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

122  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

123 
	}
}

125 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

126 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

127 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

128 : 
	`__ölöe_°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
))

	)

130 
ölöe
 *

131 
	$__ölöe_°∫ˇt_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

132 
size_t
 
__Àn
)

134  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

135 
	}
}

	@/usr/include/stddef.h

61 #i‡!
deföed
(
__STDDEF_H__
)

63 #i‡!
deföed
(
__√ed_wch¨_t
Ë&& !deföed(
__√ed_size_t
) \

64 && !
deföed
(
__√ed_±rdiff_t
Ë&& !deföed(
__√ed_NULL
) \

65 && !
	$deföed
(
__√ed_wöt_t
)

66 
	#__STDDEF_H__


	)

69 
	~<_ty≥s.h
>

71 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_±rdiff_t
)

72 #i‚de‡
_PTRDIFF_T


73 
	#_PTRDIFF_T


	)

74 
__d¨wö_±rdiff_t
 
	t±rdiff_t
;

78 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_size_t
)

79 #i‚def 
_SIZE_T


80 
	#_SIZE_T


	)

83 
__d¨wö_size_t
 
	tsize_t
;

87 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_wch¨_t
)

88 #i‚def 
__˝lu•lus


89 #i‚def 
_WCHAR_T


90 
	#_WCHAR_T


	)

91 
__d¨wö_wch¨_t
 
	twch¨_t
;

96 #i‡(
	`deföed
(
__STDDEF_H__
Ë&& !deföed(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))) \

97 || 
	$deföed
(
__√ed_wöt_t
)

98 #i‚def 
_WINT_T


99 
	#_WINT_T


	)

100 
__d¨wö_wöt_t
 
	twöt_t
;

104 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_NULL
)

105 #i‚de‡
NULL


106 
	#NULL
 
__DARWIN_NULL


	)

110 #ifde‡
__STDDEF_H__


111 #i‡
	`deföed
(
__GNUC__
Ë&& (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 5 || __GNUC__ > 3)

112 #i‚de‡
__off£tof


113 
	#__off£tof
(
ty≥
, 
fõld
Ë
	`__buûtö_off£tof
—y≥, fõld)

	)

115 
	#off£tof
(
ty≥
, 
fõld
Ë
	`__buûtö_off£tof
—y≥, fõld)

	)

117 #i‚de‡
__off£tof


118 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

120 
	#off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

126 #unde‡
__√ed_±rdiff_t


127 #unde‡
__√ed_size_t


128 #unde‡
__√ed_wch¨_t


129 #unde‡
__√ed_wöt_t


130 #unde‡
__√ed_NULL


	@/usr/include/sys/_structs.h

29 
	~<sys/cdefs.h
>

30 
	~<sys/_ty≥s.h
>

32 #ifde‡
__√ed_uc⁄ãxt_t


33 #i‚de‡
__√ed_°ru˘_uc⁄ãxt


34 
	#__√ed_°ru˘_uc⁄ãxt


	)

38 #ifde‡
__√ed_uc⁄ãxt64_t


39 #i‚de‡
__√ed_°ru˘_uc⁄ãxt64


40 
	#__√ed_°ru˘_uc⁄ãxt64


	)

44 #ifde‡
__√ed_°ru˘_uc⁄ãxt


45 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


46 
	#__√ed_°ru˘_mc⁄ãxt


	)

50 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


51 #i‚de‡
__√ed_°ru˘_mc⁄ãxt64


52 
	#__√ed_°ru˘_mc⁄ãxt64


	)

56 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_mc⁄ãxt64
)

57 
	~<machöe/_°ru˘s.h
>

60 #i‡
deföed
(
__√ed_°ack_t
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt64
)

61 #i‚de‡
__√ed_°ru˘_sigÆt°ack


62 
	#__√ed_°ru˘_sigÆt°ack


	)

66 #ifde‡
__√ed_°ru˘_sigÆt°ack


67 #unde‡
__√ed_°ru˘_sigÆt°ack


69 #i‚de‡
_STRUCT_SIGALTSTACK


70 #i‡
__DARWIN_UNIX03


71 
	#_STRUCT_SIGALTSTACK
 
__d¨wö_sigÆt°ack


	)

73 
	#_STRUCT_SIGALTSTACK
 
sigÆt°ack


	)

75 
	g_STRUCT_SIGALTSTACK


77 *
	gss_•
;

78 
__d¨wö_size_t
 
	gss_size
;

79 
	gss_Êags
;

84 #ifde‡
__√ed_°ru˘_time•ec


85 #unde‡
__√ed_°ru˘_time•ec


86 #i‚de‡
_STRUCT_TIMESPEC


87 
	#_STRUCT_TIMESPEC
 
time•ec


	)

88 
	g_STRUCT_TIMESPEC


90 
__d¨wö_time_t
 
	gtv_£c
;

91 
	gtv_n£c
;

96 #ifde‡
__√ed_°ru˘_timevÆ


97 #unde‡
__√ed_°ru˘_timevÆ


98 #i‚de‡
_STRUCT_TIMEVAL


99 
	#_STRUCT_TIMEVAL
 
timevÆ


	)

100 
	g_STRUCT_TIMEVAL


102 
__d¨wö_time_t
 
	gtv_£c
;

103 
__d¨wö_su£c⁄ds_t
 
	gtv_u£c
;

108 #ifde‡
__√ed_°ru˘_timevÆ32


109 #unde‡
__√ed_°ru˘_timevÆ32


110 #i‚de‡
_STRUCT_TIMEVAL32


111 
	#_STRUCT_TIMEVAL32
 
timevÆ32


	)

112 
	g_STRUCT_TIMEVAL32


114 
__öt32_t
 
	gtv_£c
;

115 
__öt32_t
 
	gtv_u£c
;

120 #ifde‡
__√ed_°ru˘_uc⁄ãxt


121 #unde‡
__√ed_°ru˘_uc⁄ãxt


122 #i‚de‡
_STRUCT_UCONTEXT


123 #i‡
__DARWIN_UNIX03


124 
	#_STRUCT_UCONTEXT
 
__d¨wö_uc⁄ãxt


	)

126 
	#_STRUCT_UCONTEXT
 
uc⁄ãxt


	)

128 
	g_STRUCT_UCONTEXT


130 
	guc_⁄°ack
;

131 
__d¨wö_sig£t_t
 
	guc_sigmask
;

132 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

133 
_STRUCT_UCONTEXT
 *
	guc_lök
;

134 
__d¨wö_size_t
 
	guc_mcsize
;

135 
_STRUCT_MCONTEXT
 *
	guc_mc⁄ãxt
;

136 #ifde‡
_XOPEN_SOURCE


137 
_STRUCT_MCONTEXT
 
	g__mc⁄ãxt_d©a
;

143 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


144 #unde‡
__√ed_°ru˘_uc⁄ãxt64


145 #i‚de‡
_STRUCT_UCONTEXT64


146 #i‡
__DARWIN_UNIX03


147 
	#_STRUCT_UCONTEXT64
 
__d¨wö_uc⁄ãxt64


	)

149 
	#_STRUCT_UCONTEXT64
 
uc⁄ãxt64


	)

151 
	g_STRUCT_UCONTEXT64


153 
	guc_⁄°ack
;

154 
__d¨wö_sig£t_t
 
	guc_sigmask
;

155 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

156 
_STRUCT_UCONTEXT64
 *
	guc_lök
;

157 
__d¨wö_size_t
 
	guc_mcsize
;

158 
_STRUCT_MCONTEXT64
 *
	guc_mc⁄ãxt64
;

164 #ifde‡
__√ed_fd_£t


165 #unde‡
__√ed_fd_£t


166 #i‚de‡
_FD_SET


167 
	#_FD_SET


	)

174 #ifde‡
FD_SETSIZE


175 
	#__DARWIN_FD_SETSIZE
 
FD_SETSIZE


	)

177 
	#__DARWIN_FD_SETSIZE
 1024

	)

179 
	#__DARWIN_NBBY
 8

	)

180 
	#__DARWIN_NFDBITS
 ((
__öt32_t
Ë* 
__DARWIN_NBBY
Ë

	)

181 
	#__DARWIN_howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y)Ë

	)

183 
__BEGIN_DECLS


184 
	sfd_£t
 {

185 
__öt32_t
 
	mfds_bôs
[
__DARWIN_howm™y
(
__DARWIN_FD_SETSIZE
, 
__DARWIN_NFDBITS
)];

186 } 
	tfd_£t
;

187 
__END_DECLS


190 
__ölöe
 

191 
	$__d¨wö_fd_is£t
(
_n
, 
fd_£t
 *
_p
)

193  (
_p
->
fds_bôs
[
_n
/
__DARWIN_NFDBITS
] & (1<<(_n % __DARWIN_NFDBITS)));

194 
	}
}

196 
	#__DARWIN_FD_SET
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[__fd/
__DARWIN_NFDBITS
] |(1<<(__fd % __DARWIN_NFDBITS))); } 0)

	)

197 
	#__DARWIN_FD_CLR
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[__fd/
__DARWIN_NFDBITS
] &~(1<<(__fd % __DARWIN_NFDBITS))); } 0)

	)

198 
	#__DARWIN_FD_ISSET
(
n
, 
p
Ë
	`__d¨wö_fd_is£t
(“), (p))

	)

200 #i‡
__GNUC__
 > 3 || __GNUC__ =3 && 
__GNUC_MINOR__
 >= 3

205 
	#__DARWIN_FD_ZERO
(
p
Ë
	`__buûtö_bzîo
’, (*’)))

	)

207 
	#__DARWIN_FD_ZERO
(
p
Ë
	`bzîo
’, (*’)))

	)

210 
	#__DARWIN_FD_COPY
(
f
, 
t
Ë
	`bc›y
(f,Å, (*(f)))

	)

214 #ifde‡
__√ed_°ack_t


215 #unde‡
__√ed_°ack_t


216 #i‚de‡
_STACK_T


217 
	#_STACK_T


	)

218 
_STRUCT_SIGALTSTACK
 
	t°ack_t
;

222 #ifde‡
__√ed_uc⁄ãxt_t


223 #unde‡
__√ed_uc⁄ãxt_t


225 #i‚de‡
_UCONTEXT_T


226 
	#_UCONTEXT_T


	)

227 
_STRUCT_UCONTEXT
 
	tuc⁄ãxt_t
;

231 #ifde‡
__√ed_uc⁄ãxt64_t


232 #unde‡
__√ed_uc⁄ãxt64_t


233 #i‚de‡
_UCONTEXT64_T


234 
	#_UCONTEXT64_T


	)

235 
_STRUCT_UCONTEXT64
 
	tuc⁄ãxt64_t
;

	@/usr/include/sys/_types.h

29 #i‚de‡
_SYS__TYPES_H_


30 
	#_SYS__TYPES_H_


	)

32 
	~<sys/cdefs.h
>

33 
	~<machöe/_ty≥s.h
>

36 #i‡
deföed
(
__LP64__
)

37 
	#__PTHREAD_SIZE__
 1168

	)

38 
	#__PTHREAD_ATTR_SIZE__
 56

	)

39 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

40 
	#__PTHREAD_MUTEX_SIZE__
 56

	)

41 
	#__PTHREAD_CONDATTR_SIZE__
 8

	)

42 
	#__PTHREAD_COND_SIZE__
 40

	)

43 
	#__PTHREAD_ONCE_SIZE__
 8

	)

44 
	#__PTHREAD_RWLOCK_SIZE__
 192

	)

45 
	#__PTHREAD_RWLOCKATTR_SIZE__
 16

	)

47 
	#__PTHREAD_SIZE__
 596

	)

48 
	#__PTHREAD_ATTR_SIZE__
 36

	)

49 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

50 
	#__PTHREAD_MUTEX_SIZE__
 40

	)

51 
	#__PTHREAD_CONDATTR_SIZE__
 4

	)

52 
	#__PTHREAD_COND_SIZE__
 24

	)

53 
	#__PTHREAD_ONCE_SIZE__
 4

	)

54 
	#__PTHREAD_RWLOCK_SIZE__
 124

	)

55 
	#__PTHREAD_RWLOCKATTR_SIZE__
 12

	)

58 
	s__d¨wö_±hªad_h™dÀr_ªc


60 (*
	m__routöe
)(*);

61 *
	m__¨g
;

62 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__√xt
;

64 
	s_›aque_±hªad_©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ATTR_SIZE__
]; };

65 
	s_›aque_±hªad_c⁄d_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_COND_SIZE__
]; };

66 
	s_›aque_±hªad_c⁄d©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_CONDATTR_SIZE__
]; };

67 
	s_›aque_±hªad_muãx_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEX_SIZE__
]; };

68 
	s_›aque_±hªad_muãx©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEXATTR_SIZE__
]; };

69 
	s_›aque_±hªad_⁄˚_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ONCE_SIZE__
]; };

70 
	s_›aque_±hªad_rwlock_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCK_SIZE__
]; };

71 
	s_›aque_±hªad_rwlock©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCKATTR_SIZE__
]; };

72 
	s_›aque_±hªad_t
 { 
	m__sig
; 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__˛ónup_°ack
; 
	m__›aque
[
__PTHREAD_SIZE__
]; };

80 #ifde‡
__˝lu•lus


81 #ifde‡
__GNUG__


82 
	#__DARWIN_NULL
 
__nuŒ


	)

84 #ifde‡
__LP64__


85 
	#__DARWIN_NULL
 (0L)

	)

87 
	#__DARWIN_NULL
 0

	)

91 
	#__DARWIN_NULL
 ((*)0)

	)

94 
__öt64_t
 
	t__d¨wö_blk˙t_t
;

95 
__öt32_t
 
	t__d¨wö_blksize_t
;

96 
__öt32_t
 
	t__d¨wö_dev_t
;

97 
	t__d¨wö_fsblk˙t_t
;

98 
	t__d¨wö_fsfû˙t_t
;

99 
__uöt32_t
 
	t__d¨wö_gid_t
;

100 
__uöt32_t
 
	t__d¨wö_id_t
;

101 
__uöt64_t
 
	t__d¨wö_öo64_t
;

102 #i‡
__DARWIN_64_BIT_INO_T


103 
__d¨wö_öo64_t
 
	t__d¨wö_öo_t
;

105 
__uöt32_t
 
	t__d¨wö_öo_t
;

107 
__d¨wö_«tuøl_t
 
	t__d¨wö_mach_p‹t_«me_t
;

108 
__d¨wö_mach_p‹t_«me_t
 
	t__d¨wö_mach_p‹t_t
;

109 
__uöt16_t
 
	t__d¨wö_mode_t
;

110 
__öt64_t
 
	t__d¨wö_off_t
;

111 
__öt32_t
 
	t__d¨wö_pid_t
;

112 
_›aque_±hªad_©å_t


113 
	t__d¨wö_±hªad_©å_t
;

114 
_›aque_±hªad_c⁄d_t


115 
	t__d¨wö_±hªad_c⁄d_t
;

116 
_›aque_±hªad_c⁄d©å_t


117 
	t__d¨wö_±hªad_c⁄d©å_t
;

118 
	t__d¨wö_±hªad_key_t
;

119 
_›aque_±hªad_muãx_t


120 
	t__d¨wö_±hªad_muãx_t
;

121 
_›aque_±hªad_muãx©å_t


122 
	t__d¨wö_±hªad_muãx©å_t
;

123 
_›aque_±hªad_⁄˚_t


124 
	t__d¨wö_±hªad_⁄˚_t
;

125 
_›aque_±hªad_rwlock_t


126 
	t__d¨wö_±hªad_rwlock_t
;

127 
_›aque_±hªad_rwlock©å_t


128 
	t__d¨wö_±hªad_rwlock©å_t
;

129 
_›aque_±hªad_t


130 *
	t__d¨wö_±hªad_t
;

131 
__uöt32_t
 
	t__d¨wö_sig£t_t
;

132 
__öt32_t
 
	t__d¨wö_su£c⁄ds_t
;

133 
__uöt32_t
 
	t__d¨wö_uid_t
;

134 
__uöt32_t
 
	t__d¨wö_u£c⁄ds_t
;

135 
	t__d¨wö_uuid_t
[16];

	@/usr/include/sys/appleapiopts.h

29 #i‚de‡
__SYS_APPLEAPIOPTS_H__


30 
	#__SYS_APPLEAPIOPTS_H__


	)

33 #i‚de‡
__APPLE_API_STANDARD


34 
	#__APPLE_API_STANDARD


	)

37 #i‚de‡
__APPLE_API_STABLE


38 
	#__APPLE_API_STABLE


	)

41 #i‚de‡
__APPLE_API_STRICT_CONFORMANCE


43 #i‚de‡
__APPLE_API_EVOLVING


44 
	#__APPLE_API_EVOLVING


	)

47 #i‚de‡
__APPLE_API_UNSTABLE


48 
	#__APPLE_API_UNSTABLE


	)

51 #i‚de‡
__APPLE_API_PRIVATE


52 
	#__APPLE_API_PRIVATE


	)

55 #i‚de‡
__APPLE_API_OBSOLETE


56 
	#__APPLE_API_OBSOLETE


	)

	@/usr/include/sys/cdefs.h

67 #i‚def 
_CDEFS_H_


68 
	#_CDEFS_H_


	)

70 #i‡
deföed
(
__˝lu•lus
)

71 
	#__BEGIN_DECLS
 "C" {

	)

72 
	#__END_DECLS
 }

	)

74 
	#__BEGIN_DECLS


	)

75 
	#__END_DECLS


	)

85 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

86 
	#__P
(
¥Ÿos
Ë¥Ÿo†

	)

87 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

88 
	#__STRING
(
x
Ë#x

	)

90 
	#__c⁄°
 c⁄°

	)

91 
	#__sig√d
 sig√d

	)

92 
	#__vﬁ©ûe
 vﬁ©ûe

	)

93 #i‡
deföed
(
__˝lu•lus
)

94 
	#__ölöe
 
ölöe


	)

96 #i‚de‡
__GNUC__


97 
	#__ölöe


	)

102 
	#__P
(
¥Ÿos
Ë(Ë

	)

103 
	#__CONCAT
(
x
,
y
Ëx 
	)
y

104 
	#__STRING
(
x
Ë"x"

	)

106 #i‚de‡
__GNUC__


107 
	#__c⁄°


	)

108 
	#__ölöe


	)

109 
	#__sig√d


	)

110 
	#__vﬁ©ûe


	)

121 #i‚def 
NO_ANSI_KEYWORDS


122 c⁄° 
__c⁄°


	)

123 
	#ölöe
 
__ölöe


	)

124 sig√d 
__sig√d


	)

125 vﬁ©ûê
__vﬁ©ûe


	)

137 #i‡
deföed
(
__MWERKS__
) && (__MWERKS__ > 0x2400)

139 #ñi‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 5

140 
	#__dód2
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

141 
	#__puª2
 
	`__©åibuã__
((
__c⁄°__
))

	)

142 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 >= 5 && __GNUC_MINOR__ < 7

143 
	#__unu£d


	)

145 
	#__unu£d
 
	`__©åibuã__
((
__unu£d__
))

	)

148 
	#__©åibuã__
(
x
Ë

	)

149 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

151 
	#__dód
 
__vﬁ©ûe


	)

152 
	#__puª
 
__c⁄°


	)

157 #i‚de‡
__dód


158 
	#__dód


	)

159 
	#__puª


	)

161 #i‚de‡
__dód2


162 
	#__dód2


	)

163 
	#__puª2


	)

164 
	#__unu£d


	)

173 #i‡!(
__GNUC__
 =2 && 
__GNUC_MINOR__
 == 95)

174 #i‡
__STDC_VERSION__
 < 199901

175 
	#__ª°ri˘


	)

177 
	#__ª°ri˘
 
ª°ri˘


	)

189 #i‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 7

190 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
) \

191 
	`__©åibuã__
((
	`__f‹m©__
 (
__¥ötf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

192 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
) \

193 
	`__©åibuã__
((
	`__f‹m©__
 (
__sˇnf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

195 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
)

	)

196 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
)

	)

199 
	#__IDSTRING
(
«me
,
°rög
Ëc⁄° «me[] 
__unu£d
 = 
	)
string

201 #i‚de‡
__COPYRIGHT


202 
	#__COPYRIGHT
(
s
Ë
	`__IDSTRING
(
c›yright
,s)

	)

205 #i‚de‡
__RCSID


206 
	#__RCSID
(
s
Ë
	`__IDSTRING
(
rcsid
,s)

	)

209 #i‚de‡
__SCCSID


210 
	#__SCCSID
(
s
Ë
	`__IDSTRING
(
sccsid
,s)

	)

213 #i‚de‡
__PROJECT_VERSION


214 
	#__PROJECT_VERSION
(
s
Ë
	`__IDSTRING
(
¥oje˘_vîsi⁄
,s)

	)

272 #i‡!
deföed
(
__DARWIN_UNIX03
)

273 #i‡
deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_XOPEN_SOURCE
Ë|| deföed(
_POSIX_C_SOURCE
Ë|| deföed(
__LP64__
Ë|| (deföed(
__¨m__
Ë&& !deföed(
KERNEL
))

274 #i‡
deföed
(
_NONSTD_SOURCE
)

277 
	#__DARWIN_UNIX03
 1

	)

278 #ñi‡
deföed
(
_NONSTD_SOURCE
Ë|| deföed(
KERNEL
)

279 
	#__DARWIN_UNIX03
 0

	)

281 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

282 
	#__DARWIN_UNIX03
 0

	)

284 
	#__DARWIN_UNIX03
 1

	)

289 #i‡!
deföed
(
__DARWIN_64_BIT_INO_T
)

290 #i‡
deföed
(
_DARWIN_USE_64_BIT_INODE
)

291 
	#__DARWIN_64_BIT_INO_T
 1

	)

292 #ñi‡
deföed
(
_DARWIN_NO_64_BIT_INODE
Ë|| deföed(
KERNEL
)

293 
	#__DARWIN_64_BIT_INO_T
 0

	)

295 
	#__DARWIN_64_BIT_INO_T
 0

	)

299 #i‡!
deföed
(
__DARWIN_NON_CANCELABLE
)

300 
	#__DARWIN_NON_CANCELABLE
 0

	)

303 #i‡!
deföed
(
__DARWIN_VERS_1050
)

304 #i‡!
deföed
(
KERNEL
Ë&& deföed(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) >= 1050)

305 
	#__DARWIN_VERS_1050
 1

	)

307 
	#__DARWIN_VERS_1050
 0

	)

314 #i‡
__DARWIN_UNIX03


315 #i‡!
deföed
(
__LP64__
Ë&& !deföed(
__¨m__
)

316 
	#__DARWIN_SUF_UNIX03
 "$UNIX2003"

	)

317 
	#__DARWIN_SUF_UNIX03_SET
 1

	)

319 
	#__DARWIN_SUF_UNIX03


	)

320 
	#__DARWIN_SUF_UNIX03_SET
 0

	)

323 #i‡
__DARWIN_64_BIT_INO_T


324 
	#__DARWIN_SUF_64_BIT_INO_T
 "$INODE64"

	)

326 
	#__DARWIN_SUF_64_BIT_INO_T


	)

329 #i‡
__DARWIN_NON_CANCELABLE


330 
	#__DARWIN_SUF_NON_CANCELABLE
 "$NOCANCEL"

	)

332 
	#__DARWIN_SUF_NON_CANCELABLE


	)

335 #i‡
__DARWIN_VERS_1050


336 
	#__DARWIN_SUF_1050
 "$1050"

	)

338 
	#__DARWIN_SUF_1050


	)

342 
	#__DARWIN_SUF_UNIX03


	)

343 
	#__DARWIN_SUF_UNIX03_SET
 0

	)

344 
	#__DARWIN_SUF_64_BIT_INO_T


	)

345 
	#__DARWIN_SUF_NON_CANCELABLE


	)

346 
	#__DARWIN_SUF_1050


	)

349 
	#__DARWIN_SUF_EXTSN
 "$DARWIN_EXTSN"

	)

354 
	#__DARWIN_ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_UNIX03
)

	)

355 
	#__DARWIN_ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

356 
	#__DARWIN_ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

357 
	#__DARWIN_INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
)

	)

359 
	#__DARWIN_1050
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
)

	)

360 
	#__DARWIN_1050ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_UNIX03
)

	)

361 
	#__DARWIN_1050ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

362 
	#__DARWIN_1050ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

363 
	#__DARWIN_1050INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
)

	)

365 
	#__DARWIN_EXTSN
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
)

	)

366 
	#__DARWIN_EXTSN_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
 
__DARWIN_SUF_NON_CANCELABLE
)

	)

389 #i‡
deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 1L

390 #unde‡
_POSIX_C_SOURCE


391 
	#_POSIX_C_SOURCE
 199009L

	)

395 #i‡
deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 2L

396 #unde‡
_POSIX_C_SOURCE


397 
	#_POSIX_C_SOURCE
 199209L

	)

401 #ifde‡
_XOPEN_SOURCE


402 #i‡
_XOPEN_SOURCE
 - 0L >= 600L

403 #unde‡
_POSIX_C_SOURCE


404 
	#_POSIX_C_SOURCE
 200112L

	)

405 #ñi‡
_XOPEN_SOURCE
 - 0L >= 500L

406 #unde‡
_POSIX_C_SOURCE


407 
	#_POSIX_C_SOURCE
 199506L

	)

415 #i‡
deföed
(
_POSIX_SOURCE
Ë&& !deföed(
_POSIX_C_SOURCE
)

416 
	#_POSIX_C_SOURCE
 198808L

	)

424 
	#__DARWIN_NO_LONG_LONG
 (
	`deföed
(
__STRICT_ANSI__
) \

425 && (
__STDC_VERSION__
-0 < 199901L) \

426 && !
	`deföed
(
__GNUG__
))

	)

434 #i‡
deföed
(
__µc__
)

435 #i‡
deföed
(
__LDBL_MANT_DIG__
Ë&& deföed(
__DBL_MANT_DIG__
) && \

436 
__LDBL_MANT_DIG__
 > 
__DBL_MANT_DIG__


437 #i‡
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
-0 < 1040

438 
	#__DARWIN_LDBL_COMPAT
(
x
Ë
	`__asm
("_" 
	`__STRING
(xË"$LDBLStub")

	)

440 
	#__DARWIN_LDBL_COMPAT
(
x
Ë
	`__asm
("_" 
	`__STRING
(xË"$LDBL128")

	)

442 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë
	`__asm
("_" 
	`__STRING
(xË"$LDBL128")

	)

443 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 0

	)

445 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

446 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

447 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 1

	)

449 #ñi‡
deföed
(
__i386__
Ë|| deföed(
__µc64__
Ë|| deföed(
__x86_64__
Ë|| deföed (
__¨m__
)

450 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

451 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

452 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 0

	)

454 #îr‹ 
Unknown
 
¨chôe˘uª


460 #i‡
__GNUC__
 >= 3

461 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

463 
	#__dïªˇãd


	)

474 #i‡
__DARWIN_LONG_DOUBLE_IS_DOUBLE


475 
	#_DARWIN_FEATURE_LONG_DOUBLE_IS_DOUBLE
 1

	)

482 #i‡
__DARWIN_UNIX03


483 
	#_DARWIN_FEATURE_UNIX_CONFORMANCE
 3

	)

490 #i‡
__DARWIN_64_BIT_INO_T


491 
	#_DARWIN_FEATURE_64_BIT_INODE
 1

	)

	@/usr/include/sys/dirent.h

75 #i‚de‡
_SYS_DIRENT_H


76 
	#_SYS_DIRENT_H


	)

78 
	~<sys/_ty≥s.h
>

79 
	~<sys/cdefs.h
>

81 #i‚def 
_INO_T


82 
__d¨wö_öo_t
 
	töo_t
;

83 
	#_INO_T


	)

87 
	#__DARWIN_MAXNAMLEN
 255

	)

89 #¥agm®
∑ck
(4)

91 #i‡!
__DARWIN_64_BIT_INO_T


92 
	sdúít
 {

93 
öo_t
 
	md_öo
;

94 
__uöt16_t
 
	md_ª˛í
;

95 
__uöt8_t
 
	md_ty≥
;

96 
__uöt8_t
 
	md_«mÀn
;

97 
	md_«me
[
__DARWIN_MAXNAMLEN
 + 1];

101 #¥agm®
∑ck
()

103 
	#__DARWIN_MAXPATHLEN
 1024

	)

105 
	#__DARWIN_STRUCT_DIRENTRY
 { \

106 
__uöt64_t
 
d_öo
; \

107 
__uöt64_t
 
d_£ekoff
; \

108 
__uöt16_t
 
d_ª˛í
; \

109 
__uöt16_t
 
d_«mÀn
; \

110 
__uöt8_t
 
d_ty≥
; \

111 
d_«me
[
__DARWIN_MAXPATHLEN
]; \

112 }

	)

114 #i‡
__DARWIN_64_BIT_INO_T


115 
dúít
 
	g__DARWIN_STRUCT_DIRENTRY
;

120 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

121 
	#d_fûío
 
d_öo


	)

122 
	#MAXNAMLEN
 
__DARWIN_MAXNAMLEN


	)

126 
	#DT_UNKNOWN
 0

	)

127 
	#DT_FIFO
 1

	)

128 
	#DT_CHR
 2

	)

129 
	#DT_DIR
 4

	)

130 
	#DT_BLK
 6

	)

131 
	#DT_REG
 8

	)

132 
	#DT_LNK
 10

	)

133 
	#DT_SOCK
 12

	)

134 
	#DT_WHT
 14

	)

139 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

140 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

	@/usr/include/sys/errno.h

69 #i‚def 
_SYS_ERRNO_H_


70 
	#_SYS_ERRNO_H_


	)

72 
	~<sys/cdefs.h
>

73 
__BEGIN_DECLS


74 * 
__îr‹
();

75 
	#î∫o
 (*
	`__îr‹
())

	)

76 
	g__END_DECLS


82 
	#EPERM
 1

	)

83 
	#ENOENT
 2

	)

84 
	#ESRCH
 3

	)

85 
	#EINTR
 4

	)

86 
	#EIO
 5

	)

87 
	#ENXIO
 6

	)

88 
	#E2BIG
 7

	)

89 
	#ENOEXEC
 8

	)

90 
	#EBADF
 9

	)

91 
	#ECHILD
 10

	)

92 
	#EDEADLK
 11

	)

94 
	#ENOMEM
 12

	)

95 
	#EACCES
 13

	)

96 
	#EFAULT
 14

	)

97 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#ENOTBLK
 15

	)

100 
	#EBUSY
 16

	)

101 
	#EEXIST
 17

	)

102 
	#EXDEV
 18

	)

103 
	#ENODEV
 19

	)

104 
	#ENOTDIR
 20

	)

105 
	#EISDIR
 21

	)

106 
	#EINVAL
 22

	)

107 
	#ENFILE
 23

	)

108 
	#EMFILE
 24

	)

109 
	#ENOTTY
 25

	)

110 
	#ETXTBSY
 26

	)

111 
	#EFBIG
 27

	)

112 
	#ENOSPC
 28

	)

113 
	#ESPIPE
 29

	)

114 
	#EROFS
 30

	)

115 
	#EMLINK
 31

	)

116 
	#EPIPE
 32

	)

119 
	#EDOM
 33

	)

120 
	#ERANGE
 34

	)

123 
	#EAGAIN
 35

	)

124 
	#EWOULDBLOCK
 
EAGAIN


	)

125 
	#EINPROGRESS
 36

	)

126 
	#EALREADY
 37

	)

129 
	#ENOTSOCK
 38

	)

130 
	#EDESTADDRREQ
 39

	)

131 
	#EMSGSIZE
 40

	)

132 
	#EPROTOTYPE
 41

	)

133 
	#ENOPROTOOPT
 42

	)

134 
	#EPROTONOSUPPORT
 43

	)

135 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

136 
	#ESOCKTNOSUPPORT
 44

	)

138 
	#ENOTSUP
 45

	)

139 #i‡!
__DARWIN_UNIX03
 && !
deföed
(
KERNEL
)

148 
	#EOPNOTSUPP
 
ENOTSUP


	)

151 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

152 
	#EPFNOSUPPORT
 46

	)

154 
	#EAFNOSUPPORT
 47

	)

155 
	#EADDRINUSE
 48

	)

156 
	#EADDRNOTAVAIL
 49

	)

159 
	#ENETDOWN
 50

	)

160 
	#ENETUNREACH
 51

	)

161 
	#ENETRESET
 52

	)

162 
	#ECONNABORTED
 53

	)

163 
	#ECONNRESET
 54

	)

164 
	#ENOBUFS
 55

	)

165 
	#EISCONN
 56

	)

166 
	#ENOTCONN
 57

	)

167 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

168 
	#ESHUTDOWN
 58

	)

169 
	#ETOOMANYREFS
 59

	)

171 
	#ETIMEDOUT
 60

	)

172 
	#ECONNREFUSED
 61

	)

174 
	#ELOOP
 62

	)

175 
	#ENAMETOOLONG
 63

	)

178 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

179 
	#EHOSTDOWN
 64

	)

181 
	#EHOSTUNREACH
 65

	)

182 
	#ENOTEMPTY
 66

	)

185 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

186 
	#EPROCLIM
 67

	)

187 
	#EUSERS
 68

	)

189 
	#EDQUOT
 69

	)

192 
	#ESTALE
 70

	)

193 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

194 
	#EREMOTE
 71

	)

195 
	#EBADRPC
 72

	)

196 
	#ERPCMISMATCH
 73

	)

197 
	#EPROGUNAVAIL
 74

	)

198 
	#EPROGMISMATCH
 75

	)

199 
	#EPROCUNAVAIL
 76

	)

202 
	#ENOLCK
 77

	)

203 
	#ENOSYS
 78

	)

205 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

206 
	#EFTYPE
 79

	)

207 
	#EAUTH
 80

	)

208 
	#ENEEDAUTH
 81

	)

211 
	#EPWROFF
 82

	)

212 
	#EDEVERR
 83

	)

215 
	#EOVERFLOW
 84

	)

218 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

219 
	#EBADEXEC
 85

	)

220 
	#EBADARCH
 86

	)

221 
	#ESHLIBVERS
 87

	)

222 
	#EBADMACHO
 88

	)

225 
	#ECANCELED
 89

	)

227 
	#EIDRM
 90

	)

228 
	#ENOMSG
 91

	)

229 
	#EILSEQ
 92

	)

230 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

231 
	#ENOATTR
 93

	)

234 
	#EBADMSG
 94

	)

235 
	#EMULTIHOP
 95

	)

236 
	#ENODATA
 96

	)

237 
	#ENOLINK
 97

	)

238 
	#ENOSR
 98

	)

239 
	#ENOSTR
 99

	)

240 
	#EPROTO
 100

	)

241 
	#ETIME
 101

	)

243 #i‡
__DARWIN_UNIX03
 || 
deföed
(
KERNEL
)

245 
	#EOPNOTSUPP
 102

	)

248 
	#ENOPOLICY
 103

	)

250 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

251 
	#ELAST
 103

	)

	@/usr/include/sys/select.h

63 #i‚de‡
_SYS_SELECT_H_


64 
	#_SYS_SELECT_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

75 
	#__√ed_fd_£t


	)

76 
	#__√ed_°ru˘_time•ec


	)

77 
	#__√ed_°ru˘_timevÆ


	)

78 
	~<sys/_°ru˘s.h
>

85 #i‚def 
_TIME_T


86 
	#_TIME_T


	)

87 
__d¨wö_time_t
 
	ttime_t
;

90 #i‚de‡
_SUSECONDS_T


91 
	#_SUSECONDS_T


	)

92 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

95 #i‚de‡
_SIGSET_T


96 
	#_SIGSET_T


	)

97 
__d¨wö_sig£t_t
 
	tsig£t_t
;

112 #i‚def 
FD_SETSIZE


113 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

115 #i‚de‡
FD_SET


116 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

118 #i‚de‡
FD_CLR


119 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

121 #i‚de‡
FD_ISSET


122 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

124 #i‚de‡
FD_ZERO


125 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

127 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

128 #i‚de‡
FD_COPY


129 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

134 
	g__BEGIN_DECLS


136 #i‚de‡ 
__MWERKS__


137 
	$p£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

138 
fd_£t
 * 
__ª°ri˘
, c⁄° 
time•ec
 * __restrict,

139 c⁄° 
sig£t_t
 * 
__ª°ri˘
)

140 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

141 
	$__DARWIN_EXTSN_C
(
p£À˘
)

143 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


144 
	$__DARWIN_1050
(
p£À˘
)

146 
	$__DARWIN_ALIAS_C
(
p£À˘
)

152 
	~<sys/_£À˘.h
>

154 
__END_DECLS


	@/usr/include/sys/syslimits.h

65 #i‚de‡
_SYS_SYSLIMITS_H_


66 
	#_SYS_SYSLIMITS_H_


	)

68 
	~<sys/cdefs.h
>

70 #i‡!
deföed
(
_ANSI_SOURCE
)

75 
	#ARG_MAX
 (256 * 1024Ë

	)

76 
	#CHILD_MAX
 266

	)

77 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

78 
	#GID_MAX
 2147483647U

	)

80 
	#LINK_MAX
 32767

	)

81 
	#MAX_CANON
 1024

	)

82 
	#MAX_INPUT
 1024

	)

83 
	#NAME_MAX
 255

	)

84 
	#NGROUPS_MAX
 16

	)

85 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

86 
	#UID_MAX
 2147483647U

	)

88 
	#OPEN_MAX
 10240

	)

91 
	#PATH_MAX
 1024

	)

92 
	#PIPE_BUF
 512

	)

94 
	#BC_BASE_MAX
 99

	)

95 
	#BC_DIM_MAX
 2048

	)

96 
	#BC_SCALE_MAX
 99

	)

97 
	#BC_STRING_MAX
 1000

	)

98 
	#CHARCLASS_NAME_MAX
 14

	)

99 
	#COLL_WEIGHTS_MAX
 2

	)

100 
	#EQUIV_CLASS_MAX
 2

	)

101 
	#EXPR_NEST_MAX
 32

	)

102 
	#LINE_MAX
 2048

	)

103 
	#RE_DUP_MAX
 255

	)

105 #i‡
__DARWIN_UNIX03


106 
	#NZERO
 20

	)

111 
	#NZERO
 0

	)

	@/usr/include/sys/unistd.h

64 #i‚de‡
_SYS_UNISTD_H_


65 
	#_SYS_UNISTD_H_


	)

67 
	~<sys/cdefs.h
>

75 #ifdef 
_NOT_AVAILABLE


76 
	#_POSIX_SAVED_IDS


	)

79 
	#_POSIX_VERSION
 200112L

	)

80 
	#_POSIX2_VERSION
 200112L

	)

84 #i‚de‡
_POSIX_VDISABLE


85 
	#_POSIX_VDISABLE
 (()'\377')

	)

88 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

91 
	#F_OK
 0

	)

92 
	#X_OK
 (1<<0Ë

	)

93 
	#W_OK
 (1<<1Ë

	)

94 
	#R_OK
 (1<<2Ë

	)

96 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

102 
	#_READ_OK
 (1<<9Ë

	)

103 
	#_WRITE_OK
 (1<<10Ë

	)

104 
	#_EXECUTE_OK
 (1<<11Ë

	)

105 
	#_DELETE_OK
 (1<<12Ë

	)

106 
	#_APPEND_OK
 (1<<13Ë

	)

107 
	#_RMFILE_OK
 (1<<14Ë

	)

108 
	#_RATTR_OK
 (1<<15Ë

	)

109 
	#_WATTR_OK
 (1<<16Ë

	)

110 
	#_REXT_OK
 (1<<17Ë

	)

111 
	#_WEXT_OK
 (1<<18Ë

	)

112 
	#_RPERM_OK
 (1<<19Ë

	)

113 
	#_WPERM_OK
 (1<<20Ë

	)

114 
	#_CHOWN_OK
 (1<<21Ë

	)

116 
	#_ACCESS_EXTENDED_MASK
 (
_READ_OK
 | 
_WRITE_OK
 | 
_EXECUTE_OK
 | \

117 
_DELETE_OK
 | 
_APPEND_OK
 | \

118 
_RMFILE_OK
 | 
_REXT_OK
 | \

119 
_WEXT_OK
 | 
_RATTR_OK
 | 
_WATTR_OK
 | 
_RPERM_OK
 | \

120 
_WPERM_OK
 | 
_CHOWN_OK
)

	)

124 #i‚de‡
SEEK_SET


125 
	#SEEK_SET
 0

	)

126 
	#SEEK_CUR
 1

	)

127 
	#SEEK_END
 2

	)

130 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

132 
	#L_SET
 
SEEK_SET


	)

133 
	#L_INCR
 
SEEK_CUR


	)

134 
	#L_XTND
 
SEEK_END


	)

137 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

138 
	sac˚ssx_des¸ùt‹
 {

139 
	mad_«me_off£t
;

140 
	mad_Êags
;

141 
	mad_∑d
[2];

143 
	#ACCESSX_MAX_DESCRIPTORS
 100

	)

144 
	#ACCESSX_MAX_TABLESIZE
 (16 * 1024)

	)

148 
	#_PC_LINK_MAX
 1

	)

149 
	#_PC_MAX_CANON
 2

	)

150 
	#_PC_MAX_INPUT
 3

	)

151 
	#_PC_NAME_MAX
 4

	)

152 
	#_PC_PATH_MAX
 5

	)

153 
	#_PC_PIPE_BUF
 6

	)

154 
	#_PC_CHOWN_RESTRICTED
 7

	)

155 
	#_PC_NO_TRUNC
 8

	)

156 
	#_PC_VDISABLE
 9

	)

158 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

159 
	#_PC_NAME_CHARS_MAX
 10

	)

160 
	#_PC_CASE_SENSITIVE
 11

	)

161 
	#_PC_CASE_PRESERVING
 12

	)

162 
	#_PC_EXTENDED_SECURITY_NP
 13

	)

163 
	#_PC_AUTH_OPAQUE_NP
 14

	)

166 
	#_PC_2_SYMLINKS
 15

	)

167 
	#_PC_ALLOC_SIZE_MIN
 16

	)

168 
	#_PC_ASYNC_IO
 17

	)

169 
	#_PC_FILESIZEBITS
 18

	)

170 
	#_PC_PRIO_IO
 19

	)

171 
	#_PC_REC_INCR_XFER_SIZE
 20

	)

172 
	#_PC_REC_MAX_XFER_SIZE
 21

	)

173 
	#_PC_REC_MIN_XFER_SIZE
 22

	)

174 
	#_PC_REC_XFER_ALIGN
 23

	)

175 
	#_PC_SYMLINK_MAX
 24

	)

176 
	#_PC_SYNC_IO
 25

	)

179 
	#_CS_PATH
 1

	)

	@/usr/include/sys/wait.h

64 #i‚de‡
_SYS_WAIT_H_


65 
	#_SYS_WAIT_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

80 
	mP_ALL
,

81 
	mP_PID
,

82 
	mP_PGID


83 } 
	tidty≥_t
;

89 #i‚de‡
_PID_T


90 
__d¨wö_pid_t
 
	tpid_t
;

91 
	#_PID_T


	)

94 #i‚de‡
_ID_T


95 
__d¨wö_id_t
 
	tid_t
;

96 
	#_ID_T


	)

116 
	~<sys/sig«l.h
>

117 
	~<sys/ªsour˚.h
>

128 
	#WNOHANG
 0x00000001

	)

129 
	#WUNTRACED
 0x00000002

	)

135 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

136 
	#_W_INT
(
i
Ë(i)

	)

138 
	#_W_INT
(
w
Ë(*(*)&(w)Ë

	)

139 
	#WCOREFLAG
 0200

	)

143 
	#_WSTATUS
(
x
Ë(
	`_W_INT
(xË& 0177)

	)

144 
	#_WSTOPPED
 0177

	)

150 #i‡
__DARWIN_UNIX03


151 
	#WEXITSTATUS
(
x
Ë((
	`_W_INT
(xË>> 8Ë& 0x000000ff)

	)

153 
	#WEXITSTATUS
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

156 
	#WSTOPSIG
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

157 
	#WIFCONTINUED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË=0x13)

	)

158 
	#WIFSTOPPED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË!0x13)

	)

159 
	#WIFEXITED
(
x
Ë(
	`_WSTATUS
(xË=0)

	)

160 
	#WIFSIGNALED
(
x
Ë(
	`_WSTATUS
(xË!
_WSTOPPED
 && _WSTATUS(xË!0)

	)

161 
	#WTERMSIG
(
x
Ë(
	`_WSTATUS
(x))

	)

162 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

163 
	#WCOREDUMP
(
x
Ë(
	`_W_INT
(xË& 
WCOREFLAG
)

	)

165 
	#W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

166 
	#W_STOPCODE
(
sig
Ë((sigË<< 8 | 
_WSTOPPED
)

	)

175 
	#WEXITED
 0x00000004

	)

176 #i‡
__DARWIN_UNIX03


178 
	#WSTOPPED
 0x00000008

	)

180 
	#WCONTINUED
 0x00000010

	)

181 
	#WNOWAIT
 0x00000020

	)

184 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

190 
	#WAIT_ANY
 (-1Ë

	)

191 
	#WAIT_MYPGRP
 0

	)

193 
	~<machöe/ídün.h
>

201 
	uwaô
 {

202 
	mw_°©us
;

207 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


208 
	mw_Tîmsig
:7,

209 
	mw_C‹edump
:1,

210 
	mw_Rëcode
:8,

211 
	mw_FûÀr
:16;

213 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


214 
	mw_FûÀr
:16,

215 
	mw_Rëcode
:8,

216 
	mw_C‹edump
:1,

217 
	mw_Tîmsig
:7;

219 } 
	mw_T
;

226 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


227 
	mw_St›vÆ
:8,

228 
	mw_St›sig
:8,

229 
	mw_FûÀr
:16;

231 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


232 
	mw_FûÀr
:16,

233 
	mw_St›sig
:8,

234 
	mw_St›vÆ
:8;

236 } 
	mw_S
;

238 
	#w_ãrmsig
 
w_T
.
w_Tîmsig


	)

239 
	#w_c‹edump
 
w_T
.
w_C‹edump


	)

240 
	#w_ªtcode
 
w_T
.
w_Rëcode


	)

241 
	#w_°›vÆ
 
w_S
.
w_St›vÆ


	)

242 
	#w_°›sig
 
w_S
.
w_St›sig


	)

246 #i‡!(
__DARWIN_UNIX03
 - 0)

251 
	#WSTOPPED
 
_WSTOPPED


	)

254 
__BEGIN_DECLS


255 
pid_t
 
	$waô
(*Ë
	`__DARWIN_ALIAS_C
(
waô
);

256 
pid_t
 
	$waôpid
(
pid_t
, *, Ë
	`__DARWIN_ALIAS_C
(
waôpid
);

257 #i‚de‡
_ANSI_SOURCE


258 
	$waôid
(
idty≥_t
, 
id_t
, 
sigöfo_t
 *, Ë
	`__DARWIN_ALIAS_C
(
waôid
);

260 #i‡ (!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

261 
pid_t
 
	`waô3
(*, , 
rußge
 *);

262 
pid_t
 
	`waô4
’id_t, *, , 
rußge
 *);

264 
__END_DECLS


	@/usr/include/xlocale/_stdio.h

24 #i‚de‡
_XLOCALE__STDIO_H_


25 
	#_XLOCALE__STDIO_H_


	)

27 
__BEGIN_DECLS


28 
	$a•rötf_l
(**, 
loˇÀ_t
, const *, ...)

29 
	`__DARWIN_LDBL_COMPAT2
(
a•rötf_l
);

30 
	$Ârötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

31 
	`__DARWIN_LDBL_COMPAT2
(
Ârötf_l
);

32 
	$fsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

33 
	`__DARWIN_LDBL_COMPAT2
(
fsˇnf_l
);

34 
	$¥ötf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

35 
	`__DARWIN_LDBL_COMPAT2
(
¥ötf_l
);

36 
	$sˇnf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

37 
	`__DARWIN_LDBL_COMPAT2
(
sˇnf_l
);

38 
	$¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
,

39 c⁄° * 
__ª°ri˘
, ...Ë
	`__DARWIN_LDBL_COMPAT2
(
¢¥ötf_l
);

40 
	$•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

41 
	`__DARWIN_LDBL_COMPAT2
(
•rötf_l
);

42 
	$ssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

43 ...Ë
	`__DARWIN_LDBL_COMPAT2
(
ssˇnf_l
);

44 
	$va•rötf_l
(**, 
loˇÀ_t
, c⁄° *, 
va_li°
)

45 
	`__DARWIN_LDBL_COMPAT2
(
va•rötf_l
);

46 
	$vÂrötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

47 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT2
(
vÂrötf_l
);

48 
	$vfsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

49 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT2
(
vfsˇnf_l
);

50 
	$v¥ötf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

51 
	`__DARWIN_LDBL_COMPAT2
(
v¥ötf_l
);

52 
	$vsˇnf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

53 
	`__DARWIN_LDBL_COMPAT2
(
vsˇnf_l
);

54 
	$v¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
,

55 c⁄° * 
__ª°ri˘
, 
va_li°
)

56 
	`__DARWIN_LDBL_COMPAT2
(
v¢¥ötf_l
);

57 
	$v•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

58 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT2
(
v•rötf_l
);

59 
	$vssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

60 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT2
(
vssˇnf_l
);

61 
__END_DECLS


	@/usr/include/xlocale/_stdlib.h

24 #i‚de‡
_XLOCALE__STDLIB_H_


25 
	#_XLOCALE__STDLIB_H_


	)

27 
__BEGIN_DECLS


28 
©of_l
(c⁄° *, 
loˇÀ_t
);

29 
©oi_l
(c⁄° *, 
loˇÀ_t
);

30 
©ﬁ_l
(c⁄° *, 
loˇÀ_t
);

31 #i‡!
__DARWIN_NO_LONG_LONG


33 
©ﬁl_l
(c⁄° *, 
loˇÀ_t
);

35 
mbÀn_l
(c⁄° *, 
size_t
, 
loˇÀ_t
);

36 
size_t
 
mb°owcs_l
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t,

37 
loˇÀ_t
);

38 
mbtowc_l
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
,

39 
loˇÀ_t
);

40 
	$°πod_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πod_l
);

41 
	$°πof_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πof_l
);

42 
	`°πﬁ_l
(c⁄° *, **, , 
loˇÀ_t
);

44 
	$°πﬁd_l
(c⁄° *, **, 
loˇÀ_t
)

45 
	`__DARWIN_LDBL_COMPAT2
(
°πﬁd_l
);

47 
	`°πﬁl_l
(c⁄° *, **, , 
loˇÀ_t
);

48 #i‡!
__DARWIN_NO_LONG_LONG


50 
	`°πoq_l
(c⁄° *, **, , 
loˇÀ_t
);

53 
	`°πoul_l
(c⁄° *, **, , 
loˇÀ_t
);

55 
	`°πouŒ_l
(c⁄° *, **, , 
loˇÀ_t
);

56 #i‡!
__DARWIN_NO_LONG_LONG


58 
	`°πouq_l
(c⁄° *, **, , 
loˇÀ_t
);

60 
size_t
 
	`wc°ombs_l
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t,

61 
loˇÀ_t
);

62 
	`w˘omb_l
(*, 
wch¨_t
, 
loˇÀ_t
);

65 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

66 #¥agm®
GCC
 
pois⁄
 
mb°owcs_l
 
mbtowc_l
 
wc°ombs_l
 
w˘omb_l


68 
__END_DECLS


	@/usr/include/xlocale/_string.h

24 #i‚de‡
_XLOCALE__STRING_H_


25 
	#_XLOCALE__STRING_H_


	)

27 
__BEGIN_DECLS


28 
°rcﬁl_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

29 
size_t
 
°rx‰m_l
(*, c⁄° *, size_t, 
loˇÀ_t
);

30 
°rˇ£cmp_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

31 *
°rˇ£°r_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

32 
°∫ˇ£cmp_l
(c⁄° *, c⁄° *, 
size_t
, 
loˇÀ_t
);

33 
	g__END_DECLS


	@/usr/include/i386/endian.h

66 #i‚de‡
_I386__ENDIAN_H_


67 
	#_I386__ENDIAN_H_


	)

69 
	~<sys/cdefs.h
>

78 
	#_QUAD_HIGHWORD
 1

	)

79 
	#_QUAD_LOWWORD
 0

	)

85 
	#__DARWIN_LITTLE_ENDIAN
 1234

	)

86 
	#__DARWIN_BIG_ENDIAN
 4321

	)

87 
	#__DARWIN_PDP_ENDIAN
 3412

	)

89 
	#__DARWIN_BYTE_ORDER
 
__DARWIN_LITTLE_ENDIAN


	)

91 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

93 
	#LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

94 
	#BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

95 
	#PDP_ENDIAN
 
__DARWIN_PDP_ENDIAN


	)

97 
	#BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

99 
	~<sys/_ídün.h
>

	@/usr/include/i386/limits.h

36 #i‚de‡
_I386_LIMITS_H_


37 
	#_I386_LIMITS_H_


	)

39 
	~<sys/cdefs.h
>

40 
	~<i386/_limôs.h
>

42 
	#CHAR_BIT
 8

	)

43 
	#MB_LEN_MAX
 6

	)

45 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

46 
	#CLK_TCK
 
__DARWIN_CLK_TCK


	)

59 
	#SCHAR_MAX
 127

	)

60 
	#SCHAR_MIN
 (-128Ë

	)

62 
	#UCHAR_MAX
 255

	)

63 
	#CHAR_MAX
 127

	)

64 
	#CHAR_MIN
 (-128Ë

	)

66 
	#USHRT_MAX
 65535

	)

67 
	#SHRT_MAX
 32767

	)

68 
	#SHRT_MIN
 (-32768Ë

	)

70 
	#UINT_MAX
 0xfffffff‡

	)

71 
	#INT_MAX
 2147483647

	)

72 
	#INT_MIN
 (-2147483647-1Ë

	)

74 #ifde‡
__LP64__


75 
	#ULONG_MAX
 0xffffffffffffffffUL

	)

76 
	#LONG_MAX
 0x7fffffffffffffffL

	)

77 
	#LONG_MIN
 (-0x7fffffffffffffffL-1Ë

	)

79 
	#ULONG_MAX
 0xffffffffUL

	)

80 
	#LONG_MAX
 2147483647L

	)

81 
	#LONG_MIN
 (-2147483647L-1Ë

	)

84 
	#ULLONG_MAX
 0xffffffffffffffffULL

	)

85 
	#LLONG_MAX
 0x7fffffffffffffffLL

	)

86 
	#LLONG_MIN
 (-0x7fffffffffffffffLL-1Ë

	)

88 #i‡!
deföed
(
_ANSI_SOURCE
)

89 #ifde‡
__LP64__


90 
	#LONG_BIT
 64

	)

92 
	#LONG_BIT
 32

	)

94 
	#SSIZE_MAX
 
LONG_MAX


	)

95 
	#WORD_BIT
 32

	)

97 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#SIZE_T_MAX
 
ULONG_MAX


	)

100 
	#UQUAD_MAX
 
ULLONG_MAX


	)

101 
	#QUAD_MAX
 
LLONG_MAX


	)

102 
	#QUAD_MIN
 
LLONG_MIN


	)

	@/usr/include/i386/types.h

66 #i‚def 
_MACHTYPES_H_


67 
	#_MACHTYPES_H_


	)

69 #i‚de‡
__ASSEMBLER__


70 
	~<i386/_ty≥s.h
>

71 
	~<sys/cdefs.h
>

76 #i‚de‡
_INT8_T


77 
	#_INT8_T


	)

78 
__sig√d
 
	töt8_t
;

80 
	tu_öt8_t
;

81 #i‚de‡
_INT16_T


82 
	#_INT16_T


	)

83 
	töt16_t
;

85 
	tu_öt16_t
;

86 #i‚de‡
_INT32_T


87 
	#_INT32_T


	)

88 
	töt32_t
;

90 
	tu_öt32_t
;

91 #i‚de‡
_INT64_T


92 
	#_INT64_T


	)

93 
	töt64_t
;

95 
	tu_öt64_t
;

97 #i‡
__LP64__


98 
öt64_t
 
	tªgi°î_t
;

100 
öt32_t
 
	tªgi°î_t
;

103 #i‚de‡
_INTPTR_T


104 
	#_INTPTR_T


	)

105 
__d¨wö_öçå_t
 
	töçå_t
;

107 #i‚de‡
_UINTPTR_T


108 
	#_UINTPTR_T


	)

109 
	tuöçå_t
;

112 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

114 
u_öt64_t
 
	tu£r_addr_t
;

115 
u_öt64_t
 
	tu£r_size_t
;

116 
öt64_t
 
	tu£r_ssize_t
;

117 
öt64_t
 
	tu£r_l⁄g_t
;

118 
u_öt64_t
 
	tu£r_ul⁄g_t
;

119 
öt64_t
 
	tu£r_time_t
;

120 
	#USER_ADDR_NULL
 ((
u£r_addr_t
Ë0)

	)

121 
	#CAST_USER_ADDR_T
(
a_±r
Ë((
u£r_addr_t
)((
uöçå_t
)◊_±r)))

	)

125 
u_öt64_t
 
	tsysˇŒ_¨g_t
;

127 #i‚de‡
__off£tof


128 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

	@/usr/include/machine/_structs.h

28 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

29 
	~"µc/_°ru˘s.h
"

30 #ñi‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

31 
	~"i386/_°ru˘s.h
"

32 #ñi‡
deföed
 (
__¨m__
)

33 
	~"¨m/_°ru˘s.h
"

35 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_types.h

28 #i‚de‡
_BSD_MACHINE__TYPES_H_


29 
	#_BSD_MACHINE__TYPES_H_


	)

31 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

32 
	~"µc/_ty≥s.h
"

33 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

34 
	~"i386/_ty≥s.h
"

35 #ñi‡
deföed
 (
__¨m__
)

36 
	~"¨m/_ty≥s.h
"

38 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/openmpi/ompi/mpi/cxx/comm.h

21 ˛as†
	cComm_NuŒ
 {

25 
	mpublic
:

30 
ölöe
 
	$Comm_NuŒ
() { }

32 
ölöe
 
	$Comm_NuŒ
(c⁄° 
Comm_NuŒ
& 
d©a
Ë: 
	$pmpi_comm
(
d©a
.
pmpi_comm
Ë{ 
	}
}

34 
ölöe
 
	$Comm_NuŒ
(
MPI_Comm
 
d©a
Ë: 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

36 
ölöe
 
Comm_NuŒ
(c⁄° 
PMPI
::Comm_NuŒ& 
d©a
Ë: 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

39 
vútuÆ
 
ölöe
 ~
	$Comm_NuŒ
(Ë{ 
	}
}

41 
ölöe
 
Comm_NuŒ
& 
›î©‹
=(c⁄° Comm_NuŒ& 
d©a
) {

42 
pmpi_comm
 = 
d©a
.pmpi_comm;

43  *
	gthis
;

47 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Comm_NuŒ
& 
d©a
) const {

48  (
boﬁ
Ë(
pmpi_comm
 =
d©a
.pmpi_comm); }

50 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Comm_NuŒ
& 
d©a
) const {

51  (
boﬁ
Ë(
pmpi_comm
 !
d©a
.pmpi_comm);}

54 
ölöe
 
›î©‹
 
	$MPI_Comm
(Ëc⁄° {  
pmpi_comm
; 
	}
}

56 
ölöe
 
›î©‹
 c⁄° 
	gPMPI
::
Comm_NuŒ
&(Ëc⁄° {  
pmpi_comm
; }

61 
ölöe
 
	$Comm_NuŒ
(Ë: 
	$mpi_comm
(
MPI_COMM_NULL
Ë{ 
	}
}

63 
ölöe
 
	$Comm_NuŒ
(c⁄° 
Comm_NuŒ
& 
d©a
Ë: 
	$mpi_comm
(
d©a
.
mpi_comm
Ë{ 
	}
}

65 
ölöe
 
	$Comm_NuŒ
(
MPI_Comm
 
d©a
Ë: 
	$mpi_comm
(
d©a
Ë{ 
	}
}

68 
vútuÆ
 
ölöe
 ~
	$Comm_NuŒ
(Ë{ 
	}
}

72 
ölöe
 
boﬁ
 
›î©‹
==(c⁄° 
Comm_NuŒ
& 
d©a
) const {

73  (
boﬁ
Ë(
mpi_comm
 =
d©a
.mpi_comm); }

75 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Comm_NuŒ
& 
d©a
) const {

76  (
boﬁ
Ë!(*
this
 =
d©a
);}

79 
ölöe
 
›î©‹
 
	$MPI_Comm
(Ëc⁄° {  
mpi_comm
; 
	}
}

84 
	g¥Ÿe˘ed
:

87 
PMPI
::
Comm_NuŒ
 
pmpi_comm
;

89 
MPI_Comm
 
	gmpi_comm
;

96 ˛as†
	cComm
 : 
public
 
Comm_NuŒ
 {

97 
public
:

99 
	tEºh™dÀr_‚
(
	tComm
&, *, ...);

100 
	tC›y_©å_fun˘i⁄
(c⁄° 
	tComm
& 
	tﬁdcomm
, 
	tcomm_keyvÆ
,

101 * 
	texåa_°©e
, * 
	t©åibuã_vÆ_ö
,

102 * 
	t©åibuã_vÆ_out
,

103 
	tboﬁ
& 
	tÊag
);

104 
	tDñëe_©å_fun˘i⁄
(
	tComm
& 
	tcomm
, 
	tcomm_keyvÆ
,

105 * 
	t©åibuã_vÆ
,

106 * 
	texåa_°©e
);

108 
	#_MPI2CPP_ERRHANDLERFN_
 
Eºh™dÀr_‚


	)

109 
	#_MPI2CPP_COPYATTRFN_
 
C›y_©å_fun˘i⁄


	)

110 
	#_MPI2CPP_DELETEATTRFN_
 
Dñëe_©å_fun˘i⁄


	)

114 
Comm
();

117 
Comm
(c⁄° 
Comm_NuŒ
& 
d©a
);

120 
	$Comm
(c⁄° 
Comm
& 
d©a
) :

121 
	`Comm_NuŒ
(
d©a
),

122 
	`pmpi_comm
((c⁄° 
PMPI
::
Comm
&Ë
d©a
) { }

125 
	$Comm
(
MPI_Comm
 
d©a
Ë: 
	`Comm_NuŒ
(d©a), 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

127 
Comm
(c⁄° 
PMPI
::Comm& 
d©a
) :

128 
Comm_NuŒ
((c⁄° 
PMPI
::Comm_NuŒ&)
d©a
),

129 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

131 
›î©‹
 c⁄° 
	gPMPI
::
Comm
&(Ëc⁄° {  
pmpi_comm
; }

134 
	gComm
& 
	g›î©‹
=(c⁄° 
Comm
& 
d©a
) {

135 
this
->
Comm_NuŒ
::
›î©‹
=(
d©a
);

136 
	gpmpi_comm
 = 
d©a
.
pmpi_comm
;

137  *
	gthis
;

139 
	gComm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

140 
this
->
Comm_NuŒ
::
›î©‹
=(
d©a
);

141 
MPI_Comm
 
	gtmp
 = 
d©a
;

142 
	gpmpi_comm
 = 
tmp
;

143  *
	gthis
;

146 
	gComm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

147 
this
->
Comm_NuŒ
::
›î©‹
=(
d©a
);

148 
	gpmpi_comm
 = 
d©a
;

149  *
	gthis
;

153 
	$Comm
(c⁄° 
Comm
& 
d©a
Ë: 
	$Comm_NuŒ
(
d©a
.
mpi_comm
Ë{ 
	}
}

155 
	$Comm
(
MPI_Comm
 
d©a
Ë: 
	$Comm_NuŒ
(
d©a
Ë{ 
	}
}

163 
vútuÆ
 
	$Síd
(c⁄° *
buf
, 
cou¡
,

164 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

166 
vútuÆ
 
	$Recv
(*
buf
, 
cou¡
, c⁄° 
D©©y≥
 & 
d©©y≥
,

167 
sour˚
, 
èg
, 
Sètus
 & 
°©us
) const;

170 
vútuÆ
 
	$Recv
(*
buf
, 
cou¡
, c⁄° 
D©©y≥
 & 
d©©y≥
,

171 
sour˚
, 
èg
) const;

173 
vútuÆ
 
	$B£nd
(c⁄° *
buf
, 
cou¡
,

174 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

176 
vútuÆ
 
	$S£nd
(c⁄° *
buf
, 
cou¡
,

177 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const ;

179 
vútuÆ
 
	$R£nd
(c⁄° *
buf
, 
cou¡
,

180 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

182 
vútuÆ
 
Reque°
 
	$I£nd
(c⁄° *
buf
, 
cou¡
,

183 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

185 
vútuÆ
 
Reque°
 
	$Ib£nd
(c⁄° *
buf
, 
cou¡
, const

186 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

188 
vútuÆ
 
Reque°
 
	$Is£nd
(c⁄° *
buf
, 
cou¡
,

189 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

191 
vútuÆ
 
Reque°
 
	$Ir£nd
(c⁄° *
buf
, 
cou¡
,

192 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const;

194 
vútuÆ
 
Reque°
 
	$Iªcv
(*
buf
, 
cou¡
,

195 c⁄° 
D©©y≥
 & 
d©©y≥
, 
sour˚
, 
èg
) const;

197 
vútuÆ
 
boﬁ
 
	$I¥obe
(
sour˚
, 
èg
, 
Sètus
 & 
°©us
) const;

199 
vútuÆ
 
boﬁ
 
	$I¥obe
(
sour˚
, 
èg
) const;

201 
vútuÆ
 
	$Probe
(
sour˚
, 
èg
, 
Sètus
 & 
°©us
) const;

203 
vútuÆ
 
	$Probe
(
sour˚
, 
èg
) const;

205 
vútuÆ
 
Pªque°
 
	$Síd_öô
(c⁄° *
buf
, 
cou¡
,

206 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
,

207 
èg
) const;

209 
vútuÆ
 
Pªque°
 
	$B£nd_öô
(c⁄° *
buf
, 
cou¡
,

210 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
,

211 
èg
) const;

213 
vútuÆ
 
Pªque°
 
	$S£nd_öô
(c⁄° *
buf
, 
cou¡
,

214 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
,

215 
èg
) const;

217 
vútuÆ
 
Pªque°
 
	$R£nd_öô
(c⁄° *
buf
, 
cou¡
,

218 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
,

219 
èg
) const;

221 
vútuÆ
 
Pªque°
 
	$Recv_öô
(*
buf
, 
cou¡
,

222 c⁄° 
D©©y≥
 & 
d©©y≥
, 
sour˚
,

223 
èg
) const;

225 
vútuÆ
 
	$Sídªcv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

226 c⁄° 
D©©y≥
 & 
£ndty≥
, 
de°
, 
£ndèg
,

227 *
ªcvbuf
, 
ªcvcou¡
,

228 c⁄° 
D©©y≥
 & 
ªcvty≥
, 
sour˚
,

229 
ªcvèg
, 
Sètus
 & 
°©us
) const;

231 
vútuÆ
 
	$Sídªcv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

232 c⁄° 
D©©y≥
 & 
£ndty≥
, 
de°
, 
£ndèg
,

233 *
ªcvbuf
, 
ªcvcou¡
,

234 c⁄° 
D©©y≥
 & 
ªcvty≥
, 
sour˚
,

235 
ªcvèg
) const;

237 
vútuÆ
 
	$Sídªcv_ª∂a˚
(*
buf
, 
cou¡
,

238 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
,

239 
£ndèg
, 
sour˚
,

240 
ªcvèg
, 
Sètus
 & 
°©us
) const;

242 
vútuÆ
 
	$Sídªcv_ª∂a˚
(*
buf
, 
cou¡
,

243 c⁄° 
D©©y≥
 & 
d©©y≥
, 
de°
,

244 
£ndèg
, 
sour˚
,

245 
ªcvèg
) const;

251 
vútuÆ
 
Group
 
	$Gë_group
() const;

253 
vútuÆ
 
	$Gë_size
() const;

255 
vútuÆ
 
	$Gë_ønk
() const;

257 
	`Com∑ª
(c⁄° 
Comm
 & 
comm1
, c⁄° Comm & 
comm2
);

259 
vútuÆ
 
Comm
& 
	$Cl⁄e
() const = 0;

261 
vútuÆ
 
	`Fªe
();

263 
vútuÆ
 
boﬁ
 
	$Is_öãr
() const;

274 
vútuÆ
 

275 
	$B¨rõr
() const;

277 
vútuÆ
 

278 
	$Bˇ°
(*
buf„r
, 
cou¡
,

279 c⁄° 
D©©y≥
& 
d©©y≥
, 
roŸ
) const;

281 
vútuÆ
 

282 
	$G©hî
(c⁄° *
£ndbuf
, 
£ndcou¡
,

283 c⁄° 
D©©y≥
 & 
£ndty≥
,

284 *
ªcvbuf
, 
ªcvcou¡
,

285 c⁄° 
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const;

287 
vútuÆ
 

288 
	$G©hîv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

289 c⁄° 
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

290 c⁄° 
ªcvcou¡s
[], c⁄° 
di•ls
[],

291 c⁄° 
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const;

293 
vútuÆ
 

294 
	$Sˇâî
(c⁄° *
£ndbuf
, 
£ndcou¡
,

295 c⁄° 
D©©y≥
 & 
£ndty≥
,

296 *
ªcvbuf
, 
ªcvcou¡
,

297 c⁄° 
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const;

299 
vútuÆ
 

300 
	$Sˇâîv
(c⁄° *
£ndbuf
, c⁄° 
£ndcou¡s
[],

301 c⁄° 
di•ls
[], c⁄° 
D©©y≥
 & 
£ndty≥
,

302 *
ªcvbuf
, 
ªcvcou¡
,

303 c⁄° 
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const;

305 
vútuÆ
 

306 
	$AŒg©hî
(c⁄° *
£ndbuf
, 
£ndcou¡
,

307 c⁄° 
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

308 
ªcvcou¡
, c⁄° 
D©©y≥
 & 
ªcvty≥
) const;

310 
vútuÆ
 

311 
	$AŒg©hîv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

312 c⁄° 
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

313 c⁄° 
ªcvcou¡s
[], c⁄° 
di•ls
[],

314 c⁄° 
D©©y≥
 & 
ªcvty≥
) const;

316 
vútuÆ
 

317 
	$AŒtﬂŒ
(c⁄° *
£ndbuf
, 
£ndcou¡
,

318 c⁄° 
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

319 
ªcvcou¡
, c⁄° 
D©©y≥
 & 
ªcvty≥
) const;

321 
vútuÆ
 

322 
	$AŒtﬂŒv
(c⁄° *
£ndbuf
, c⁄° 
£ndcou¡s
[],

323 c⁄° 
sdi•ls
[], c⁄° 
D©©y≥
 & 
£ndty≥
,

324 *
ªcvbuf
, c⁄° 
ªcvcou¡s
[],

325 c⁄° 
rdi•ls
[], c⁄° 
D©©y≥
 & 
ªcvty≥
) const;

327 
vútuÆ
 

328 
	$AŒtﬂŒw
(c⁄° *
£ndbuf
, c⁄° 
£ndcou¡s
[],

329 c⁄° 
sdi•ls
[], c⁄° 
D©©y≥
 
£ndty≥s
[],

330 *
ªcvbuf
, c⁄° 
ªcvcou¡s
[],

331 c⁄° 
rdi•ls
[], c⁄° 
D©©y≥
 
ªcvty≥s
[]) const;

333 
vútuÆ
 

334 
	$Redu˚
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

335 c⁄° 
D©©y≥
 & 
d©©y≥
, c⁄° 
Op
 & 
›
,

336 
roŸ
) const;

339 
vútuÆ
 

340 
	$AŒªdu˚
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

341 c⁄° 
D©©y≥
 & 
d©©y≥
, c⁄° 
Op
 & 
›
) const;

343 
vútuÆ
 

344 
	$Redu˚_sˇâî
(c⁄° *
£ndbuf
, *
ªcvbuf
,

345 
ªcvcou¡s
[],

346 c⁄° 
D©©y≥
 & 
d©©y≥
,

347 c⁄° 
Op
 & 
›
) const;

353 
vútuÆ
 
	`Disc⁄√˘
();

355 
I¡îcomm
 
	`Gë_∑ª¡
();

357 
I¡îcomm
 
	`Joö
(c⁄° 
fd
);

363 
vútuÆ
 
	$Gë_«me
(* 
comm_«me
, & 
ªsu…Àn
) const;

365 
vútuÆ
 
	`Së_«me
(c⁄° * 
comm_«me
);

371 
vútuÆ
 
	$Gë_t›ﬁogy
() const;

377 
vútuÆ
 
	`Ab‹t
(
îr‹code
);

383 
vútuÆ
 
	`Së_îrh™dÀr
(c⁄° 
Eºh™dÀr
& 
îrh™dÀr
);

385 
vútuÆ
 
Eºh™dÀr
 
	$Gë_îrh™dÀr
() const;

388 
Eºh™dÀr
 
	`Cª©e_îrh™dÀr
(
Comm
::
Eºh™dÀr_‚
* 
fun˘i⁄
);

397 
	`Cª©e_keyvÆ
(
C›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

398 
Dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

399 * 
exåa_°©e
);

400 
	`Cª©e_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

401 
MPI_Comm_dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

402 * 
exåa_°©e
);

403 
	`Cª©e_keyvÆ
(
C›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

404 
MPI_Comm_dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

405 * 
exåa_°©e
);

406 
	`Cª©e_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

407 
Dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

408 * 
exåa_°©e
);

410 
¥Ÿe˘ed
:

411 
	`do_¸óã_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
* 
c_c›y_‚
,

412 
MPI_Comm_dñëe_©å_fun˘i⁄
* 
c_dñëe_‚
,

413 
C›y_©å_fun˘i⁄
* 
cxx_c›y_‚
,

414 
Dñëe_©å_fun˘i⁄
* 
cxx_dñëe_‚
,

415 * 
exåa_°©e
);

417 
public
:

419 
	`Fªe_keyvÆ
(& 
comm_keyvÆ
);

421 
vútuÆ
 
	$Së_©å
(
comm_keyvÆ
, c⁄° * 
©åibuã_vÆ
) const;

423 
vútuÆ
 
boﬁ
 
	$Gë_©å
(
comm_keyvÆ
, * 
©åibuã_vÆ
) const;

425 
vútuÆ
 
	`Dñëe_©å
(
comm_keyvÆ
);

427 
	`NULL_COPY_FN
(c⁄° 
Comm
& 
ﬁdcomm
, 
comm_keyvÆ
,

428 * 
exåa_°©e
, * 
©åibuã_vÆ_ö
,

429 * 
©åibuã_vÆ_out
, 
boﬁ
& 
Êag
);

431 
	`DUP_FN
(c⁄° 
Comm
& 
ﬁdcomm
, 
comm_keyvÆ
,

432 * 
exåa_°©e
, * 
©åibuã_vÆ_ö
,

433 * 
©åibuã_vÆ_out
, 
boﬁ
& 
Êag
);

435 
	`NULL_DELETE_FN
(
Comm
& 
comm
, 
comm_keyvÆ
, * 
©åibuã_vÆ
,

436 * 
exåa_°©e
);

439 
¥iv©e
:

441 
PMPI
::
Comm
 
pmpi_comm
;

445 
public
:

448 
Eºh™dÀr
* 
my_îrh™dÀr
;

450 ::
°d
::
	tm≠
<
	tMPI_Comm
, 
	tComm
*> 
	tmpi_comm_îr_m≠_t
;

451 
mpi_comm_îr_m≠_t
 
mpi_comm_îr_m≠
;

453 ::
°d
::
	t∑ú
<
	tComm
::
	t_MPI2CPP_COPYATTRFN_
*, Comm::
	t_MPI2CPP_DELETEATTRFN_
*> 
	tkeyvÆ_∑ú_t
;

454 ::
°d
::
	tm≠
<, 
	tkeyvÆ_∑ú_t
*> 
	tmpi_comm_keyvÆ_‚_m≠_t
;

455 
mpi_comm_keyvÆ_‚_m≠_t
 
mpi_comm_keyvÆ_‚_m≠
;

457 
	$öô
() {

458 
my_îrh™dÀr
 = (
Eºh™dÀr
*)0;

459 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/comm_inln.h

25 
ölöe
 

26 
	gMPI
::
Comm
::
Síd
(c⁄° *
buf
, 
cou¡
,

27 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

29 ()
MPI_Síd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
, 
de°
, 
èg
, 
mpi_comm
);

32 
ölöe
 

33 
	gMPI
::
Comm
::
Recv
(*
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
,

34 
sour˚
, 
èg
, 
MPI
::
Sètus
 & 
°©us
) const

36 ()
MPI_Recv
(
buf
, 
cou¡
, 
d©©y≥
, 
sour˚
, 
èg
, 
mpi_comm
, &
°©us
.
mpi_°©us
);

39 
ölöe
 

40 
	gMPI
::
Comm
::
Recv
(*
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
,

41 
sour˚
, 
èg
) const

43 ()
MPI_Recv
(
buf
, 
cou¡
, 
d©©y≥
, 
sour˚
,

44 
èg
, 
mpi_comm
, 
MPI_STATUS_IGNORE
);

47 
ölöe
 

48 
	gMPI
::
Comm
::
B£nd
(c⁄° *
buf
, 
cou¡
,

49 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

51 ()
MPI_B£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

52 
de°
, 
èg
, 
mpi_comm
);

55 
ölöe
 

56 
	gMPI
::
Comm
::
S£nd
(c⁄° *
buf
, 
cou¡
,

57 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

59 ()
MPI_S£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
, 
de°
,

60 
èg
, 
mpi_comm
);

63 
ölöe
 

64 
	gMPI
::
Comm
::
R£nd
(c⁄° *
buf
, 
cou¡
,

65 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

67 ()
MPI_R£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

68 
de°
, 
èg
, 
mpi_comm
);

71 
ölöe
 
	gMPI
::
Reque°


72 
MPI
::
Comm
::
I£nd
(c⁄° *
buf
, 
cou¡
,

73 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

75 
MPI_Reque°
 
	gªque°
;

76 ()
MPI_I£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

77 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

78  
	gªque°
;

81 
ölöe
 
	gMPI
::
Reque°


82 
MPI
::
Comm
::
Ib£nd
(c⁄° *
buf
, 
cou¡
,

83 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

85 
MPI_Reque°
 
	gªque°
;

86 ()
MPI_Ib£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

87 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

88  
	gªque°
;

91 
ölöe
 
	gMPI
::
Reque°


92 
MPI
::
Comm
::
Is£nd
(c⁄° *
buf
, 
cou¡
,

93 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

95 
MPI_Reque°
 
	gªque°
;

96 ()
MPI_Is£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

97 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

98  
	gªque°
;

101 
ölöe
 
	gMPI
::
Reque°


102 
MPI
::
Comm
::
Ir£nd
(c⁄° *
buf
, 
cou¡
,

103 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

105 
MPI_Reque°
 
	gªque°
;

106 ()
MPI_Ir£nd
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

107 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

108  
	gªque°
;

111 
ölöe
 
	gMPI
::
Reque°


112 
MPI
::
Comm
::
Iªcv
(*
buf
, 
cou¡
,

113 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
sour˚
, 
èg
) const

115 
MPI_Reque°
 
	gªque°
;

116 ()
MPI_Iªcv
(
buf
, 
cou¡
, 
d©©y≥
, 
sour˚
,

117 
èg
, 
mpi_comm
, &
ªque°
);

118  
	gªque°
;

122 
ölöe
 
boﬁ


123 
	gMPI
::
Comm
::
I¥obe
(
sour˚
, 
èg
, 
MPI
::
Sètus
 & 
°©us
) const

125 
t
;

126 ()
MPI_I¥obe
(
sour˚
, 
èg
, 
mpi_comm
, &
t
, &
°©us
.
mpi_°©us
);

127  
OPAL_INT_TO_BOOL
(
t
);

130 
ölöe
 
boﬁ


131 
	gMPI
::
Comm
::
	$I¥obe
(
sour˚
, 
èg
) const

133 
t
;

134 ()
	`MPI_I¥obe
(
sour˚
, 
èg
, 
mpi_comm
, &
t
, 
MPI_STATUS_IGNORE
);

135  
	`OPAL_INT_TO_BOOL
(
t
);

136 
	}
}

138 
ölöe
 

139 
	gMPI
::
Comm
::
Probe
(
sour˚
, 
èg
, 
MPI
::
Sètus
 & 
°©us
) const

141 ()
MPI_Probe
(
sour˚
, 
èg
, 
mpi_comm
, &
°©us
.
mpi_°©us
);

144 
ölöe
 

145 
	gMPI
::
Comm
::
	$Probe
(
sour˚
, 
èg
) const

147 ()
	`MPI_Probe
(
sour˚
, 
èg
, 
mpi_comm
, 
MPI_STATUS_IGNORE
);

148 
	}
}

150 
ölöe
 
	gMPI
::
Pªque°


151 
MPI
::
Comm
::
Síd_öô
(c⁄° *
buf
, 
cou¡
,

152 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

154 
MPI_Reque°
 
	gªque°
;

155 ()
MPI_Síd_öô
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

156 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

157  
	gªque°
;

160 
ölöe
 
	gMPI
::
Pªque°


161 
MPI
::
Comm
::
B£nd_öô
(c⁄° *
buf
, 
cou¡
,

162 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

164 
MPI_Reque°
 
	gªque°
;

165 ()
MPI_B£nd_öô
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

166 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

167  
	gªque°
;

170 
ölöe
 
	gMPI
::
Pªque°


171 
MPI
::
Comm
::
S£nd_öô
(c⁄° *
buf
, 
cou¡
,

172 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

174 
MPI_Reque°
 
	gªque°
;

175 ()
MPI_S£nd_öô
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

176 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

177  
	gªque°
;

180 
ölöe
 
	gMPI
::
Pªque°


181 
MPI
::
Comm
::
R£nd_öô
(c⁄° *
buf
, 
cou¡
,

182 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
, 
èg
) const

184 
MPI_Reque°
 
	gªque°
;

185 ()
MPI_R£nd_öô
(
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

186 
de°
, 
èg
, 
mpi_comm
, &
ªque°
);

187  
	gªque°
;

190 
ölöe
 
	gMPI
::
Pªque°


191 
MPI
::
Comm
::
Recv_öô
(*
buf
, 
cou¡
,

192 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
sour˚
, 
èg
) const

194 
MPI_Reque°
 
	gªque°
;

195 ()
MPI_Recv_öô
(
buf
, 
cou¡
, 
d©©y≥
, 
sour˚
,

196 
èg
, 
mpi_comm
, &
ªque°
);

197  
	gªque°
;

200 
ölöe
 

201 
	gMPI
::
Comm
::
Sídªcv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

202 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
, 
de°
, 
£ndèg
,

203 *
ªcvbuf
, 
ªcvcou¡
,

204 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
, 
sour˚
,

205 
ªcvèg
, 
MPI
::
Sètus
 & 
°©us
) const

207 ()
MPI_Sídªcv
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
,

208 
£ndty≥
,

209 
de°
, 
£ndèg
, 
ªcvbuf
, 
ªcvcou¡
,

210 
ªcvty≥
,

211 
sour˚
, 
ªcvèg
, 
mpi_comm
, &
°©us
.
mpi_°©us
);

214 
ölöe
 

215 
	gMPI
::
Comm
::
Sídªcv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

216 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
, 
de°
, 
£ndèg
,

217 *
ªcvbuf
, 
ªcvcou¡
,

218 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
, 
sour˚
,

219 
ªcvèg
) const

221 ()
MPI_Sídªcv
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
,

222 
£ndty≥
,

223 
de°
, 
£ndèg
, 
ªcvbuf
, 
ªcvcou¡
,

224 
ªcvty≥
,

225 
sour˚
, 
ªcvèg
, 
mpi_comm
, 
MPI_STATUS_IGNORE
);

228 
ölöe
 

229 
	gMPI
::
Comm
::
Sídªcv_ª∂a˚
(*
buf
, 
cou¡
,

230 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
,

231 
£ndèg
, 
sour˚
,

232 
ªcvèg
, 
MPI
::
Sètus
 & 
°©us
) const

234 ()
MPI_Sídªcv_ª∂a˚
(
buf
, 
cou¡
, 
d©©y≥
, 
de°
,

235 
£ndèg
, 
sour˚
, 
ªcvèg
, 
mpi_comm
,

236 &
°©us
.
mpi_°©us
);

239 
ölöe
 

240 
	gMPI
::
Comm
::
Sídªcv_ª∂a˚
(*
buf
, 
cou¡
,

241 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, 
de°
,

242 
£ndèg
, 
sour˚
,

243 
ªcvèg
) const

245 ()
MPI_Sídªcv_ª∂a˚
(
buf
, 
cou¡
, 
d©©y≥
, 
de°
,

246 
£ndèg
, 
sour˚
, 
ªcvèg
, 
mpi_comm
,

247 
MPI_STATUS_IGNORE
);

254 
ölöe
 
	gMPI
::
Group


255 
MPI
::
Comm
::
	$Gë_group
() const

257 
MPI_Group
 
group
;

258 ()
	`MPI_Comm_group
(
mpi_comm
, &
group
);

259  
group
;

260 
	}
}

262 
ölöe
 

263 
	gMPI
::
Comm
::
	$Gë_size
() const

265 
size
;

266 ()
	`MPI_Comm_size
 (
mpi_comm
, &
size
);

267  
size
;

268 
	}
}

270 
ölöe
 

271 
	gMPI
::
Comm
::
	$Gë_ønk
() const

273 
ønk
;

274 ()
	`MPI_Comm_ønk
 (
mpi_comm
, &
ønk
);

275  
ønk
;

276 
	}
}

278 
ölöe
 

279 
	gMPI
::
Comm
::
Com∑ª
(c⁄° 
MPI
::Comm & 
comm1
,

280 c⁄° 
MPI
::
Comm
 & 
comm2
)

282 
ªsu…
;

283 ()
MPI_Comm_com∑ª
(
comm1
, 
comm2
, &
ªsu…
);

284  
	gªsu…
;

287 
ölöe
 

288 
	gMPI
::
Comm
::
	$Fªe
()

290 ()
	`MPI_Comm_‰ì
(&
mpi_comm
);

291 
	}
}

293 
ölöe
 
boﬁ


294 
	gMPI
::
Comm
::
	$Is_öãr
() const

296 
t
;

297 ()
	`MPI_Comm_ã°_öãr
(
mpi_comm
, &
t
);

298  
	`OPAL_INT_TO_BOOL
(
t
);

299 
	}
}

306 
ölöe
 

307 
	gMPI
::
Comm
::
	$B¨rõr
() const

309 ()
	`MPI_B¨rõr
(
mpi_comm
);

310 
	}
}

312 
ölöe
 

313 
	gMPI
::
Comm
::
Bˇ°
(*
buf„r
, 
cou¡
,

314 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, 
roŸ
) const

316 ()
MPI_Bˇ°
(
buf„r
, 
cou¡
, 
d©©y≥
, 
roŸ
, 
mpi_comm
);

319 
ölöe
 

320 
	gMPI
::
Comm
::
G©hî
(c⁄° *
£ndbuf
, 
£ndcou¡
,

321 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
,

322 *
ªcvbuf
, 
ªcvcou¡
,

323 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const

325 ()
MPI_G©hî
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
, 
£ndty≥
,

326 
ªcvbuf
, 
ªcvcou¡
, 
ªcvty≥
, 
roŸ
, 
mpi_comm
);

329 
ölöe
 

330 
	gMPI
::
Comm
::
G©hîv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

331 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

332 c⁄° 
ªcvcou¡s
[], c⁄° 
di•ls
[],

333 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const

335 ()
MPI_G©hîv
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
, 
£ndty≥
,

336 
ªcvbuf
, 
c⁄°_ˇ°
<*>(
ªcvcou¡s
),

337 
c⁄°_ˇ°
<*>(
di•ls
),

338 
ªcvty≥
, 
roŸ
, 
mpi_comm
);

341 
ölöe
 

342 
	gMPI
::
Comm
::
Sˇâî
(c⁄° *
£ndbuf
, 
£ndcou¡
,

343 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
,

344 *
ªcvbuf
, 
ªcvcou¡
,

345 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const

347 ()
MPI_Sˇâî
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
, 
£ndty≥
,

348 
ªcvbuf
, 
ªcvcou¡
, 
ªcvty≥
, 
roŸ
, 
mpi_comm
);

351 
ölöe
 

352 
	gMPI
::
Comm
::
Sˇâîv
(c⁄° *
£ndbuf
, c⁄° 
£ndcou¡s
[],

353 c⁄° 
di•ls
[], c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
,

354 *
ªcvbuf
, 
ªcvcou¡
,

355 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
, 
roŸ
) const

357 ()
MPI_Sˇâîv
(
c⁄°_ˇ°
<*>(
£ndbuf
),

358 
c⁄°_ˇ°
<*>(
£ndcou¡s
),

359 
c⁄°_ˇ°
<*>(
di•ls
), 
£ndty≥
,

360 
ªcvbuf
, 
ªcvcou¡
, 
ªcvty≥
,

361 
roŸ
, 
mpi_comm
);

364 
ölöe
 

365 
	gMPI
::
Comm
::
AŒg©hî
(c⁄° *
£ndbuf
, 
£ndcou¡
,

366 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

367 
ªcvcou¡
, c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
) const

369 ()
MPI_AŒg©hî
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
,

370 
£ndty≥
, 
ªcvbuf
, 
ªcvcou¡
,

371 
ªcvty≥
, 
mpi_comm
);

374 
ölöe
 

375 
	gMPI
::
Comm
::
AŒg©hîv
(c⁄° *
£ndbuf
, 
£ndcou¡
,

376 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

377 c⁄° 
ªcvcou¡s
[], c⁄° 
di•ls
[],

378 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
) const

380 ()
MPI_AŒg©hîv
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
,

381 
£ndty≥
, 
ªcvbuf
,

382 
c⁄°_ˇ°
<*>(
ªcvcou¡s
),

383 
c⁄°_ˇ°
<*>(
di•ls
),

384 
ªcvty≥
, 
mpi_comm
);

387 
ölöe
 

388 
	gMPI
::
Comm
::
AŒtﬂŒ
(c⁄° *
£ndbuf
, 
£ndcou¡
,

389 c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
, *
ªcvbuf
,

390 
ªcvcou¡
, c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
) const

392 ()
MPI_AŒtﬂŒ
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
£ndcou¡
,

393 
£ndty≥
, 
ªcvbuf
, 
ªcvcou¡
,

394 
ªcvty≥
, 
mpi_comm
);

397 
ölöe
 

398 
	gMPI
::
Comm
::
AŒtﬂŒv
(c⁄° *
£ndbuf
, c⁄° 
£ndcou¡s
[],

399 c⁄° 
sdi•ls
[], c⁄° 
MPI
::
D©©y≥
 & 
£ndty≥
,

400 *
ªcvbuf
, c⁄° 
ªcvcou¡s
[],

401 c⁄° 
rdi•ls
[],

402 c⁄° 
MPI
::
D©©y≥
 & 
ªcvty≥
) const

404 ()
MPI_AŒtﬂŒv
(
c⁄°_ˇ°
<*>(
£ndbuf
),

405 
c⁄°_ˇ°
<*>(
£ndcou¡s
),

406 
c⁄°_ˇ°
<*>(
sdi•ls
), 
£ndty≥
, 
ªcvbuf
,

407 
c⁄°_ˇ°
<*>(
ªcvcou¡s
),

408 
c⁄°_ˇ°
<*>(
rdi•ls
),

409 
ªcvty≥
,
mpi_comm
);

412 
ölöe
 

413 
	gMPI
::
Comm
::
AŒtﬂŒw
(c⁄° *
£ndbuf
, c⁄° 
£ndcou¡s
[],

414 c⁄° 
sdi•ls
[], c⁄° 
MPI
::
D©©y≥
 
£ndty≥s
[],

415 *
ªcvbuf
, c⁄° 
ªcvcou¡s
[],

416 c⁄° 
rdi•ls
[],

417 c⁄° 
MPI
::
D©©y≥
 
ªcvty≥s
[]) const

419 c⁄° 
comm_size
 = 
Gë_size
();

420 
MPI_D©©y≥
 *c⁄° 
	gd©a_ty≥_tbl
 = 
√w
 MPI_D©©y≥ [2*
comm_size
];

424 
	gi_ønk
=0; i_ønk < 
	gcomm_size
; i_rank++) {

425 
	gd©a_ty≥_tbl
[
i_ønk
] = 
£ndty≥s
[i_rank];

426 
	gd©a_ty≥_tbl
[
i_ønk
 + 
comm_size
] = 
ªcvty≥s
[i_rank];

429 ()
MPI_AŒtﬂŒw
(
c⁄°_ˇ°
<*>(
£ndbuf
),

430 
c⁄°_ˇ°
<*>(
£ndcou¡s
),

431 
c⁄°_ˇ°
<*>(
sdi•ls
),

432 
d©a_ty≥_tbl
, 
ªcvbuf
,

433 
c⁄°_ˇ°
<*>(
ªcvcou¡s
),

434 
c⁄°_ˇ°
<*>(
rdi•ls
),

435 &
d©a_ty≥_tbl
[
comm_size
], 
mpi_comm
);

437 
	gdñëe
[] 
	gd©a_ty≥_tbl
;

440 
ölöe
 

441 
	gMPI
::
Comm
::
Redu˚
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

442 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, c⁄° MPI::
Op
& 
›
,

443 
roŸ
) const

445 ()
MPI_Redu˚
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
ªcvbuf
, 
cou¡
, 
d©©y≥
, 
›
, 
roŸ
, 
mpi_comm
);

448 
ölöe
 

449 
	gMPI
::
Comm
::
AŒªdu˚
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

450 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, c⁄° MPI::
Op
& 
›
) const

452 ()
MPI_AŒªdu˚
 (
c⁄°_ˇ°
<*>(
£ndbuf
), 
ªcvbuf
, 
cou¡
, 
d©©y≥
, 
›
, 
mpi_comm
);

455 
ölöe
 

456 
	gMPI
::
Comm
::
Redu˚_sˇâî
(c⁄° *
£ndbuf
, *
ªcvbuf
,

457 
ªcvcou¡s
[],

458 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
,

459 c⁄° 
MPI
::
Op
& 
›
) const

461 ()
MPI_Redu˚_sˇâî
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
ªcvbuf
, 
ªcvcou¡s
,

462 
d©©y≥
, 
›
, 
mpi_comm
);

469 
ölöe
 

470 
	gMPI
::
Comm
::
	$Disc⁄√˘
()

472 (Ë
	`MPI_Comm_disc⁄√˘
(&
mpi_comm
);

473 
	}
}

476 
ölöe
 
	gMPI
::
I¡îcomm


477 
MPI
::
Comm
::
	$Gë_∑ª¡
()

479 
MPI_Comm
 
∑ª¡
;

480 
	`MPI_Comm_gë_∑ª¡
(&
∑ª¡
);

481  
∑ª¡
;

482 
	}
}

485 
ölöe
 
	gMPI
::
I¡îcomm


486 
MPI
::
Comm
::
	$Joö
(c⁄° 
fd
)

488 
MPI_Comm
 
√wcomm
;

489 (Ë
	`MPI_Comm_joö
((Ë
fd
, &
√wcomm
);

490  
√wcomm
;

491 
	}
}

497 
ölöe
 

498 
	gMPI
::
Comm
::
	$Gë_«me
(* 
comm_«me
, & 
ªsu…Àn
) const

500 (Ë
	`MPI_Comm_gë_«me
(
mpi_comm
, 
comm_«me
, &
ªsu…Àn
);

501 
	}
}

503 
ölöe
 

504 
	gMPI
::
Comm
::
	$Së_«me
(c⁄° * 
comm_«me
)

506 (Ë
	`MPI_Comm_£t_«me
(
mpi_comm
, 
c⁄°_ˇ°
<*>(
comm_«me
));

507 
	}
}

513 
ölöe
 

514 
	gMPI
::
Comm
::
	$Gë_t›ﬁogy
() const

516 
°©us
;

517 ()
	`MPI_T›o_ã°
(
mpi_comm
, &
°©us
);

518  
°©us
;

519 
	}
}

525 
ölöe
 

526 
	gMPI
::
Comm
::
	$Ab‹t
(
îr‹code
)

528 ()
	`MPI_Ab‹t
(
mpi_comm
, 
îr‹code
);

529 
	}
}

537 
ölöe
 
	gMPI
::
Eºh™dÀr


538 
MPI
::
Comm
::
	$Gë_îrh™dÀr
() const

540  *
my_îrh™dÀr
;

541 
	}
}

543 
ölöe
 
	gMPI
::
Eºh™dÀr


544 
MPI
::
Comm
::
Cª©e_îrh™dÀr
(MPI::Comm::
_MPI2CPP_ERRHANDLERFN_
* 
fun˘i⁄
)

546 
MPI_Eºh™dÀr
 
îrh™dÀr
;

548 ()
MPI_Comm_¸óã_îrh™dÀr
((
MPI_H™dÀr_fun˘i⁄
*Ë
ompi_mpi_cxx_comm_îrh™dÀr_öãr˚±
,

549 &
îrh™dÀr
);

550 
	gMPI
::
Eºh™dÀr
 
ãmp
(
îrh™dÀr
);

551 
	gãmp
.
	gcomm_h™dÀr_‚
 = ((*)(
MPI
::
Comm
&, *, ...))
	gfun˘i⁄
;

552  
	gãmp
;

557 
ölöe
 

558 
	gMPI
::
Comm
::
Cª©e_keyvÆ
(
MPI
::Comm::
C›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

559 
MPI
::
Comm
::
Dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

560 * 
exåa_°©e
)

563  
do_¸óã_keyvÆ
(
NULL
, NULL,

564 
comm_c›y_©å_‚
, 
comm_dñëe_©å_‚
,

565 
exåa_°©e
);

570 
ölöe
 

571 
	gMPI
::
Comm
::
	$Cª©e_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

572 
MPI_Comm_dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

573 * 
exåa_°©e
)

576  
	`do_¸óã_keyvÆ
(
comm_c›y_©å_‚
, 
comm_dñëe_©å_‚
,

577 
NULL
, NULL,

578 
exåa_°©e
);

579 
	}
}

583 
ölöe
 

584 
	gMPI
::
Comm
::
Cª©e_keyvÆ
(
MPI
::Comm::
C›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

585 
MPI_Comm_dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

586 * 
exåa_°©e
)

589  
do_¸óã_keyvÆ
(
NULL
, 
comm_dñëe_©å_‚
,

590 
comm_c›y_©å_‚
, 
NULL
,

591 
exåa_°©e
);

596 
ölöe
 

597 
	gMPI
::
Comm
::
Cª©e_keyvÆ
(
MPI_Comm_c›y_©å_fun˘i⁄
* 
comm_c›y_©å_‚
,

598 
MPI
::
Comm
::
Dñëe_©å_fun˘i⁄
* 
comm_dñëe_©å_‚
,

599 * 
exåa_°©e
)

602  
do_¸óã_keyvÆ
(
comm_c›y_©å_‚
, 
NULL
,

603 
NULL
, 
comm_dñëe_©å_‚
,

604 
exåa_°©e
);

607 
ölöe
 

608 
	gMPI
::
Comm
::
	$Fªe_keyvÆ
(& 
comm_keyvÆ
)

610 (Ë
	`MPI_KeyvÆ_‰ì
(&
comm_keyvÆ
);

611 
	}
}

613 
ölöe
 

614 
	gMPI
::
Comm
::
	$Së_©å
(
comm_keyvÆ
, c⁄° * 
©åibuã_vÆ
) const

616 ()
	`MPI_Aâr_put
(
mpi_comm
, 
comm_keyvÆ
, (*Ë
©åibuã_vÆ
);

617 
	}
}

619 
ölöe
 
boﬁ


620 
	gMPI
::
Comm
::
	$Gë_©å
(
comm_keyvÆ
, * 
©åibuã_vÆ
) const

622 
Êag
;

623 ()
	`MPI_Aâr_gë
(
mpi_comm
, 
comm_keyvÆ
, 
©åibuã_vÆ
, &
Êag
);

624  
	`OPAL_INT_TO_BOOL
(
Êag
);

625 
	}
}

627 
ölöe
 

628 
	gMPI
::
Comm
::
	$Dñëe_©å
(
comm_keyvÆ
)

630 ()
	`MPI_Aâr_dñëe
(
mpi_comm
, 
comm_keyvÆ
);

631 
	}
}

633 
ölöe
 

634 
	gMPI
::
Comm
::
NULL_COPY_FN
(c⁄° 
MPI
::Comm& 
ﬁdcomm
, 
comm_keyvÆ
,

635 * 
exåa_°©e
, * 
©åibuã_vÆ_ö
,

636 * 
©åibuã_vÆ_out
, 
boﬁ
& 
Êag
)

638 #i‡
SIZEOF_BOOL
 !
SIZEOF_INT


639 
	gf
 = ()
Êag
;

640 
	gªt
;

641 i‡(
	gMPI_NULL_COPY_FN
 != 0) {

654 
MPI_C›y_fun˘i⁄
 *
°upid_compûî
 = 
MPI_NULL_COPY_FN
;

655 
	gªt
 = 
°upid_compûî
(
ﬁdcomm
, 
comm_keyvÆ
, 
exåa_°©e
, 
©åibuã_vÆ_ö
,

656 
©åibuã_vÆ_out
, &
f
);

657 
	gÊag
 = 
OPAL_INT_TO_BOOL
(
f
);

659 
	gªt
 = 
MPI_SUCCESS
;

660 
	gÊag
 = 
åue
;

662  
	gªt
;

664 i‡(
	gMPI_NULL_COPY_FN
 != 0) {

668 
MPI_C›y_fun˘i⁄
 *
°upid_compûî
 = 
MPI_NULL_COPY_FN
;

669  
°upid_compûî
(
ﬁdcomm
, 
comm_keyvÆ
, 
exåa_°©e
,

670 
©åibuã_vÆ_ö
, 
©åibuã_vÆ_out
, (*)&
Êag
);

672  
	gMPI_SUCCESS
;

676 
ölöe
 

677 
	gMPI
::
Comm
::
DUP_FN
(c⁄° 
MPI
::Comm& 
ﬁdcomm
, 
comm_keyvÆ
,

678 * 
exåa_°©e
, * 
©åibuã_vÆ_ö
,

679 * 
©åibuã_vÆ_out
, 
boﬁ
& 
Êag
)

681 #i‡
SIZEOF_BOOL
 !
SIZEOF_INT


682 
	gf
 = ()
Êag
;

683 
	gªt
;

684 
	gªt
 = 
MPI_DUP_FN
(
ﬁdcomm
, 
comm_keyvÆ
, 
exåa_°©e
, 
©åibuã_vÆ_ö
,

685 
©åibuã_vÆ_out
, &
f
);

686 
	gÊag
 = 
OPAL_INT_TO_BOOL
(
f
);

687  
	gªt
;

689  
MPI_DUP_FN
(
ﬁdcomm
, 
comm_keyvÆ
, 
exåa_°©e
, 
©åibuã_vÆ_ö
,

690 
©åibuã_vÆ_out
, (*)&
Êag
);

694 
ölöe
 

695 
	gMPI
::
Comm
::
NULL_DELETE_FN
(
MPI
::Comm& 
comm
, 
comm_keyvÆ
, * 
©åibuã_vÆ
,

696 * 
exåa_°©e
)

698 i‡(
	gMPI_NULL_DELETE_FN
 != 0) {

702 
MPI_Dñëe_fun˘i⁄
 *
°upid_compûî
 = 
MPI_NULL_DELETE_FN
;

703  
°upid_compûî
(
comm
, 
comm_keyvÆ
, 
©åibuã_vÆ
, 
exåa_°©e
);

705  
	gMPI_SUCCESS
;

	@/usr/include/openmpi/ompi/mpi/cxx/constants.h

22 
OMPI_DECLSPEC
 c⁄° 
SUCCESS
;

23 
OMPI_DECLSPEC
 c⁄° 
ERR_BUFFER
;

24 
OMPI_DECLSPEC
 c⁄° 
ERR_COUNT
;

25 
OMPI_DECLSPEC
 c⁄° 
ERR_TYPE
;

26 
OMPI_DECLSPEC
 c⁄° 
ERR_TAG
 ;

27 
OMPI_DECLSPEC
 c⁄° 
ERR_COMM
;

28 
OMPI_DECLSPEC
 c⁄° 
ERR_RANK
;

29 
OMPI_DECLSPEC
 c⁄° 
ERR_REQUEST
;

30 
OMPI_DECLSPEC
 c⁄° 
ERR_ROOT
;

31 
OMPI_DECLSPEC
 c⁄° 
ERR_GROUP
;

32 
OMPI_DECLSPEC
 c⁄° 
ERR_OP
;

33 
OMPI_DECLSPEC
 c⁄° 
ERR_TOPOLOGY
;

34 
OMPI_DECLSPEC
 c⁄° 
ERR_DIMS
;

35 
OMPI_DECLSPEC
 c⁄° 
ERR_ARG
;

36 
OMPI_DECLSPEC
 c⁄° 
ERR_UNKNOWN
;

37 
OMPI_DECLSPEC
 c⁄° 
ERR_TRUNCATE
;

38 
OMPI_DECLSPEC
 c⁄° 
ERR_OTHER
;

39 
OMPI_DECLSPEC
 c⁄° 
ERR_INTERN
;

40 
OMPI_DECLSPEC
 c⁄° 
ERR_PENDING
;

41 
OMPI_DECLSPEC
 c⁄° 
ERR_IN_STATUS
;

42 
OMPI_DECLSPEC
 c⁄° 
ERR_LASTCODE
;

44 
OMPI_DECLSPEC
 c⁄° 
ERR_BASE
;

45 
OMPI_DECLSPEC
 c⁄° 
ERR_INFO_VALUE
;

46 
OMPI_DECLSPEC
 c⁄° 
ERR_INFO_KEY
;

47 
OMPI_DECLSPEC
 c⁄° 
ERR_INFO_NOKEY
;

48 
OMPI_DECLSPEC
 c⁄° 
ERR_KEYVAL
;

49 
OMPI_DECLSPEC
 c⁄° 
ERR_NAME
;

50 
OMPI_DECLSPEC
 c⁄° 
ERR_NO_MEM
;

51 
OMPI_DECLSPEC
 c⁄° 
ERR_SERVICE
;

52 
OMPI_DECLSPEC
 c⁄° 
ERR_SPAWN
;

53 
OMPI_DECLSPEC
 c⁄° 
ERR_WIN
;

57 
OMPI_DECLSPEC
 c⁄° * 
BOTTOM
;

58 
OMPI_DECLSPEC
 c⁄° * 
IN_PLACE
;

59 
OMPI_DECLSPEC
 c⁄° 
PROC_NULL
;

60 
OMPI_DECLSPEC
 c⁄° 
ANY_SOURCE
;

61 
OMPI_DECLSPEC
 c⁄° 
ROOT
;

62 
OMPI_DECLSPEC
 c⁄° 
ANY_TAG
;

63 
OMPI_DECLSPEC
 c⁄° 
UNDEFINED
;

64 
OMPI_DECLSPEC
 c⁄° 
BSEND_OVERHEAD
;

65 
OMPI_DECLSPEC
 c⁄° 
KEYVAL_INVALID
;

66 
OMPI_DECLSPEC
 c⁄° 
ORDER_C
;

67 
OMPI_DECLSPEC
 c⁄° 
ORDER_FORTRAN
;

68 
OMPI_DECLSPEC
 c⁄° 
DISTRIBUTE_BLOCK
;

69 
OMPI_DECLSPEC
 c⁄° 
DISTRIBUTE_CYCLIC
;

70 
OMPI_DECLSPEC
 c⁄° 
DISTRIBUTE_NONE
;

71 
OMPI_DECLSPEC
 c⁄° 
DISTRIBUTE_DFLT_DARG
;

74 
OMPI_DECLSPEC
 c⁄° 
Eºh™dÀr
 
ERRORS_ARE_FATAL
;

75 
OMPI_DECLSPEC
 c⁄° 
Eºh™dÀr
 
ERRORS_RETURN
;

76 
OMPI_DECLSPEC
 c⁄° 
Eºh™dÀr
 
ERRORS_THROW_EXCEPTIONS
;

79 
OMPI_DECLSPEC
 c⁄° 
TYPECLASS_INTEGER
;

80 
OMPI_DECLSPEC
 c⁄° 
TYPECLASS_REAL
;

81 
OMPI_DECLSPEC
 c⁄° 
TYPECLASS_COMPLEX
;

84 
OMPI_DECLSPEC
 c⁄° 
MAX_PROCESSOR_NAME
;

85 
OMPI_DECLSPEC
 c⁄° 
MAX_ERROR_STRING
;

86 
OMPI_DECLSPEC
 c⁄° 
MAX_INFO_KEY
;

87 
OMPI_DECLSPEC
 c⁄° 
MAX_INFO_VAL
;

88 
OMPI_DECLSPEC
 c⁄° 
MAX_PORT_NAME
;

89 
OMPI_DECLSPEC
 c⁄° 
MAX_OBJECT_NAME
;

92 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
CHAR
;

93 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
SHORT
;

94 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
INT
;

95 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LONG
;

96 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
SIGNED_CHAR
;

97 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
UNSIGNED_CHAR
;

98 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
UNSIGNED_SHORT
;

99 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
UNSIGNED
;

100 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
UNSIGNED_LONG
;

101 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
FLOAT
;

102 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
DOUBLE
;

103 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LONG_DOUBLE
;

104 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
BYTE
;

105 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
PACKED
;

106 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
WCHAR
;

109 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
FLOAT_INT
;

110 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
DOUBLE_INT
;

111 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LONG_INT
;

112 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
TWOINT
;

113 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
SHORT_INT
;

114 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LONG_DOUBLE_INT
;

117 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
INTEGER
;

118 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
REAL
;

119 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
DOUBLE_PRECISION
;

120 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
F_COMPLEX
;

121 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LOGICAL
;

122 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
CHARACTER
;

125 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
TWOREAL
;

126 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
TWODOUBLE_PRECISION
;

127 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
TWOINTEGER
;

130 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
INTEGER1
;

131 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
INTEGER2
;

132 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
INTEGER4
;

133 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
REAL2
;

134 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
REAL4
;

135 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
REAL8
;

138 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LONG_LONG
;

139 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
UNSIGNED_LONG_LONG
;

142 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
BOOL
;

143 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
COMPLEX
;

144 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
DOUBLE_COMPLEX
;

145 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LONG_DOUBLE_COMPLEX
;

148 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
UB
;

149 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
LB
;

152 
OMPI_DECLSPEC
 c⁄° 
COMBINER_NAMED
;

153 
OMPI_DECLSPEC
 c⁄° 
COMBINER_DUP
;

154 
OMPI_DECLSPEC
 c⁄° 
COMBINER_CONTIGUOUS
;

155 
OMPI_DECLSPEC
 c⁄° 
COMBINER_VECTOR
;

156 
OMPI_DECLSPEC
 c⁄° 
COMBINER_HVECTOR_INTEGER
;

157 
OMPI_DECLSPEC
 c⁄° 
COMBINER_HVECTOR
;

158 
OMPI_DECLSPEC
 c⁄° 
COMBINER_INDEXED
;

159 
OMPI_DECLSPEC
 c⁄° 
COMBINER_HINDEXED_INTEGER
;

160 
OMPI_DECLSPEC
 c⁄° 
COMBINER_HINDEXED
;

161 
OMPI_DECLSPEC
 c⁄° 
COMBINER_INDEXED_BLOCK
;

162 
OMPI_DECLSPEC
 c⁄° 
COMBINER_STRUCT_INTEGER
;

163 
OMPI_DECLSPEC
 c⁄° 
COMBINER_STRUCT
;

164 
OMPI_DECLSPEC
 c⁄° 
COMBINER_SUBARRAY
;

165 
OMPI_DECLSPEC
 c⁄° 
COMBINER_DARRAY
;

166 
OMPI_DECLSPEC
 c⁄° 
COMBINER_F90_REAL
;

167 
OMPI_DECLSPEC
 c⁄° 
COMBINER_F90_COMPLEX
;

168 
OMPI_DECLSPEC
 c⁄° 
COMBINER_F90_INTEGER
;

169 
OMPI_DECLSPEC
 c⁄° 
COMBINER_RESIZED
;

172 
OMPI_DECLSPEC
 c⁄° 
THREAD_SINGLE
;

173 
OMPI_DECLSPEC
 c⁄° 
THREAD_FUNNELED
;

174 
OMPI_DECLSPEC
 c⁄° 
THREAD_SERIALIZED
;

175 
OMPI_DECLSPEC
 c⁄° 
THREAD_MULTIPLE
;

179 
OMPI_DECLSPEC
 
I¡øcomm
 
COMM_WORLD
;

180 
OMPI_DECLSPEC
 
I¡øcomm
 
COMM_SELF
;

183 
OMPI_DECLSPEC
 c⁄° 
IDENT
;

184 
OMPI_DECLSPEC
 c⁄° 
CONGRUENT
;

185 
OMPI_DECLSPEC
 c⁄° 
SIMILAR
;

186 
OMPI_DECLSPEC
 c⁄° 
UNEQUAL
;

189 
OMPI_DECLSPEC
 c⁄° 
TAG_UB
;

190 
OMPI_DECLSPEC
 c⁄° 
HOST
;

191 
OMPI_DECLSPEC
 c⁄° 
IO
;

192 
OMPI_DECLSPEC
 c⁄° 
WTIME_IS_GLOBAL
;

193 
OMPI_DECLSPEC
 c⁄° 
APPNUM
;

194 
OMPI_DECLSPEC
 c⁄° 
LASTUSEDCODE
;

195 
OMPI_DECLSPEC
 c⁄° 
UNIVERSE_SIZE
;

196 
OMPI_DECLSPEC
 c⁄° 
WIN_BASE
;

197 
OMPI_DECLSPEC
 c⁄° 
WIN_SIZE
;

198 
OMPI_DECLSPEC
 c⁄° 
WIN_DISP_UNIT
;

201 
OMPI_DECLSPEC
 c⁄° 
Op
 
MAX
;

202 
OMPI_DECLSPEC
 c⁄° 
Op
 
MIN
;

203 
OMPI_DECLSPEC
 c⁄° 
Op
 
SUM
;

204 
OMPI_DECLSPEC
 c⁄° 
Op
 
PROD
;

205 
OMPI_DECLSPEC
 c⁄° 
Op
 
MAXLOC
;

206 
OMPI_DECLSPEC
 c⁄° 
Op
 
MINLOC
;

207 
OMPI_DECLSPEC
 c⁄° 
Op
 
BAND
;

208 
OMPI_DECLSPEC
 c⁄° 
Op
 
BOR
;

209 
OMPI_DECLSPEC
 c⁄° 
Op
 
BXOR
;

210 
OMPI_DECLSPEC
 c⁄° 
Op
 
LAND
;

211 
OMPI_DECLSPEC
 c⁄° 
Op
 
LOR
;

212 
OMPI_DECLSPEC
 c⁄° 
Op
 
LXOR
;

213 
OMPI_DECLSPEC
 c⁄° 
Op
 
REPLACE
;

216 
OMPI_DECLSPEC
 c⁄° 
Group
 
GROUP_NULL
;

217 
OMPI_DECLSPEC
 c⁄° 
Wö
 
WIN_NULL
;

218 
OMPI_DECLSPEC
 c⁄° 
Info
 
INFO_NULL
;

221 
OMPI_DECLSPEC
 
Comm_NuŒ
 
COMM_NULL
;

222 
OMPI_DECLSPEC
 c⁄° 
D©©y≥
 
DATATYPE_NULL
;

223 
OMPI_DECLSPEC
 
Reque°
 
REQUEST_NULL
;

224 
OMPI_DECLSPEC
 c⁄° 
Op
 
OP_NULL
;

225 
OMPI_DECLSPEC
 c⁄° 
Eºh™dÀr
 
ERRHANDLER_NULL
;

226 
OMPI_DECLSPEC
 c⁄° 
Fûe
 
FILE_NULL
;

229 
OMPI_DECLSPEC
 c⁄° ** 
ARGV_NULL
;

230 
OMPI_DECLSPEC
 c⁄° *** 
ARGVS_NULL
;

233 
OMPI_DECLSPEC
 c⁄° 
Group
 
GROUP_EMPTY
;

236 
OMPI_DECLSPEC
 c⁄° 
GRAPH
;

237 
OMPI_DECLSPEC
 c⁄° 
CART
;

240 
OMPI_DECLSPEC
 c⁄° 
MODE_CREATE
;

241 
OMPI_DECLSPEC
 c⁄° 
MODE_RDONLY
;

242 
OMPI_DECLSPEC
 c⁄° 
MODE_WRONLY
;

243 
OMPI_DECLSPEC
 c⁄° 
MODE_RDWR
;

244 
OMPI_DECLSPEC
 c⁄° 
MODE_DELETE_ON_CLOSE
;

245 
OMPI_DECLSPEC
 c⁄° 
MODE_UNIQUE_OPEN
;

246 
OMPI_DECLSPEC
 c⁄° 
MODE_EXCL
;

247 
OMPI_DECLSPEC
 c⁄° 
MODE_APPEND
;

248 
OMPI_DECLSPEC
 c⁄° 
MODE_SEQUENTIAL
;

250 
OMPI_DECLSPEC
 c⁄° 
DISPLACEMENT_CURRENT
;

252 #i‡!
deföed
(
OMPI_IGNORE_CXX_SEEK
Ë&& 
OMPI_WANT_MPI_CXX_SEEK


253 
OMPI_DECLSPEC
 c⁄° 
SEEK_SET
;

254 
OMPI_DECLSPEC
 c⁄° 
SEEK_CUR
;

255 
OMPI_DECLSPEC
 c⁄° 
SEEK_END
;

258 
OMPI_DECLSPEC
 c⁄° 
MAX_DATAREP_STRING
;

261 
OMPI_DECLSPEC
 c⁄° 
MODE_NOCHECK
;

262 
OMPI_DECLSPEC
 c⁄° 
MODE_NOPRECEDE
;

263 
OMPI_DECLSPEC
 c⁄° 
MODE_NOPUT
;

264 
OMPI_DECLSPEC
 c⁄° 
MODE_NOSTORE
;

265 
OMPI_DECLSPEC
 c⁄° 
MODE_NOSUCCEED
;

267 
OMPI_DECLSPEC
 c⁄° 
LOCK_EXCLUSIVE
;

268 
OMPI_DECLSPEC
 c⁄° 
LOCK_SHARED
;

	@/usr/include/openmpi/ompi/mpi/cxx/datatype.h

23 ˛as†
	cD©©y≥
 {

27 
	mpublic
:

32 
ölöe
 
	$D©©y≥
() { }

35 
ölöe
 
	$D©©y≥
(
MPI_D©©y≥
 
i
Ë: 
	$pmpi_d©©y≥
(
i
Ë{ 
	}
}

38 
ölöe
 
	$D©©y≥
(c⁄° 
D©©y≥
& 
dt
Ë: 
	$pmpi_d©©y≥
(
dt
.
pmpi_d©©y≥
Ë{ 
	}
}

40 
ölöe
 
D©©y≥
(c⁄° 
PMPI
::D©©y≥& 
dt
Ë: 
	$pmpi_d©©y≥
(
dt
Ë{ 
	}
}

42 
ölöe
 
vútuÆ
 ~
	$D©©y≥
(Ë{
	}
}

44 
ölöe
 
D©©y≥
& 
›î©‹
=(c⁄° D©©y≥& 
dt
) {

45 
pmpi_d©©y≥
 = 
dt
.pmpi_d©©y≥;  *
	gthis
; }

48 
ölöe
 
boﬁ
 
	g›î©‹
=(c⁄° 
D©©y≥
 &
a
) const

49 {  (
boﬁ
Ë(
pmpi_d©©y≥
 =
a
.pmpi_datatype); }

51 
ölöe
 
boﬁ
 
	g›î©‹
!(c⁄° 
D©©y≥
 &
a
) const

52 {  (
boﬁ
Ë!(*
this
 =
a
); }

55 
ölöe
 
	gD©©y≥
& 
	g›î©‹
(c⁄° 
MPI_D©©y≥
 &
i
)

56 { 
pmpi_d©©y≥
 = 
i
;  *
	gthis
; }

58 
ölöe
 
›î©‹
 
	$MPI_D©©y≥
(Ëc⁄° {  (
MPI_D©©y≥
)
pmpi_d©©y≥
; 
	}
}

61 
ölöe
 
›î©‹
 c⁄° 
	gPMPI
::
D©©y≥
&(Ëc⁄° {  
pmpi_d©©y≥
; }

63 
ölöe
 c⁄° 
	gPMPI
::
D©©y≥
& 
	$pmpi
(Ëc⁄° {  
pmpi_d©©y≥
; 
	}
}

68 
ölöe
 
	$D©©y≥
(Ë: 
	$mpi_d©©y≥
(
MPI_DATATYPE_NULL
Ë{ 
	}
}

69 
ölöe
 
vútuÆ
 ~
	$D©©y≥
(Ë{
	}
}

71 
ölöe
 
	$D©©y≥
(
MPI_D©©y≥
 
i
Ë: 
	$mpi_d©©y≥
(
i
Ë{ 
	}
}

74 
ölöe
 
	$D©©y≥
(c⁄° 
D©©y≥
& 
dt
Ë: 
	$mpi_d©©y≥
(
dt
.
mpi_d©©y≥
Ë{ 
	}
}

75 
ölöe
 
D©©y≥
& 
›î©‹
=(c⁄° D©©y≥& 
dt
) {

76 
mpi_d©©y≥
 = 
dt
.mpi_d©©y≥;  *
	gthis
; }

79 
ölöe
 
boﬁ
 
	g›î©‹
=(c⁄° 
D©©y≥
 &
a
) const

80 {  (
boﬁ
Ë(
mpi_d©©y≥
 =
a
.mpi_datatype); }

82 
ölöe
 
boﬁ
 
	g›î©‹
!(c⁄° 
D©©y≥
 &
a
) const

83 {  (
boﬁ
Ë!(*
this
 =
a
); }

86 
ölöe
 
	gD©©y≥
& 
	g›î©‹
(c⁄° 
MPI_D©©y≥
 &
i
)

87 { 
mpi_d©©y≥
 = 
i
;  *
	gthis
; }

89 
ölöe
 
›î©‹
 
	$MPI_D©©y≥
 (Ëc⁄° {  
mpi_d©©y≥
; 
	}
}

97 
	tC›y_©å_fun˘i⁄
(c⁄° 
	tD©©y≥
& 
	tﬁdty≥
,

98 
	tty≥_keyvÆ
,

99 * 
	texåa_°©e
,

100 c⁄° * 
	t©åibuã_vÆ_ö
,

101 * 
	t©åibuã_vÆ_out
,

102 
	tboﬁ
& 
	tÊag
);

104 
	tDñëe_©å_fun˘i⁄
(
	tD©©y≥
& 
	tty≥
, 
	tty≥_keyvÆ
,

105 * 
	t©åibuã_vÆ
, * 
	texåa_°©e
);

111 
vútuÆ
 
D©©y≥
 
	$Cª©e_c⁄tiguous
(
cou¡
) const;

113 
vútuÆ
 
D©©y≥
 
	$Cª©e_ve˘‹
(
cou¡
, 
blockÀngth
,

114 
°ride
) const;

116 
vútuÆ
 
D©©y≥
 
	$Cª©e_ödexed
(
cou¡
,

117 c⁄° 
¨øy_of_blockÀngths
[],

118 c⁄° 
¨øy_of_di•œ˚míts
[]) const;

120 
D©©y≥
 
	`Cª©e_°ru˘
(
cou¡
, c⁄° 
¨øy_of_blockÀngths
[],

121 c⁄° 
Aöt
 
¨øy_of_di•œ˚míts
[],

122 c⁄° 
D©©y≥
 
¨øy_if_ty≥s
[]);

124 
vútuÆ
 
D©©y≥
 
	$Cª©e_hödexed
(
cou¡
, c⁄° 
¨øy_of_blockÀngths
[],

125 c⁄° 
Aöt
 
¨øy_of_di•œ˚míts
[]) const;

127 
vútuÆ
 
D©©y≥
 
	$Cª©e_hve˘‹
(
cou¡
, 
blockÀngth
, 
Aöt
 
°ride
) const;

129 
vútuÆ
 
D©©y≥
 
	$Cª©e_ödexed_block
(
cou¡
, 
blockÀngth
,

130 c⁄° 
¨øy_of_blockÀngths
[]) const;

131 
vútuÆ
 
D©©y≥
 
	$Cª©e_ªsized
(c⁄° 
Aöt
 
lb
, c⁄° Aöà
exã¡
) const;

133 
vútuÆ
 
	$Gë_size
() const;

135 
vútuÆ
 
	$Gë_exã¡
(
Aöt
& 
lb
, Aöt& 
exã¡
) const;

137 
vútuÆ
 
	$Gë_åue_exã¡
(
Aöt
&, Aint&) const;

139 
vútuÆ
 
	`Commô
();

141 
vútuÆ
 
	`Fªe
();

143 
vútuÆ
 
	$Pack
(c⁄° * 
öbuf
, 
öcou¡
, *
outbuf
,

144 
outsize
, & 
posôi⁄
, c⁄° 
Comm
 &
comm
) const;

146 
vútuÆ
 
	$U≈ack
(c⁄° * 
öbuf
, 
ösize
, *
outbuf
, 
outcou¡
,

147 & 
posôi⁄
, c⁄° 
Comm
& 
comm
) const;

149 
vútuÆ
 
	$Pack_size
(
öcou¡
, c⁄° 
Comm
& 
comm
) const;

154 
vútuÆ
 
D©©y≥
 
	$Cª©e_sub¨øy
(
ndims
, c⁄° 
¨øy_of_sizes
[],

155 c⁄° 
¨øy_of_subsizes
[],

156 c⁄° 
¨øy_of_°¨ts
[], 
‹dî
)

163 
vútuÆ
 
D©©y≥
 
	$Dup
() const;

168 
	`Cª©e_keyvÆ
(
C›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

169 
Dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

170 * 
exåa_°©e
);

171 
	`Cª©e_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

172 
MPI_Ty≥_dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

173 * 
exåa_°©e
);

174 
	`Cª©e_keyvÆ
(
C›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

175 
MPI_Ty≥_dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

176 * 
exåa_°©e
);

177 
	`Cª©e_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

178 
Dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

179 * 
exåa_°©e
);

181 
¥Ÿe˘ed
:

184 
	`do_¸óã_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
* 
c_c›y_‚
,

185 
MPI_Ty≥_dñëe_©å_fun˘i⁄
* 
c_dñëe_‚
,

186 
C›y_©å_fun˘i⁄
* 
cxx_c›y_‚
,

187 
Dñëe_©å_fun˘i⁄
* 
cxx_dñëe_‚
,

188 * 
exåa_°©e
);

190 
public
:

192 
vútuÆ
 
	`Dñëe_©å
(
ty≥_keyvÆ
);

194 
	`Fªe_keyvÆ
(& 
ty≥_keyvÆ
);

196 
vútuÆ
 
boﬁ
 
	$Gë_©å
(
ty≥_keyvÆ
, * 
©åibuã_vÆ
) const;

198 
vútuÆ
 
	$Gë_c⁄ã¡s
(
max_öãgîs
, 
max_addªs£s
,

199 
max_d©©y≥s
, 
¨øy_of_öãgîs
[],

200 
Aöt
 
¨øy_of_addªs£s
[],

201 
D©©y≥
 
¨øy_of_d©©y≥s
[]) const;

203 
vútuÆ
 
	$Gë_ívñ›e
(& 
num_öãgîs
, & 
num_addªs£s
,

204 & 
num_d©©y≥s
, & 
comböî
) const;

206 
vútuÆ
 
	$Gë_«me
(* 
ty≥_«me
, & 
ªsu…Àn
) const;

208 
vútuÆ
 
	`Së_©å
(
ty≥_keyvÆ
, c⁄° * 
©åibuã_vÆ
);

210 
vútuÆ
 
	`Së_«me
(c⁄° * 
ty≥_«me
);

215 
¥iv©e
:

216 
PMPI
::
D©©y≥
 
pmpi_d©©y≥
;

218 
¥Ÿe˘ed
:

219 
MPI_D©©y≥
 
mpi_d©©y≥
;

222 
public
:

223 ::
°d
::
	tm≠
<
	tMPI_D©©y≥
, 
	tD©©y≥
*> 
	tmpi_ty≥_m≠_t
;

224 
mpi_ty≥_m≠_t
 
mpi_ty≥_m≠
;

226 ::
°d
::
	t∑ú
<
	tD©©y≥
::
	tC›y_©å_fun˘i⁄
*, D©©y≥::
	tDñëe_©å_fun˘i⁄
*> 
	tkeyvÆ_∑ú_t
;

227 ::
°d
::
	tm≠
<, 
	tkeyvÆ_∑ú_t
*> 
	tmpi_ty≥_keyvÆ_‚_m≠_t
;

228 
mpi_ty≥_keyvÆ_‚_m≠_t
 
mpi_ty≥_keyvÆ_‚_m≠
;

229 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/datatype_inln.h

27 
ölöe
 
	gMPI
::
D©©y≥


28 
MPI
::
D©©y≥
::
	$Cª©e_c⁄tiguous
(
cou¡
) const

30 
MPI_D©©y≥
 
√wty≥
;

31 ()
	`MPI_Ty≥_c⁄tiguous
(
cou¡
, 
mpi_d©©y≥
, &
√wty≥
);

32  
√wty≥
;

33 
	}
}

35 
ölöe
 
	gMPI
::
D©©y≥


36 
MPI
::
D©©y≥
::
	$Cª©e_ve˘‹
(
cou¡
, 
blockÀngth
,

37 
°ride
) const

39 
MPI_D©©y≥
 
√wty≥
;

40 ()
	`MPI_Ty≥_ve˘‹
(
cou¡
, 
blockÀngth
, 
°ride
, 
mpi_d©©y≥
, &
√wty≥
);

41  
√wty≥
;

42 
	}
}

44 
ölöe
 
	gMPI
::
D©©y≥


45 
MPI
::
D©©y≥
::
	$Cª©e_ödexed
(
cou¡
,

46 c⁄° 
¨øy_of_blockÀngths
[],

47 c⁄° 
¨øy_of_di•œ˚míts
[]) const

49 
MPI_D©©y≥
 
√wty≥
;

50 ()
	`MPI_Ty≥_ödexed
(
cou¡
, 
c⁄°_ˇ°
<*>(
¨øy_of_blockÀngths
),

51 
c⁄°_ˇ°
<*>(
¨øy_of_di•œ˚míts
), 
mpi_d©©y≥
, &
√wty≥
);

52  
√wty≥
;

53 
	}
}

55 
ölöe
 
	gMPI
::
D©©y≥


56 
MPI
::
D©©y≥
::
Cª©e_°ru˘
(
cou¡
, c⁄° 
¨øy_of_blockÀngths
[],

57 c⁄° 
MPI
::
Aöt
 
¨øy_of_di•œ˚míts
[],

58 c⁄° 
MPI
::
D©©y≥
 
¨øy_of_ty≥s
[])

60 
MPI_D©©y≥
 
√wty≥
;

61 
	gi
;

62 
MPI_D©©y≥
* 
	gty≥_¨øy
 = 
√w
 MPI_D©©y≥[
cou¡
];

63 
	gi
=0; i < 
	gcou¡
; i++)

64 
	gty≥_¨øy
[
i
] = 
¨øy_of_ty≥s
[i];

66 ()
MPI_Ty≥_¸óã_°ru˘
(
cou¡
, 
c⁄°_ˇ°
<*>(
¨øy_of_blockÀngths
),

67 
c⁄°_ˇ°
<
MPI_Aöt
*>(
¨øy_of_di•œ˚míts
),

68 
ty≥_¨øy
, &
√wty≥
);

69 
	gdñëe
[] 
	gty≥_¨øy
;

70  
	g√wty≥
;

73 
ölöe
 
	gMPI
::
D©©y≥


74 
MPI
::
D©©y≥
::
Cª©e_hödexed
(
cou¡
, c⁄° 
¨øy_of_blockÀngths
[],

75 c⁄° 
MPI
::
Aöt
 
¨øy_of_di•œ˚míts
[]) const

77 
MPI_D©©y≥
 
√wty≥
;

78 ()
MPI_Ty≥_¸óã_hödexed
(
cou¡
, 
c⁄°_ˇ°
<*>(
¨øy_of_blockÀngths
),

79 
c⁄°_ˇ°
<
MPI_Aöt
*>(
¨øy_of_di•œ˚míts
),

80 
mpi_d©©y≥
, &
√wty≥
) ;

81  
	g√wty≥
;

84 
ölöe
 
	gMPI
::
D©©y≥


85 
MPI
::
D©©y≥
::
Cª©e_hve˘‹
(
cou¡
, 
blockÀngth
,

86 
MPI
::
Aöt
 
°ride
) const

88 
MPI_D©©y≥
 
√wty≥
;

89 ()
MPI_Ty≥_¸óã_hve˘‹
(
cou¡
, 
blockÀngth
, (
MPI_Aöt
)
°ride
,

90 
mpi_d©©y≥
, &
√wty≥
);

92  
	g√wty≥
;

95 
ölöe
 
	gMPI
::
D©©y≥


96 
MPI
::
D©©y≥
::
	$Cª©e_ödexed_block
(
cou¡
, 
blockÀngth
,

97 c⁄° 
¨øy_of_di•œ˚míts
[]) const

99 
MPI_D©©y≥
 
√wty≥
;

100 ()
	`MPI_Ty≥_¸óã_ödexed_block
(
cou¡
, 
blockÀngth
, 
c⁄°_ˇ°
<*>(
¨øy_of_di•œ˚míts
),

101 
mpi_d©©y≥
, &
√wty≥
);

102  
√wty≥
;

103 
	}
}

105 
ölöe
 
	gMPI
::
D©©y≥


106 
MPI
::
D©©y≥
::
Cª©e_ªsized
(c⁄° MPI::
Aöt
 
lb
, c⁄° MPI::Aöà
exã¡
) const

108 
MPI_D©©y≥
 
√wty≥
;

110 (Ë
MPI_Ty≥_¸óã_ªsized
(
mpi_d©©y≥
, 
lb
, 
exã¡
, &
√wty≥
);

111 (
	g√wty≥
);

114 
ölöe
 

115 
	gMPI
::
D©©y≥
::
	$Gë_size
() const

117 
size
;

118 ()
	`MPI_Ty≥_size
(
mpi_d©©y≥
, &
size
);

119  
size
;

120 
	}
}

122 
ölöe
 

123 
	gMPI
::
D©©y≥
::
Gë_exã¡
(
MPI
::
Aöt
& 
lb
, MPI::Aöt& 
exã¡
) const

125 ()
MPI_Ty≥_gë_exã¡
(
mpi_d©©y≥
, &
lb
, &
exã¡
);

128 
ölöe
 

129 
	gMPI
::
D©©y≥
::
Gë_åue_exã¡
(
MPI
::
Aöt
& 
lb
, MPI::Aöt& 
exã¡
) const

131 (Ë
MPI_Ty≥_gë_åue_exã¡
(
mpi_d©©y≥
, &
lb
, &
exã¡
);

134 
ölöe
 

135 
	gMPI
::
D©©y≥
::
	$Commô
()

137 ()
	`MPI_Ty≥_commô
(&
mpi_d©©y≥
);

138 
	}
}

140 
ölöe
 

141 
	gMPI
::
D©©y≥
::
Pack
(c⁄° * 
öbuf
, 
öcou¡
,

142 *
outbuf
, 
outsize
,

143 & 
posôi⁄
, c⁄° 
MPI
::
Comm
 &
comm
) const

145 ()
MPI_Pack
(
c⁄°_ˇ°
<*>(
öbuf
), 
öcou¡
, 
mpi_d©©y≥
, 
outbuf
,

146 
outsize
, &
posôi⁄
, 
comm
);

149 
ölöe
 

150 
	gMPI
::
D©©y≥
::
U≈ack
(c⁄° * 
öbuf
, 
ösize
,

151 *
outbuf
, 
outcou¡
, & 
posôi⁄
,

152 c⁄° 
MPI
::
Comm
& 
comm
) const

154 ()
MPI_U≈ack
(
c⁄°_ˇ°
<*>(
öbuf
), 
ösize
, &
posôi⁄
,

155 
outbuf
, 
outcou¡
, 
mpi_d©©y≥
, 
comm
);

158 
ölöe
 

159 
	gMPI
::
D©©y≥
::
Pack_size
(
öcou¡
, c⁄° 
MPI
::
Comm
& 
comm
) const

161 
size
;

162 ()
MPI_Pack_size
(
öcou¡
, 
mpi_d©©y≥
, 
comm
, &
size
);

163  
	gsize
;

171 
ölöe
 
	gMPI
::
D©©y≥


172 
MPI
::
D©©y≥
::
	$Cª©e_sub¨øy
(
ndims
, c⁄° 
¨øy_of_sizes
[],

173 c⁄° 
¨øy_of_subsizes
[],

174 c⁄° 
¨øy_of_°¨ts
[], 
‹dî
)

177 
MPI_D©©y≥
 
ty≥
;

178 (Ë
	`MPI_Ty≥_¸óã_sub¨øy
(
ndims
, 
c⁄°_ˇ°
<*>(
¨øy_of_sizes
),

179 
c⁄°_ˇ°
<*>(
¨øy_of_subsizes
),

180 
c⁄°_ˇ°
<*>(
¨øy_of_°¨ts
),

181 
‹dî
, 
mpi_d©©y≥
, &
ty≥
);

182  
ty≥
;

183 
	}
}

191 
ölöe
 
	gMPI
::
D©©y≥


192 
MPI
::
D©©y≥
::
	$Dup
() const

194 
MPI_D©©y≥
 
ty≥
;

195 (Ë
	`MPI_Ty≥_dup
(
mpi_d©©y≥
, &
ty≥
);

196  
ty≥
;

197 
	}
}

202 
ölöe
 

203 
	gMPI
::
D©©y≥
::
Cª©e_keyvÆ
(
MPI
::D©©y≥::
C›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

204 
MPI
::
D©©y≥
::
Dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

205 * 
exåa_°©e
)

208  
do_¸óã_keyvÆ
(
NULL
, NULL,

209 
ty≥_c›y_©å_‚
, 
ty≥_dñëe_©å_‚
,

210 
exåa_°©e
);

215 
ölöe
 

216 
	gMPI
::
D©©y≥
::
	$Cª©e_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

217 
MPI_Ty≥_dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

218 * 
exåa_°©e
)

221  
	`do_¸óã_keyvÆ
(
ty≥_c›y_©å_‚
, 
ty≥_dñëe_©å_‚
,

222 
NULL
, NULL,

223 
exåa_°©e
);

224 
	}
}

228 
ölöe
 

229 
	gMPI
::
D©©y≥
::
Cª©e_keyvÆ
(
MPI
::D©©y≥::
C›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

230 
MPI_Ty≥_dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

231 * 
exåa_°©e
)

234  
do_¸óã_keyvÆ
(
NULL
, 
ty≥_dñëe_©å_‚
,

235 
ty≥_c›y_©å_‚
, 
NULL
,

236 
exåa_°©e
);

241 
ölöe
 

242 
	gMPI
::
D©©y≥
::
Cª©e_keyvÆ
(
MPI_Ty≥_c›y_©å_fun˘i⁄
* 
ty≥_c›y_©å_‚
,

243 
MPI
::
D©©y≥
::
Dñëe_©å_fun˘i⁄
* 
ty≥_dñëe_©å_‚
,

244 * 
exåa_°©e
)

247  
do_¸óã_keyvÆ
(
ty≥_c›y_©å_‚
, 
NULL
,

248 
NULL
, 
ty≥_dñëe_©å_‚
,

249 
exåa_°©e
);

252 
ölöe
 

253 
	gMPI
::
D©©y≥
::
	$Dñëe_©å
(
ty≥_keyvÆ
)

255 (Ë
	`MPI_Ty≥_dñëe_©å
(
mpi_d©©y≥
, 
ty≥_keyvÆ
);

256 
	}
}

258 
ölöe
 

259 
	gMPI
::
D©©y≥
::
	$Fªe_keyvÆ
(& 
ty≥_keyvÆ
)

261 (Ë
	`MPI_Ty≥_‰ì_keyvÆ
(&
ty≥_keyvÆ
);

262 
	}
}

264 
ölöe
 
boﬁ


265 
	gMPI
::
D©©y≥
::
	$Gë_©å
(
ty≥_keyvÆ
,

266 * 
©åibuã_vÆ
) const

268 
ªt
;

269 (Ë
	`MPI_Ty≥_gë_©å
(
mpi_d©©y≥
, 
ty≥_keyvÆ
, 
©åibuã_vÆ
, &
ªt
);

270  
	`OPAL_INT_TO_BOOL
(
ªt
);

271 
	}
}

274 
ölöe
 

275 
	gMPI
::
D©©y≥
::
Gë_c⁄ã¡s
(
max_öãgîs
, 
max_addªs£s
,

276 
max_d©©y≥s
, 
¨øy_of_öãgîs
[],

277 
MPI
::
Aöt
 
¨øy_of_addªs£s
[],

278 
MPI
::
D©©y≥
 
¨øy_of_d©©y≥s
[]) const

280 
i
;

281 
MPI_D©©y≥
 *
	gc_d©©y≥s
 = 
√w
 MPI_D©©y≥[
max_d©©y≥s
];

283 (Ë
MPI_Ty≥_gë_c⁄ã¡s
(
mpi_d©©y≥
, 
max_öãgîs
, 
max_addªs£s
,

284 
max_d©©y≥s
,

285 
c⁄°_ˇ°
<*>(
¨øy_of_öãgîs
),

286 
c⁄°_ˇ°
<
MPI_Aöt
*>(
¨øy_of_addªs£s
),

287 
c_d©©y≥s
);

290 
	gi
 = 0; i < 
	gmax_d©©y≥s
; ++i) {

291 
	g¨øy_of_d©©y≥s
[
i
] = 
c_d©©y≥s
[i];

293 
	gdñëe
[] 
	gc_d©©y≥s
;

296 
ölöe
 

297 
	gMPI
::
D©©y≥
::
	$Gë_ívñ›e
(& 
num_öãgîs
, & 
num_addªs£s
,

298 & 
num_d©©y≥s
, & 
comböî
) const

300 (Ë
	`MPI_Ty≥_gë_ívñ›e
(
mpi_d©©y≥
, &
num_öãgîs
, &
num_addªs£s
,

301 &
num_d©©y≥s
, &
comböî
);

302 
	}
}

304 
ölöe
 

305 
	gMPI
::
D©©y≥
::
	$Gë_«me
(* 
ty≥_«me
, & 
ªsu…Àn
) const

307 (Ë
	`MPI_Ty≥_gë_«me
(
mpi_d©©y≥
, 
ty≥_«me
, &
ªsu…Àn
);

308 
	}
}

310 
ölöe
 

311 
	gMPI
::
D©©y≥
::
	$Së_©å
(
ty≥_keyvÆ
, c⁄° * 
©åibuã_vÆ
)

313 (Ë
	`MPI_Ty≥_£t_©å
(
mpi_d©©y≥
, 
ty≥_keyvÆ
, 
c⁄°_ˇ°
<*>(
©åibuã_vÆ
));

314 
	}
}

316 
ölöe
 

317 
	gMPI
::
D©©y≥
::
	$Së_«me
(c⁄° * 
ty≥_«me
)

319 (Ë
	`MPI_Ty≥_£t_«me
(
mpi_d©©y≥
, 
c⁄°_ˇ°
<*>(
ty≥_«me
));

320 
	}
}

328 
	tMPI
::
	tD©©y≥
::
	tC›y_©å_fun˘i⁄
(c⁄° D©©y≥& 
	tﬁdty≥
,

329 
	tty≥_keyvÆ
,

330 * 
	texåa_°©e
,

331 * 
	t©åibuã_vÆ_ö
,

332 * 
	t©åibuã_vÆ_out
,

333 
	tboﬁ
& 
	tÊag
);

335 
	tMPI
::
	tD©©y≥
::
	tDñëe_©å_fun˘i⁄
(D©©y≥& 
	tty≥
,

336 
	tty≥_keyvÆ
,

337 * 
	t©åibuã_vÆ
,

338 * 
	texåa_°©e
);

	@/usr/include/openmpi/ompi/mpi/cxx/errhandler.h

21 ˛as†
	cEºh™dÀr
 {

22 
	mpublic
:

24 
ölöe
 
	$Eºh™dÀr
()

25 : 
	$mpi_îrh™dÀr
(
MPI_ERRHANDLER_NULL
) {}

27 
ölöe
 
vútuÆ
 ~
	$Eºh™dÀr
(Ë{ 
	}
}

29 
ölöe
 
	$Eºh™dÀr
(
MPI_Eºh™dÀr
 
i
)

30 : 
	$mpi_îrh™dÀr
(
i
Ë{
	}
}

33 
ölöe
 
	$Eºh™dÀr
(c⁄° 
Eºh™dÀr
& 
e
)

34 : 
	`comm_h™dÀr_‚
(
e
.
comm_h™dÀr_‚
),

35 
	`fûe_h™dÀr_‚
(
e
.
fûe_h™dÀr_‚
),

36 
	`wö_h™dÀr_‚
(
e
.
wö_h™dÀr_‚
),

37 
	$mpi_îrh™dÀr
(
e
.
mpi_îrh™dÀr
Ë{ 
	}
}

39 
ölöe
 
	gEºh™dÀr
& 
	g›î©‹
=(c⁄° 
Eºh™dÀr
& 
e
)

41 
mpi_îrh™dÀr
 = 
e
.mpi_errhandler;

42 
	gcomm_h™dÀr_‚
 = 
e
.
comm_h™dÀr_‚
;

43 
	gfûe_h™dÀr_‚
 = 
e
.
fûe_h™dÀr_‚
;

44 
	gwö_h™dÀr_‚
 = 
e
.
wö_h™dÀr_‚
;

45  *
	gthis
;

49 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Eºh™dÀr
 &
a
) {

50  (
boﬁ
)(
mpi_îrh™dÀr
 =
a
.mpi_errhandler); }

52 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Eºh™dÀr
 &
a
) {

53  (
boﬁ
)!(*
this
 =
a
); }

56 
ölöe
 
	gEºh™dÀr
& 
	g›î©‹
(c⁄° 
MPI_Eºh™dÀr
 &
i
) {

57 
mpi_îrh™dÀr
 = 
i
;  *
	gthis
; }

59 
ölöe
 
›î©‹
 
	$MPI_Eºh™dÀr
(Ëc⁄° {  
mpi_îrh™dÀr
; 
	}
}

67 
vútuÆ
 
Fªe
();

69 
	gComm
::
Eºh™dÀr_‚
* 
comm_h™dÀr_‚
;

70 
	gFûe
::
Eºh™dÀr_‚
* 
fûe_h™dÀr_‚
;

71 
	gWö
::
Eºh™dÀr_‚
* 
wö_h™dÀr_‚
;

73 
MPI_Eºh™dÀr
 
	gmpi_îrh™dÀr
;

	@/usr/include/openmpi/ompi/mpi/cxx/errhandler_inln.h

22 
ölöe
 
	gPMPI
::
Eºh™dÀr
::Eºh™dÀr(c⁄° 
PMPI
::Eºh™dÀr& 
e
)

23 : 
h™dÀr_‚
(
e
.h™dÀr_‚), 
	$mpi_îrh™dÀr
(
e
.
mpi_îrh™dÀr
Ë{ 
	}
}

25 
ölöe
 
	gPMPI
::
Eºh™dÀr
&

26 
PMPI
::
Eºh™dÀr
::
›î©‹
=(c⁄° PMPI::Eºh™dÀr& 
e
)

28 
h™dÀr_‚
 = 
e
.handler_fn;

29 
	gmpi_îrh™dÀr
 = 
e
.
mpi_îrh™dÀr
;

30  *
	gthis
;

33 
ölöe
 
boﬁ


34 
	gPMPI
::
Eºh™dÀr
::
›î©‹
==(c⁄° 
PMPI
::Eºh™dÀ∏&
a
)

36  (
MPI2CPP_BOOL_T
)(
mpi_îrh™dÀr
 =
a
.mpi_errhandler);

41 
ölöe
 

42 
	gMPI
::
Eºh™dÀr
::
	$Fªe
()

44 ()
	`MPI_Eºh™dÀr_‰ì
(&
mpi_îrh™dÀr
);

45 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/exception.h

20 ˛as†
	cEx˚±i⁄
 {

21 
	mpublic
:

25 
ölöe
 
	$Ex˚±i⁄
(
ec
Ë: 
	$pmpi_ex˚±i⁄
(
ec
) { }

27 
	$Gë_îr‹_code
() const;

29 
	$Gë_îr‹_˛ass
() const;

31 c⁄° * 
	$Gë_îr‹_°rög
() const;

35 
ölöe
 
	$Ex˚±i⁄
(
ec
Ë: 
	`îr‹_code
”c), 
	`îr‹_°rög
(0), 
	`îr‹_˛ass
(-1) {

36 ()
	`MPI_Eº‹_˛ass
(
îr‹_code
, &
îr‹_˛ass
);

37 
ªsu…Àn
;

38 
îr‹_°rög
 = 
√w
 [
MAX_ERROR_STRING
];

39 ()
	`MPI_Eº‹_°rög
(
îr‹_code
, 
îr‹_°rög
, &
ªsu…Àn
);

40 
	}
}

41 
	gölöe
 ~
	$Ex˚±i⁄
() {

42 
dñëe
[] 
îr‹_°rög
;

43 
	}
}

47 
ölöe
 
	$Ex˚±i⁄
(c⁄° 
Ex˚±i⁄
& 
a
)

48 : 
	`îr‹_code
(
a
.
îr‹_code
), 
	$îr‹_˛ass
(
a
.
îr‹_˛ass
)

50 
îr‹_°rög
 = 
√w
 [
MAX_ERROR_STRING
];

54 
i
 = 0; i < 
MAX_ERROR_STRING
; i++)

55 
îr‹_°rög
[
i
] = 
a
.error_string[i];

56 
	}
}

58 
ölöe
 
	$Gë_îr‹_code
(Ëc⁄° {  
îr‹_code
; 
	}
}

60 
ölöe
 
	$Gë_îr‹_˛ass
(Ëc⁄° {  
îr‹_˛ass
; 
	}
}

62 
ölöe
 c⁄° * 
	$Gë_îr‹_°rög
(Ëc⁄° {  
îr‹_°rög
; 
	}
}

66 
	g¥Ÿe˘ed
:

68 
PMPI
::
Ex˚±i⁄
 
pmpi_ex˚±i⁄
;

70 
	gîr‹_code
;

71 * 
	gîr‹_°rög
;

72 
	gîr‹_˛ass
;

	@/usr/include/openmpi/ompi/mpi/cxx/file.h

21 ˛as†
	cFûe
 {

26 
‰õnd
 
˛ass
 
	mMPI
::
Comm
;

27 
‰õnd
 
˛ass
 
	mMPI
::
Reque°
;

29 
	mpublic
:

33 
	$Fûe
() { }

34 
vútuÆ
 ~
	$Fûe
(Ë{ 
	}
}

38 
	$Fûe
(c⁄° 
Fûe
& 
d©a
Ë: 
	$pmpi_fûe
(
d©a
.
pmpi_fûe
Ë{ 
	}
}

40 
	$Fûe
(
MPI_Fûe
 
i
Ë: 
	$pmpi_fûe
(
i
Ë{ 
	}
}

42 
Fûe
& 
›î©‹
=(c⁄° Fûe& 
d©a
) {

43 
pmpi_fûe
 = 
d©a
.pmpi_fûe;  *
	gthis
; }

48 
	gFûe
& 
	g›î©‹
(c⁄° 
MPI_Fûe
 &
i
) {

49 
pmpi_fûe
 = 
i
;  *
	gthis
; }

50 
›î©‹
 
	$MPI_Fûe
 (Ëc⁄° {  
pmpi_fûe
; 
	}
}

52 
›î©‹
 c⁄° 
	gPMPI
::
Fûe
&(Ëc⁄° {  
pmpi_fûe
; }

56 
	$Fûe
(Ë{ 
	}
}

58 
	$Fûe
(c⁄° 
Fûe
& 
d©a
Ë: 
	$mpi_fûe
(
d©a
.
mpi_fûe
Ë{ 
	}
}

60 
	$Fûe
(
MPI_Fûe
 
i
Ë: 
	$mpi_fûe
(
i
Ë{ 
	}
}

62 
vútuÆ
 ~
	$Fûe
(Ë{ 
	}
}

64 
Fûe
& 
›î©‹
=(c⁄° Fûe& 
d©a
) {

65 
mpi_fûe
 = 
d©a
.mpi_fûe;  *
	gthis
; }

70 
	gFûe
& 
	g›î©‹
(c⁄° 
MPI_Fûe
 &
i
) {

71 
mpi_fûe
 = 
i
;  *
	gthis
; }

72 
›î©‹
 
	$MPI_Fûe
 (Ëc⁄° {  
mpi_fûe
; 
	}
}

79 
Clo£
();

81 
Dñëe
(c⁄° * 
fûíame
, c⁄° 
MPI
::
Info
& 
öfo
);

83 
	$Gë_amode
() const;

85 
boﬁ
 
	$Gë_©omicôy
() const;

87 
MPI
::
Off£t
 
	`Gë_byã_off£t
(c⁄° MPI::Off£à
di•
) const;

89 
MPI
::
Group
 
	$Gë_group
() const;

91 
MPI
::
Info
 
	$Gë_öfo
() const;

93 
MPI
::
Off£t
 
	$Gë_posôi⁄
() const;

95 
MPI
::
Off£t
 
	$Gë_posôi⁄_sh¨ed
() const;

97 
MPI
::
Off£t
 
	$Gë_size
() const;

99 
MPI
::
Aöt
 
	`Gë_ty≥_exã¡
(c⁄° MPI::
D©©y≥
& 
d©©y≥
) const;

101 
	`Gë_võw
(
MPI
::
Off£t
& 
di•
, MPI::
D©©y≥
& 
ëy≥
,

102 
MPI
::
D©©y≥
& 
fûëy≥
, * 
d©¨ï
) const;

104 
MPI
::
Reque°
 
	`Iªad
(* 
buf
, 
cou¡
,

105 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

107 
MPI
::
Reque°
 
	`Iªad_©
(MPI::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

108 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

110 
MPI
::
Reque°
 
	`Iªad_sh¨ed
(* 
buf
, 
cou¡
,

111 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

113 
MPI
::
Reque°
 
	`Iwrôe
(c⁄° * 
buf
, 
cou¡
,

114 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

116 
MPI
::
Reque°
 
	`Iwrôe_©
(MPI::
Off£t
 
off£t
, c⁄° * 
buf
,

117 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

119 
MPI
::
Reque°
 
	`Iwrôe_sh¨ed
(c⁄° * 
buf
, 
cou¡
,

120 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

122 
MPI
::
Fûe
 
	`O≥n
(c⁄° MPI::
I¡øcomm
& 
comm
,

123 c⁄° * 
fûíame
, 
amode
,

124 c⁄° 
MPI
::
Info
& 
öfo
);

126 
	`PªÆloˇã
(
MPI
::
Off£t
 
size
);

128 
	`Ród
(* 
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

130 
	`Ród
(* 
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

131 
MPI
::
Sètus
& 
°©us
);

133 
	`Ród_Æl
(* 
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

135 
	`Ród_Æl
(* 
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

136 
MPI
::
Sètus
& 
°©us
);

138 
	`Ród_Æl_begö
(* 
buf
, 
cou¡
,

139 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

141 
	`Ród_Æl_íd
(* 
buf
);

143 
	`Ród_Æl_íd
(* 
buf
, 
MPI
::
Sètus
& 
°©us
);

145 
	`Ród_©
(
MPI
::
Off£t
 
off£t
,

146 * 
buf
, 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

148 
	`Ród_©
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

149 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

151 
	`Ród_©_Æl
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

152 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

154 
	`Ród_©_Æl
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

155 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

157 
	`Ród_©_Æl_begö
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

158 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

160 
	`Ród_©_Æl_íd
(* 
buf
);

162 
	`Ród_©_Æl_íd
(* 
buf
, 
MPI
::
Sètus
& 
°©us
);

164 
	`Ród_‹dîed
(* 
buf
, 
cou¡
,

165 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

167 
	`Ród_‹dîed
(* 
buf
, 
cou¡
,

168 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

169 
MPI
::
Sètus
& 
°©us
);

171 
	`Ród_‹dîed_begö
(* 
buf
, 
cou¡
,

172 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

174 
	`Ród_‹dîed_íd
(* 
buf
);

176 
	`Ród_‹dîed_íd
(* 
buf
, 
MPI
::
Sètus
& 
°©us
);

178 
	`Ród_sh¨ed
(* 
buf
, 
cou¡
,

179 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

181 
	`Ród_sh¨ed
(* 
buf
, 
cou¡
,

182 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

184 
	`Sìk
(
MPI
::
Off£t
 
off£t
, 
whí˚
);

186 
	`Sìk_sh¨ed
(
MPI
::
Off£t
 
off£t
, 
whí˚
);

188 
	`Së_©omicôy
(
boﬁ
 
Êag
);

190 
	`Së_öfo
(c⁄° 
MPI
::
Info
& 
öfo
);

192 
	`Së_size
(
MPI
::
Off£t
 
size
);

194 
	`Së_võw
(
MPI
::
Off£t
 
di•
, c⁄° MPI::
D©©y≥
& 
ëy≥
,

195 c⁄° 
MPI
::
D©©y≥
& 
fûëy≥
, c⁄° * 
d©¨ï
,

196 c⁄° 
MPI
::
Info
& 
öfo
);

198 
	`Sync
();

200 
	`Wrôe
(c⁄° * 
buf
, 
cou¡
,

201 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

203 
	`Wrôe
(c⁄° * 
buf
, 
cou¡
,

204 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

206 
	`Wrôe_Æl
(c⁄° * 
buf
, 
cou¡
,

207 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

209 
	`Wrôe_Æl
(c⁄° * 
buf
, 
cou¡
,

210 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

212 
	`Wrôe_Æl_begö
(c⁄° * 
buf
, 
cou¡
,

213 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

215 
	`Wrôe_Æl_íd
(c⁄° * 
buf
);

217 
	`Wrôe_Æl_íd
(c⁄° * 
buf
, 
MPI
::
Sètus
& 
°©us
);

219 
	`Wrôe_©
(
MPI
::
Off£t
 
off£t
, c⁄° * 
buf
, 
cou¡
,

220 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

222 
	`Wrôe_©
(
MPI
::
Off£t
 
off£t
, c⁄° * 
buf
, 
cou¡
,

223 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

225 
	`Wrôe_©_Æl
(
MPI
::
Off£t
 
off£t
, c⁄° * 
buf
, 
cou¡
,

226 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

228 
	`Wrôe_©_Æl
(
MPI
::
Off£t
 
off£t
, c⁄° * 
buf
, 
cou¡
,

229 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

230 
MPI
::
Sètus
& 
°©us
);

232 
	`Wrôe_©_Æl_begö
(
MPI
::
Off£t
 
off£t
, c⁄° * 
buf
,

233 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

235 
	`Wrôe_©_Æl_íd
(c⁄° * 
buf
);

237 
	`Wrôe_©_Æl_íd
(c⁄° * 
buf
, 
MPI
::
Sètus
& 
°©us
);

239 
	`Wrôe_‹dîed
(c⁄° * 
buf
, 
cou¡
,

240 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

242 
	`Wrôe_‹dîed
(c⁄° * 
buf
, 
cou¡
,

243 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

245 
	`Wrôe_‹dîed_begö
(c⁄° * 
buf
, 
cou¡
,

246 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

248 
	`Wrôe_‹dîed_íd
(c⁄° * 
buf
);

250 
	`Wrôe_‹dîed_íd
(c⁄° * 
buf
, 
MPI
::
Sètus
& 
°©us
);

252 
	`Wrôe_sh¨ed
(c⁄° * 
buf
, 
cou¡
,

253 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
);

255 
	`Wrôe_sh¨ed
(c⁄° * 
buf
, 
cou¡
,

256 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
);

258 
	$CÆl_îrh™dÀr
(
îr‹code
) const;

260 
	tEºh™dÀr_‚
(
	tMPI
::
	tFûe
 &, *, ... );

262 
MPI
::
Eºh™dÀr
 
	`Cª©e_îrh™dÀr
(
Eºh™dÀr_‚
* 
fun˘i⁄
);

264 
MPI
::
Eºh™dÀr
 
	$Gë_îrh™dÀr
() const;

266 
	`Së_îrh™dÀr
(c⁄° 
MPI
::
Eºh™dÀr
& 
îrh™dÀr
);

268 
¥Ÿe˘ed
:

270 
PMPI
::
Fûe
 
pmpi_fûe
;

273 
MPI_Fûe
 
mpi_fûe
;

277 
public
:

278 
Eºh™dÀr
* 
my_îrh™dÀr
;

280 ::
°d
::
	tm≠
<
	tMPI_Fûe
, 
	tFûe
*> 
	tmpi_fûe_m≠_t
;

281 
mpi_fûe_m≠_t
 
mpi_fûe_m≠
;

282 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/file_inln.h

21 
ölöe
 

22 
	gMPI
::
Fûe
::
Dñëe
(c⁄° * 
fûíame
, c⁄° 
MPI
::
Info
& 
öfo
)

24 (Ë
MPI_Fûe_dñëe
(
c⁄°_ˇ°
<*>(
fûíame
), 
öfo
);

28 
ölöe
 

29 
	gMPI
::
Fûe
::
	$Gë_amode
() const

31 
amode
;

32 (Ë
	`MPI_Fûe_gë_amode
(
mpi_fûe
, &
amode
);

33  
amode
;

34 
	}
}

37 
ölöe
 
boﬁ


38 
	gMPI
::
Fûe
::
	$Gë_©omicôy
() const

40 
Êag
;

41 (Ë
	`MPI_Fûe_gë_©omicôy
(
mpi_fûe
, &
Êag
);

42  
	`OPAL_INT_TO_BOOL
(
Êag
);

43 
	}
}

45 
ölöe
 
	gMPI
::
Off£t


46 
MPI
::
Fûe
::
Gë_byã_off£t
(c⁄° MPI::
Off£t
 
di•
) const

48 
MPI_Off£t
 
off£t
, 
	gldi•
;

49 
	gldi•
 = 
di•
;

50 (Ë
MPI_Fûe_gë_byã_off£t
(
mpi_fûe
, 
ldi•
, &
off£t
);

51  
	goff£t
;

54 
ölöe
 
	gMPI
::
Group


55 
MPI
::
Fûe
::
	$Gë_group
() const

57 
MPI_Group
 
group
;

58 (Ë
	`MPI_Fûe_gë_group
(
mpi_fûe
, &
group
);

59  
group
;

60 
	}
}

63 
ölöe
 
	gMPI
::
Info


64 
MPI
::
Fûe
::
	$Gë_öfo
() const

66 
MPI_Info
 
öfo_u£d
;

67 (Ë
	`MPI_Fûe_gë_öfo
(
mpi_fûe
, &
öfo_u£d
);

68  
öfo_u£d
;

69 
	}
}

72 
ölöe
 
	gMPI
::
Off£t


73 
MPI
::
Fûe
::
	$Gë_posôi⁄
() const

75 
MPI_Off£t
 
off£t
;

76 (Ë
	`MPI_Fûe_gë_posôi⁄
(
mpi_fûe
, &
off£t
);

77  
off£t
;

78 
	}
}

81 
ölöe
 
	gMPI
::
Off£t


82 
MPI
::
Fûe
::
	$Gë_posôi⁄_sh¨ed
() const

84 
MPI_Off£t
 
off£t
;

85 (Ë
	`MPI_Fûe_gë_posôi⁄_sh¨ed
(
mpi_fûe
, &
off£t
);

86  
off£t
;

87 
	}
}

90 
ölöe
 
	gMPI
::
Off£t


91 
MPI
::
Fûe
::
	$Gë_size
() const

93 
MPI_Off£t
 
off£t
;

94 (Ë
	`MPI_Fûe_gë_size
(
mpi_fûe
, &
off£t
);

95  
off£t
;

97 
	}
}

100 
ölöe
 
	gMPI
::
Aöt


101 
MPI
::
Fûe
::
Gë_ty≥_exã¡
(c⁄° MPI::
D©©y≥
& 
d©©y≥
) const

103 
MPI_Aöt
 
exã¡
;

104 (Ë
MPI_Fûe_gë_ty≥_exã¡
(
mpi_fûe
, 
d©©y≥
, &
exã¡
);

105  
	gexã¡
;

109 
ölöe
 

110 
	gMPI
::
Fûe
::
Gë_võw
(
MPI
::
Off£t
& 
di•
,

111 
MPI
::
D©©y≥
& 
ëy≥
,

112 
MPI
::
D©©y≥
& 
fûëy≥
,

113 * 
d©¨ï
) const

115 
MPI_D©©y≥
 
	gty≥
, 
	g·y≥
;

116 
	gty≥
 = 
ëy≥
;

117 
	g·y≥
 = 
fûëy≥
;

118 
	gMPI
::
Off£t
 
odi•
 = 
di•
;

120 (Ë
MPI_Fûe_gë_võw
(
mpi_fûe
, &
odi•
, &
ty≥
, &
·y≥
,

121 
d©¨ï
);

125 
ölöe
 
	gMPI
::
Reque°


126 
MPI
::
Fûe
::
Iªad
(* 
buf
, 
cou¡
,

127 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

129 
MPI_Reque°
 
ªq
;

130 (Ë
MPI_Fûe_úód
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
ªq
);

131  
	gªq
;

135 
ölöe
 
	gMPI
::
Reque°


136 
MPI
::
Fûe
::
Iªad_©
(MPI::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

137 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

139 
MPI_Reque°
 
ªq
;

140 (Ë
MPI_Fûe_úód_©
(
mpi_fûe
, 
off£t
, 
buf
, 
cou¡
, 
d©©y≥
, &
ªq
);

141  
	gªq
;

145 
ölöe
 
	gMPI
::
Reque°


146 
MPI
::
Fûe
::
Iªad_sh¨ed
(* 
buf
, 
cou¡
,

147 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

149 
MPI_Reque°
 
ªq
;

150 (Ë
MPI_Fûe_úód_sh¨ed
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
ªq
);

151  
	gªq
;

155 
ölöe
 
	gMPI
::
Reque°


156 
MPI
::
Fûe
::
Iwrôe
(c⁄° * 
buf
, 
cou¡
,

157 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

159 
MPI_Reque°
 
ªq
;

160 (Ë
MPI_Fûe_iwrôe
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
, &
ªq
);

161  
	gªq
;

165 
ölöe
 
	gMPI
::
Reque°


166 
MPI
::
Fûe
::
Iwrôe_©
(MPI::
Off£t
 
off£t
, c⁄° * 
buf
,

167 
cou¡
, c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

169 
MPI_Reque°
 
ªq
;

170 (Ë
MPI_Fûe_iwrôe_©
(
mpi_fûe
, 
off£t
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

171 &
ªq
);

172  
	gªq
;

176 
ölöe
 
	gMPI
::
Reque°


177 
MPI
::
Fûe
::
Iwrôe_sh¨ed
(c⁄° * 
buf
, 
cou¡
,

178 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

180 
MPI_Reque°
 
ªq
;

181 (Ë
MPI_Fûe_iwrôe_sh¨ed
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
, &
ªq
);

182  
	gªq
;

186 
ölöe
 
	gMPI
::
Fûe


187 
MPI
::
Fûe
::
O≥n
(c⁄° MPI::
I¡øcomm
& 
comm
,

188 c⁄° * 
fûíame
, 
amode
,

189 c⁄° 
MPI
::
Info
& 
öfo
)

191 
MPI_Fûe
 
fh
;

192 (Ë
MPI_Fûe_›í
(
comm
, 
c⁄°_ˇ°
<*>(
fûíame
), 
amode
, 
öfo
, &
fh
);

193  
	gfh
;

197 
ölöe
 

198 
	gMPI
::
Fûe
::
PªÆloˇã
(
MPI
::
Off£t
 
size
)

200 (Ë
MPI_Fûe_¥óŒoˇã
(
mpi_fûe
, 
size
);

204 
ölöe
 

205 
	gMPI
::
Fûe
::
Ród
(* 
buf
, 
cou¡
,

206 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

208 
MPI_Sètus
 
°©us
;

209 (Ë
MPI_Fûe_ªad
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
);

213 
ölöe
 

214 
	gMPI
::
Fûe
::
Ród
(* 
buf
, 
cou¡
,

215 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

216 
MPI
::
Sètus
& 
°©us
)

218 (Ë
MPI_Fûe_ªad
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
.
mpi_°©us
);

222 
ölöe
 

223 
	gMPI
::
Fûe
::
Ród_Æl
(* 
buf
, 
cou¡
,

224 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

226 
MPI_Sètus
 
°©us
;

227 (Ë
MPI_Fûe_ªad_Æl
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
);

231 
ölöe
 

232 
	gMPI
::
Fûe
::
Ród_Æl
(* 
buf
, 
cou¡
,

233 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

234 
MPI
::
Sètus
& 
°©us
)

236 (Ë
MPI_Fûe_ªad_Æl
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
.
mpi_°©us
);

240 
ölöe
 

241 
	gMPI
::
Fûe
::
Ród_Æl_begö
(* 
buf
, 
cou¡
,

242 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

244 (Ë
MPI_Fûe_ªad_Æl_begö
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
);

248 
ölöe
 

249 
	gMPI
::
Fûe
::
	$Ród_Æl_íd
(* 
buf
)

251 
MPI_Sètus
 
°©us
;

252 (Ë
	`MPI_Fûe_ªad_Æl_íd
(
mpi_fûe
, 
buf
, &
°©us
);

253 
	}
}

256 
ölöe
 

257 
	gMPI
::
Fûe
::
Ród_Æl_íd
(* 
buf
, 
MPI
::
Sètus
& 
°©us
)

259 (Ë
MPI_Fûe_ªad_Æl_íd
(
mpi_fûe
, 
buf
, &
°©us
.
mpi_°©us
);

263 
ölöe
 

264 
	gMPI
::
Fûe
::
Ród_©
(
MPI
::
Off£t
 
off£t
,

265 * 
buf
, 
cou¡
,

266 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

268 
MPI_Sètus
 
°©us
;

269 (Ë
MPI_Fûe_ªad_©
(
mpi_fûe
, 
off£t
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
);

274 
ölöe
 

275 
	gMPI
::
Fûe
::
Ród_©
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

276 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

277 
MPI
::
Sètus
& 
°©us
)

279 (Ë
MPI_Fûe_ªad_©
(
mpi_fûe
, 
off£t
, 
buf
, 
cou¡
, 
d©©y≥
,

280 &
°©us
.
mpi_°©us
);

284 
ölöe
 

285 
	gMPI
::
Fûe
::
Ród_©_Æl
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

286 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

288 
MPI_Sètus
 
°©us
;

289 (Ë
MPI_Fûe_ªad_©_Æl
(
mpi_fûe
, 
off£t
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
);

293 
ölöe
 

294 
	gMPI
::
Fûe
::
Ród_©_Æl
(
MPI
::
Off£t
 
off£t
, * 
buf
, 
cou¡
,

295 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

296 
MPI
::
Sètus
& 
°©us
)

298 (Ë
MPI_Fûe_ªad_©_Æl
(
mpi_fûe
, 
off£t
, 
buf
, 
cou¡
, 
d©©y≥
,

299 &
°©us
.
mpi_°©us
);

303 
ölöe
 

304 
	gMPI
::
Fûe
::
Ród_©_Æl_begö
(
MPI
::
Off£t
 
off£t
,

305 * 
buf
, 
cou¡
,

306 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

308 (Ë
MPI_Fûe_ªad_©_Æl_begö
(
mpi_fûe
, 
off£t
, 
buf
, 
cou¡
, 
d©©y≥
);

312 
ölöe
 

313 
	gMPI
::
Fûe
::
	$Ród_©_Æl_íd
(* 
buf
)

315 
MPI_Sètus
 
°©us
;

316 (Ë
	`MPI_Fûe_ªad_©_Æl_íd
(
mpi_fûe
, 
buf
, &
°©us
);

317 
	}
}

320 
ölöe
 

321 
	gMPI
::
Fûe
::
Ród_©_Æl_íd
(* 
buf
, 
MPI
::
Sètus
& 
°©us
)

323 (Ë
MPI_Fûe_ªad_©_Æl_íd
(
mpi_fûe
, 
buf
, &
°©us
.
mpi_°©us
);

327 
ölöe
 

328 
	gMPI
::
Fûe
::
Ród_‹dîed
(* 
buf
, 
cou¡
,

329 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

331 
MPI_Sètus
 
°©us
;

332 (Ë
MPI_Fûe_ªad_‹dîed
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
);

336 
ölöe
 

337 
	gMPI
::
Fûe
::
Ród_‹dîed
(* 
buf
, 
cou¡
,

338 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

339 
MPI
::
Sètus
& 
°©us
)

341 (Ë
MPI_Fûe_ªad_‹dîed
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
,

342 &
°©us
.
mpi_°©us
);

346 
ölöe
 

347 
	gMPI
::
Fûe
::
Ród_‹dîed_begö
(* 
buf
, 
cou¡
,

348 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

350 (Ë
MPI_Fûe_ªad_‹dîed_begö
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
);

354 
ölöe
 

355 
	gMPI
::
Fûe
::
	$Ród_‹dîed_íd
(* 
buf
)

357 
MPI_Sètus
 
°©us
;

358 (Ë
	`MPI_Fûe_ªad_‹dîed_íd
(
mpi_fûe
, 
buf
, &
°©us
);

359 
	}
}

362 
ölöe
 

363 
	gMPI
::
Fûe
::
Ród_‹dîed_íd
(* 
buf
, 
MPI
::
Sètus
& 
°©us
)

365 (Ë
MPI_Fûe_ªad_‹dîed_íd
(
mpi_fûe
, 
buf
, &
°©us
.
mpi_°©us
);

369 
ölöe
 

370 
	gMPI
::
Fûe
::
Ród_sh¨ed
(* 
buf
, 
cou¡
,

371 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

373 
MPI_Sètus
 
°©us
;

374 (Ë
MPI_Fûe_ªad_sh¨ed
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
, &
°©us
);

378 
ölöe
 

379 
	gMPI
::
Fûe
::
Ród_sh¨ed
(* 
buf
, 
cou¡
,

380 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

381 
MPI
::
Sètus
& 
°©us
)

383 (Ë
MPI_Fûe_ªad_sh¨ed
(
mpi_fûe
, 
buf
, 
cou¡
, 
d©©y≥
,

384 &
°©us
.
mpi_°©us
);

387 
ölöe
 

388 
	gMPI
::
Fûe
::
Sìk
(
MPI
::
Off£t
 
off£t
, 
whí˚
)

390 (Ë
MPI_Fûe_£ek
(
mpi_fûe
, 
off£t
, 
whí˚
);

394 
ölöe
 

395 
	gMPI
::
Fûe
::
Sìk_sh¨ed
(
MPI
::
Off£t
 
off£t
, 
whí˚
)

397 (Ë
MPI_Fûe_£ek_sh¨ed
(
mpi_fûe
, 
off£t
, 
whí˚
);

401 
ölöe
 

402 
	gMPI
::
Fûe
::
	$Së_©omicôy
(
boﬁ
 
Êag
)

404 (Ë
	`MPI_Fûe_£t_©omicôy
(
mpi_fûe
, 
Êag
);

405 
	}
}

408 
ölöe
 

409 
	gMPI
::
Fûe
::
Së_öfo
(c⁄° 
MPI
::
Info
& 
öfo
)

411 (Ë
MPI_Fûe_£t_öfo
(
mpi_fûe
, 
öfo
);

415 
ölöe
 

416 
	gMPI
::
Fûe
::
Së_size
(
MPI
::
Off£t
 
size
)

418 (Ë
MPI_Fûe_£t_size
(
mpi_fûe
, 
size
);

422 
ölöe
 

423 
	gMPI
::
Fûe
::
Së_võw
(
MPI
::
Off£t
 
di•
,

424 c⁄° 
MPI
::
D©©y≥
& 
ëy≥
,

425 c⁄° 
MPI
::
D©©y≥
& 
fûëy≥
,

426 c⁄° * 
d©¨ï
,

427 c⁄° 
MPI
::
Info
& 
öfo
)

429 (Ë
MPI_Fûe_£t_võw
(
mpi_fûe
, 
di•
, 
ëy≥
, 
fûëy≥
, 
c⁄°_ˇ°
<*>(
d©¨ï
),

430 
öfo
);

434 
ölöe
 

435 
	gMPI
::
Fûe
::
	$Sync
()

437 (Ë
	`MPI_Fûe_sync
(
mpi_fûe
);

438 
	}
}

441 
ölöe
 

442 
	gMPI
::
Fûe
::
Wrôe
(c⁄° * 
buf
, 
cou¡
,

443 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

445 
MPI_Sètus
 
°©us
;

446 (Ë
MPI_Fûe_wrôe
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
, &
°©us
);

450 
ölöe
 

451 
	gMPI
::
Fûe
::
Wrôe
(c⁄° * 
buf
, 
cou¡
,

452 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

453 
MPI
::
Sètus
& 
°©us
)

455 (Ë
MPI_Fûe_wrôe
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

456 &
°©us
.
mpi_°©us
);

460 
ölöe
 

461 
	gMPI
::
Fûe
::
Wrôe_Æl
(c⁄° * 
buf
, 
cou¡
,

462 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

464 
MPI_Sètus
 
°©us
;

465 (Ë
MPI_Fûe_wrôe_Æl
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
, &
°©us
);

470 
ölöe
 

471 
	gMPI
::
Fûe
::
Wrôe_Æl
(c⁄° * 
buf
, 
cou¡
,

472 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

473 
MPI
::
Sètus
& 
°©us
)

475 (Ë
MPI_Fûe_wrôe_Æl
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

476 &
°©us
.
mpi_°©us
);

480 
ölöe
 

481 
	gMPI
::
Fûe
::
Wrôe_Æl_begö
(c⁄° * 
buf
, 
cou¡
,

482 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

484 (Ë
MPI_Fûe_wrôe_Æl_begö
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
);

488 
ölöe
 

489 
	gMPI
::
Fûe
::
	$Wrôe_Æl_íd
(c⁄° * 
buf
)

491 
MPI_Sètus
 
°©us
;

492 (Ë
	`MPI_Fûe_wrôe_Æl_íd
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), &
°©us
);

493 
	}
}

496 
ölöe
 

497 
	gMPI
::
Fûe
::
Wrôe_Æl_íd
(c⁄° * 
buf
, 
MPI
::
Sètus
& 
°©us
)

499 (Ë
MPI_Fûe_wrôe_Æl_íd
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), &
°©us
.
mpi_°©us
);

503 
ölöe
 

504 
	gMPI
::
Fûe
::
Wrôe_©
(
MPI
::
Off£t
 
off£t
,

505 c⁄° * 
buf
, 
cou¡
,

506 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

508 
MPI_Sètus
 
°©us
;

509 (Ë
MPI_Fûe_wrôe_©
(
mpi_fûe
, 
off£t
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

510 
d©©y≥
, &
°©us
);

514 
ölöe
 

515 
	gMPI
::
Fûe
::
Wrôe_©
(
MPI
::
Off£t
 
off£t
,

516 c⁄° * 
buf
, 
cou¡
,

517 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

518 
MPI
::
Sètus
& 
°©us
)

520 (Ë
MPI_Fûe_wrôe_©
(
mpi_fûe
, 
off£t
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

521 
d©©y≥
, &
°©us
.
mpi_°©us
);

525 
ölöe
 

526 
	gMPI
::
Fûe
::
Wrôe_©_Æl
(
MPI
::
Off£t
 
off£t
,

527 c⁄° * 
buf
, 
cou¡
,

528 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

530 
MPI_Sètus
 
°©us
;

531 (Ë
MPI_Fûe_wrôe_©_Æl
(
mpi_fûe
, 
off£t
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

532 
d©©y≥
, &
°©us
);

536 
ölöe
 

537 
	gMPI
::
Fûe
::
Wrôe_©_Æl
(
MPI
::
Off£t
 
off£t
,

538 c⁄° * 
buf
, 
cou¡
,

539 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

540 
MPI
::
Sètus
& 
°©us
)

542 (Ë
MPI_Fûe_wrôe_©_Æl
(
mpi_fûe
, 
off£t
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

543 
d©©y≥
, &
°©us
.
mpi_°©us
);

547 
ölöe
 

548 
	gMPI
::
Fûe
::
Wrôe_©_Æl_begö
(
MPI
::
Off£t
 
off£t
,

549 c⁄° * 
buf
, 
cou¡
,

550 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

552 (Ë
MPI_Fûe_wrôe_©_Æl_begö
(
mpi_fûe
, 
off£t
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

553 
d©©y≥
);

557 
ölöe
 

558 
	gMPI
::
Fûe
::
	$Wrôe_©_Æl_íd
(c⁄° * 
buf
)

560 
MPI_Sètus
 
°©us
;

561 (Ë
	`MPI_Fûe_wrôe_©_Æl_íd
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), &
°©us
);

562 
	}
}

565 
ölöe
 

566 
	gMPI
::
Fûe
::
Wrôe_©_Æl_íd
(c⁄° * 
buf
, 
MPI
::
Sètus
& 
°©us
)

568 (Ë
MPI_Fûe_wrôe_©_Æl_íd
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), &
°©us
.
mpi_°©us
);

572 
ölöe
 

573 
	gMPI
::
Fûe
::
Wrôe_‹dîed
(c⁄° * 
buf
, 
cou¡
,

574 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

576 
MPI_Sètus
 
°©us
;

577 (Ë
MPI_Fûe_wrôe_‹dîed
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

578 &
°©us
);

582 
ölöe
 

583 
	gMPI
::
Fûe
::
Wrôe_‹dîed
(c⁄° * 
buf
, 
cou¡
,

584 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
,

585 
MPI
::
Sètus
& 
°©us
)

587 (Ë
MPI_Fûe_wrôe_‹dîed
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
,

588 &
°©us
.
mpi_°©us
);

592 
ölöe
 

593 
	gMPI
::
Fûe
::
Wrôe_‹dîed_begö
(c⁄° * 
buf
, 
cou¡
,

594 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

596 (Ë
MPI_Fûe_wrôe_‹dîed_begö
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
, 
d©©y≥
);

600 
ölöe
 

601 
	gMPI
::
Fûe
::
	$Wrôe_‹dîed_íd
(c⁄° * 
buf
)

603 
MPI_Sètus
 
°©us
;

604 (Ë
	`MPI_Fûe_wrôe_‹dîed_íd
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), &
°©us
);

605 
	}
}

608 
ölöe
 

609 
	gMPI
::
Fûe
::
Wrôe_‹dîed_íd
(c⁄° * 
buf
,

610 
MPI
::
Sètus
& 
°©us
)

612 (Ë
MPI_Fûe_wrôe_‹dîed_íd
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), &
°©us
.
mpi_°©us
);

616 
ölöe
 

617 
	gMPI
::
Fûe
::
Wrôe_sh¨ed
(c⁄° * 
buf
, 
cou¡
,

618 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
)

620 
MPI_Sètus
 
°©us
;

621 (Ë
MPI_Fûe_wrôe_sh¨ed
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

622 
d©©y≥
, &
°©us
);

626 
ölöe
 

627 
	gMPI
::
Fûe
::
Wrôe_sh¨ed
(c⁄° * 
buf
, 
cou¡
,

628 c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, MPI::
Sètus
& 
°©us
)

630 (Ë
MPI_Fûe_wrôe_sh¨ed
(
mpi_fûe
, 
c⁄°_ˇ°
<*>(
buf
), 
cou¡
,

631 
d©©y≥
, &
°©us
.
mpi_°©us
);

635 
ölöe
 
	gMPI
::
Eºh™dÀr


636 
MPI
::
Fûe
::
Cª©e_îrh™dÀr
(MPI::Fûe::
Eºh™dÀr_‚
* 
fun˘i⁄
)

638 
MPI_Eºh™dÀr
 
îrh™dÀr
;

639 (Ë
MPI_Fûe_¸óã_îrh™dÀr
((
MPI_Fûe_îrh™dÀr_‚
 *Ë
ompi_mpi_cxx_fûe_îrh™dÀr_öãr˚±
,

640 &
îrh™dÀr
);

641 
	gMPI
::
Eºh™dÀr
 
ãmp
(
îrh™dÀr
);

642 
	gãmp
.
	gfûe_h™dÀr_‚
 = ((*)(
MPI
::
Fûe
&, * , ...)Ë
	gfun˘i⁄
;

643  
	gãmp
;

647 
ölöe
 
	gMPI
::
Eºh™dÀr


648 
MPI
::
Fûe
::
	$Gë_îrh™dÀr
() const

650  *
my_îrh™dÀr
;

651 
	}
}

653 
ölöe
 

654 
	gMPI
::
Fûe
::
	$CÆl_îrh™dÀr
(
îr‹code
) const

656 (Ë
	`MPI_Fûe_ˇŒ_îrh™dÀr
(
mpi_fûe
, 
îr‹code
);

657 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/functions.h

25 
Aâach_buf„r
(* 
buf„r
, 
size
);

28 
Dëach_buf„r
(*& 
buf„r
);

35 
Compuã_dims
(
¬odes
, 
ndims
, 
dims
[]);

42 
Gë_¥o˚ss‹_«me
(* 
«me
, & 
ªsu…Àn
);

45 
Gë_îr‹_°rög
(
îr‹code
, * 
°rög
, & 
ªsu…Àn
);

48 
Gë_îr‹_˛ass
(
îr‹code
);

51 
Wtime
();

54 
Wtick
();

57 
Inô
(& 
¨gc
, **& 
¨gv
);

60 
Inô
();

63 
InôülizeI¡î˚±s
();

66 
FöÆizeI¡î˚±s
();

69 
Ról_öô
();

72 
FöÆize
();

74 
boﬁ


75 
Is_öôülized
();

77 
boﬁ


78 
Is_föÆized
();

85 
Inô_thªad
(&
¨gc
, **&
¨gv
, 
ªquúed
);

88 
Inô_thªad
(
ªquúed
);

90 
boﬁ


91 
Is_thªad_maö
();

94 
Quîy_thªad
();

103 
AŒoc_mem
(
Aöt
 
size
, c⁄° 
Info
& 
öfo
);

107 
Fªe_mem
(* 
ba£
);

114 
Clo£_p‹t
(c⁄° * 
p‹t_«me
);

118 
Lookup_«me
(c⁄° * 
£rvi˚_«me
, c⁄° 
Info
& 
öfo
, * 
p‹t_«me
);

122 
O≥n_p‹t
(c⁄° 
Info
& 
öfo
, * 
p‹t_«me
);

126 
Publish_«me
(c⁄° * 
£rvi˚_«me
, c⁄° 
Info
& 
öfo
,

127 c⁄° * 
p‹t_«me
);

130 
U≈ublish_«me
(c⁄° * 
£rvi˚_«me
, c⁄° 
Info
& 
öfo
,

131 c⁄° * 
p‹t_«me
);

138 
Pc⁄åﬁ
(c⁄° 
Àvñ
, ...);

141 
Gë_vîsi⁄
(& 
vîsi⁄
, & 
subvîsi⁄
);

143 
	gMPI
::
Aöt


144 
Gë_addªss
(* 
loˇti⁄
);

	@/usr/include/openmpi/ompi/mpi/cxx/functions_inln.h

20 
	~<°rög.h
>

26 
ölöe
 

27 
	gMPI
::
	$Aâach_buf„r
(* 
buf„r
, 
size
)

29 ()
	`MPI_Buf„r_©èch
(
buf„r
, 
size
);

30 
	}
}

32 
ölöe
 

33 
	gMPI
::
	$Dëach_buf„r
(*& 
buf„r
)

35 
size
;

36 ()
	`MPI_Buf„r_dëach
(&
buf„r
, &
size
);

37  
size
;

38 
	}
}

44 
ölöe
 

45 
	gMPI
::
	$Compuã_dims
(
¬odes
, 
ndims
, 
dims
[])

47 ()
	`MPI_Dims_¸óã
(
¬odes
, 
ndims
, 
dims
);

48 
	}
}

55 
ölöe
 

56 
	gMPI
::
	$Gë_¥o˚ss‹_«me
(* 
«me
, & 
ªsu…Àn
)

58 ()
	`MPI_Gë_¥o˚ss‹_«me
(
«me
, &
ªsu…Àn
);

59 
	}
}

61 
ölöe
 

62 
	gMPI
::
	$Gë_îr‹_°rög
(
îr‹code
, * 
°rög
, & 
ªsu…Àn
)

64 ()
	`MPI_Eº‹_°rög
(
îr‹code
, 
°rög
, &
ªsu…Àn
);

65 
	}
}

67 
ölöe
 

68 
	gMPI
::
	$Gë_îr‹_˛ass
(
îr‹code
)

70 
îr‹˛ass
;

71 ()
	`MPI_Eº‹_˛ass
(
îr‹code
, &
îr‹˛ass
);

72  
îr‹˛ass
;

73 
	}
}

75 
ölöe
 

76 
	gMPI
::
	$Wtime
()

78  (
	`MPI_Wtime
());

79 
	}
}

81 
ölöe
 

82 
	gMPI
::
	$Wtick
()

84  (
	`MPI_Wtick
());

85 
	}
}

87 
ölöe
 

88 
	gMPI
::
	$Ról_öô
()

90 
MPI
::
	`InôülizeI¡î˚±s
();

91 
	}
}

94 
ölöe
 

95 
	gMPI
::
	$Inô
(& 
¨gc
, **& 
¨gv
)

97 ()
	`MPI_Inô
(&
¨gc
, &
¨gv
);

98 
	`Ról_öô
();

99 
	}
}

101 
ölöe
 

102 
	gMPI
::
	$Inô
()

104 ()
	`MPI_Inô
(0, 0);

105 
	`Ról_öô
();

106 
	}
}

108 
ölöe
 

109 
	gMPI
::
	$FöÆize
()

111 
	`FöÆizeI¡î˚±s
();

112 ()
	`MPI_FöÆize
();

113 
	}
}

115 
ölöe
 
boﬁ


116 
	gMPI
::
	$Is_öôülized
()

118 
t
;

119 ()
	`MPI_Inôülized
(&
t
);

120  
	`OPAL_INT_TO_BOOL
(
t
);

121 
	}
}

123 
ölöe
 
boﬁ


124 
	gMPI
::
	$Is_föÆized
()

126 
t
;

127 ()
	`MPI_FöÆized
(&
t
);

128  
	`OPAL_INT_TO_BOOL
(
t
);

129 
	}
}

136 
ölöe
 

137 
	gMPI
::
	$Inô_thªad
(
ªquúed
)

139 
¥ovided
;

140 (Ë
	`MPI_Inô_thªad
(0, 
NULL
, 
ªquúed
, &
¥ovided
);

141 
	`Ról_öô
();

142  
¥ovided
;

143 
	}
}

146 
ölöe
 

147 
	gMPI
::
	$Inô_thªad
(& 
¨gc
, **& 
¨gv
, 
ªquúed
)

149 
¥ovided
;

150 (Ë
	`MPI_Inô_thªad
(&
¨gc
, &
¨gv
, 
ªquúed
, &
¥ovided
);

151 
	`Ról_öô
();

152  
¥ovided
;

153 
	}
}

156 
ölöe
 
boﬁ


157 
	gMPI
::
	$Is_thªad_maö
()

159 
Êag
;

160 (Ë
	`MPI_Is_thªad_maö
(&
Êag
);

161  
	`OPAL_INT_TO_BOOL
(
Êag
 == 1);

162 
	}
}

165 
ölöe
 

166 
	gMPI
::
	$Quîy_thªad
()

168 
¥ovided
;

169 (Ë
	`MPI_Quîy_thªad
(&
¥ovided
);

170  
¥ovided
;

171 
	}
}

179 
ölöe
 *

180 
	gMPI
::
AŒoc_mem
(
MPI
::
Aöt
 
size
, c⁄° MPI::
Info
& 
öfo
)

182 * 
ba£±r
;

183 (Ë
MPI_AŒoc_mem
(
size
, 
öfo
, &
ba£±r
);

184  
	gba£±r
;

188 
ölöe
 

189 
	gMPI
::
	$Fªe_mem
(* 
ba£
)

191 (Ë
	`MPI_Fªe_mem
(
ba£
);

192 
	}
}

200 
ölöe
 

201 
	gMPI
::
	$Clo£_p‹t
(c⁄° * 
p‹t_«me
)

203 (Ë
	`MPI_Clo£_p‹t
(
c⁄°_ˇ°
<*>(
p‹t_«me
));

204 
	}
}

207 
ölöe
 

208 
	gMPI
::
Lookup_«me
(c⁄° * 
£rvi˚_«me
,

209 c⁄° 
MPI
::
Info
& 
öfo
,

210 * 
p‹t_«me
)

212 (Ë
MPI_Lookup_«me
(
c⁄°_ˇ°
<*>(
£rvi˚_«me
), 
öfo
, 
p‹t_«me
);

216 
ölöe
 

217 
	gMPI
::
O≥n_p‹t
(c⁄° 
MPI
::
Info
& 
öfo
, * 
p‹t_«me
)

219 (Ë
MPI_O≥n_p‹t
(
öfo
, 
p‹t_«me
);

223 
ölöe
 

224 
	gMPI
::
Publish_«me
(c⁄° * 
£rvi˚_«me
,

225 c⁄° 
MPI
::
Info
& 
öfo
,

226 c⁄° * 
p‹t_«me
)

228 (Ë
MPI_Publish_«me
(
c⁄°_ˇ°
<*>(
£rvi˚_«me
), 
öfo
,

229 
c⁄°_ˇ°
<*>(
p‹t_«me
));

233 
ölöe
 

234 
	gMPI
::
U≈ublish_«me
(c⁄° * 
£rvi˚_«me
,

235 c⁄° 
MPI
::
Info
& 
öfo
,

236 c⁄° * 
p‹t_«me
)

238 ()
MPI_U≈ublish_«me
(
c⁄°_ˇ°
<*>(
£rvi˚_«me
), 
öfo
,

239 
c⁄°_ˇ°
<*>(
p‹t_«me
));

248 
ölöe
 

249 
	gMPI
::
	$Pc⁄åﬁ
(c⁄° 
Àvñ
, ...)

251 
va_li°
 
≠
;

252 
	`va_°¨t
(
≠
, 
Àvñ
);

254 ()
	`MPI_Pc⁄åﬁ
(
Àvñ
, 
≠
);

255 
	`va_íd
(
≠
);

256 
	}
}

259 
ölöe
 

260 
	gMPI
::
	$Gë_vîsi⁄
(& 
vîsi⁄
, & 
subvîsi⁄
)

262 ()
	`MPI_Gë_vîsi⁄
(&
vîsi⁄
, &
subvîsi⁄
);

263 
	}
}

266 
ölöe
 
	gMPI
::
Aöt


267 
MPI
::
	$Gë_addªss
(* 
loˇti⁄
)

269 
MPI
::
Aöt
 
ªt
;

270 
	`MPI_Gë_addªss
(
loˇti⁄
, &
ªt
);

271  
ªt
;

272 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/group.h

21 ˛as†
	cGroup
 {

25 
	mpublic
:

30 
ölöe
 
	$Group
() { }

31 
ölöe
 
	$Group
(
MPI_Group
 
i
Ë: 
	$pmpi_group
(
i
Ë{ 
	}
}

33 
ölöe
 
	$Group
(c⁄° 
Group
& 
g
Ë: 
	$pmpi_group
(
g
.
pmpi_group
Ë{ 
	}
}

35 
ölöe
 
Group
(c⁄° 
PMPI
::Group& 
g
Ë: 
	$pmpi_group
(
g
Ë{ 
	}
}

37 
ölöe
 
vútuÆ
 ~
	$Group
(Ë{
	}
}

39 
Group
& 
›î©‹
=(c⁄° Group& 
g
) {

40 
pmpi_group
 = 
g
.pmpi_group;  *
	gthis
;

44 
ölöe
 
boﬁ
 
	g›î©‹
=(c⁄° 
Group
 &
a
) {

45  (
boﬁ
)(
pmpi_group
 =
a
.pmpi_group);

47 
ölöe
 
boﬁ
 
	g›î©‹
!(c⁄° 
Group
 &
a
) {

48  (
boﬁ
)!(*
this
 =
a
);

52 
	gGroup
& 
	g›î©‹
(c⁄° 
MPI_Group
 &
i
Ë{ 
pmpi_group
 = i;  *
	gthis
; }

53 
ölöe
 
›î©‹
 
	$MPI_Group
 (Ëc⁄° {  
pmpi_group
.
	`mpi
(); 
	}
}

55 
ölöe
 
›î©‹
 c⁄° 
	gPMPI
::
Group
&(Ëc⁄° {  
pmpi_group
; }

57 c⁄° 
	gPMPI
::
Group
& 
	$pmpi
(Ë{  
pmpi_group
; 
	}
}

61 
ölöe
 
	$Group
(Ë: 
	$mpi_group
(
MPI_GROUP_NULL
Ë{ 
	}
}

62 
ölöe
 
	$Group
(
MPI_Group
 
i
Ë: 
	$mpi_group
(
i
Ë{ 
	}
}

65 
ölöe
 
	$Group
(c⁄° 
Group
& 
g
Ë: 
	$mpi_group
(
g
.
mpi_group
Ë{ 
	}
}

67 
ölöe
 
vútuÆ
 ~
	$Group
(Ë{
	}
}

69 
ölöe
 
Group
& 
›î©‹
=(c⁄° Group& 
g
Ë{ 
mpi_group
 = g.mpi_group;  *
	gthis
; }

72 
ölöe
 
boﬁ
 
	g›î©‹
=(c⁄° 
Group
 &
a
Ë{  (boﬁ)(
mpi_group
 ==á.mpi_group); }

73 
ölöe
 
boﬁ
 
	g›î©‹
!(c⁄° 
Group
 &
a
Ë{  (boﬁ)!(*
this
 ==á); }

76 
ölöe
 
	gGroup
& 
	g›î©‹
(c⁄° 
MPI_Group
 &
i
Ë{ 
mpi_group
 = i;  *
	gthis
; }

77 
ölöe
 
›î©‹
 
	$MPI_Group
 (Ëc⁄° {  
mpi_group
; 
	}
}

80 
ölöe
 
MPI_Group
 
	$mpi
(Ëc⁄° {  
mpi_group
; 
	}
}

88 
vútuÆ
 
	$Gë_size
() const;

90 
vútuÆ
 
	$Gë_ønk
() const;

92 
	`Tøn¶©e_ønks
 (c⁄° 
Group
& 
group1
, 
n
, c⁄° 
ønks1
[],

93 c⁄° 
Group
& 
group2
, 
ønks2
[]);

95 
	`Com∑ª
(c⁄° 
Group
& 
group1
, c⁄° Group& 
group2
);

97 
Group
 
	`Uni⁄
(c⁄° Grou∞&
group1
, c⁄° Grou∞&
group2
);

99 
Group
 
	`I¡î£˘
(c⁄° Grou∞&
group1
, c⁄° Grou∞&
group2
);

101 
Group
 
	`Dif„ªn˚
(c⁄° Grou∞&
group1
, c⁄° Grou∞&
group2
);

103 
vútuÆ
 
Group
 
	$In˛
(
n
, c⁄° 
ønks
[]) const;

105 
vútuÆ
 
Group
 
	$Ex˛
(
n
, c⁄° 
ønks
[]) const;

107 
vútuÆ
 
Group
 
	$R™ge_ö˛
(
n
, c⁄° 
ønges
[][3]) const;

109 
vútuÆ
 
Group
 
	$R™ge_ex˛
(
n
, c⁄° 
ønges
[][3]) const;

111 
vútuÆ
 
	`Fªe
();

113 
¥Ÿe˘ed
:

115 
MPI_Group
 
mpi_group
;

119 
¥iv©e
:

120 
PMPI
::
Group
 
pmpi_group
;

123 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/group_inln.h

24 
ölöe
 

25 
	gMPI
::
Group
::
	$Gë_size
() const

27 
size
;

28 ()
	`MPI_Group_size
(
mpi_group
, &
size
);

29  
size
;

30 
	}
}

32 
ölöe
 

33 
	gMPI
::
Group
::
	$Gë_ønk
() const

35 
ønk
;

36 ()
	`MPI_Group_ønk
(
mpi_group
, &
ønk
);

37  
ønk
;

38 
	}
}

40 
ölöe
 

41 
	gMPI
::
Group
::
Tøn¶©e_ønks
 (c⁄° 
MPI
::Group& 
group1
, 
n
,

42 c⁄° 
ønks1
[],

43 c⁄° 
MPI
::
Group
& 
group2
, 
ønks2
[])

45 ()
MPI_Group_å™¶©e_ønks
(
group1
, 
n
, 
c⁄°_ˇ°
<*>(
ønks1
), 
group2
, c⁄°_ˇ°<*>(
ønks2
));

48 
ölöe
 

49 
	gMPI
::
Group
::
Com∑ª
(c⁄° 
MPI
::Group& 
group1
, c⁄° MPI::Group& 
group2
)

51 
ªsu…
;

52 ()
MPI_Group_com∑ª
(
group1
, 
group2
, &
ªsu…
);

53  
	gªsu…
;

56 
ölöe
 
	gMPI
::
Group


57 
MPI
::
Group
::
Uni⁄
(c⁄° MPI::Grou∞&
group1
, c⁄° MPI::Grou∞&
group2
)

59 
MPI_Group
 
√wgroup
;

60 ()
MPI_Group_uni⁄
(
group1
, 
group2
, &
√wgroup
);

61  
	g√wgroup
;

64 
ölöe
 
	gMPI
::
Group


65 
MPI
::
Group
::
I¡î£˘
(c⁄° MPI::Grou∞&
group1
, c⁄° MPI::Grou∞&
group2
)

67 
MPI_Group
 
√wgroup
;

68 ()
MPI_Group_öãr£˘i⁄
–
group1
, 
group2
, &
√wgroup
);

69  
	g√wgroup
;

72 
ölöe
 
	gMPI
::
Group


73 
MPI
::
Group
::
Dif„ªn˚
(c⁄° MPI::Grou∞&
group1
, c⁄° MPI::Grou∞&
group2
)

75 
MPI_Group
 
√wgroup
;

76 ()
MPI_Group_dif„ªn˚
(
group1
, 
group2
, &
√wgroup
);

77  
	g√wgroup
;

80 
ölöe
 
	gMPI
::
Group


81 
MPI
::
Group
::
	$In˛
(
n
, c⁄° 
ønks
[]) const

83 
MPI_Group
 
√wgroup
;

84 ()
	`MPI_Group_ö˛
(
mpi_group
, 
n
, 
c⁄°_ˇ°
<*>(
ønks
), &
√wgroup
);

85  
√wgroup
;

86 
	}
}

88 
ölöe
 
	gMPI
::
Group


89 
MPI
::
Group
::
	$Ex˛
(
n
, c⁄° 
ønks
[]) const

91 
MPI_Group
 
√wgroup
;

92 ()
	`MPI_Group_ex˛
(
mpi_group
, 
n
, 
c⁄°_ˇ°
<*>(
ønks
), &
√wgroup
);

93  
√wgroup
;

94 
	}
}

96 
ölöe
 
	gMPI
::
Group


97 
MPI
::
Group
::
	$R™ge_ö˛
(
n
, c⁄° 
ønges
[][3]) const

99 
MPI_Group
 
√wgroup
;

100 ()
	`MPI_Group_ønge_ö˛
(
mpi_group
, 
n
,

101 #i‡
OMPI_CXX_SUPPORTS_2D_CONST_CAST


102 
c⁄°_ˇ°
<(*)[3]>(
ønges
),

104 ((*)[3]Ë
ønges
,

106 &
√wgroup
);

107  
√wgroup
;

108 
	}
}

110 
ölöe
 
	gMPI
::
Group


111 
MPI
::
Group
::
	$R™ge_ex˛
(
n
, c⁄° 
ønges
[][3]) const

113 
MPI_Group
 
√wgroup
;

114 ()
	`MPI_Group_ønge_ex˛
(
mpi_group
, 
n
,

115 #i‡
OMPI_CXX_SUPPORTS_2D_CONST_CAST


116 
c⁄°_ˇ°
<(*)[3]>(
ønges
),

118 ((*)[3]Ë
ønges
,

120 &
√wgroup
);

121  
√wgroup
;

122 
	}
}

124 
ölöe
 

125 
	gMPI
::
Group
::
	$Fªe
()

127 ()
	`MPI_Group_‰ì
(&
mpi_group
);

128 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/info.h

22 ˛as†
	cInfo
 {

26 
‰õnd
 
˛ass
 
	mMPI
::
Comm
;

27 
‰õnd
 
˛ass
 
	mMPI
::
Reque°
;

29 
	mpublic
:

33 
	$Info
() { }

34 
vútuÆ
 ~
	$Info
(Ë{
	}
}

38 
	$Info
(c⁄° 
Info
& 
d©a
Ë: 
	$pmpi_öfo
(
d©a
.
pmpi_öfo
Ë{ 
	}
}

40 
	$Info
(
MPI_Info
 
i
Ë: 
	$pmpi_öfo
(
i
Ë{ 
	}
}

42 
Info
& 
›î©‹
=(c⁄° Info& 
d©a
) {

43 
pmpi_öfo
 = 
d©a
.pmpi_öfo;  *
	gthis
; }

48 
	gInfo
& 
	g›î©‹
(c⁄° 
MPI_Info
 &
i
) {

49 
pmpi_öfo
 = 
i
;  *
	gthis
; }

50 
›î©‹
 
	$MPI_Info
 (Ëc⁄° {  
pmpi_öfo
; 
	}
}

52 
›î©‹
 c⁄° 
	gPMPI
::
Info
&(Ëc⁄° {  
pmpi_öfo
; }

57 
	$Info
(Ë{ 
	}
}

59 
	$Info
(c⁄° 
Info
& 
d©a
Ë: 
	$mpi_öfo
(
d©a
.
mpi_öfo
Ë{ 
	}
}

61 
	$Info
(
MPI_Info
 
i
Ë: 
	$mpi_öfo
(
i
Ë{ 
	}
}

63 
vútuÆ
 ~
	$Info
(Ë{
	}
}

65 
Info
& 
›î©‹
=(c⁄° Info& 
d©a
) {

66 
mpi_öfo
 = 
d©a
.mpi_öfo;  *
	gthis
; }

71 
	gInfo
& 
	g›î©‹
(c⁄° 
MPI_Info
 &
i
) {

72 
mpi_öfo
 = 
i
;  *
	gthis
; }

73 
›î©‹
 
	$MPI_Info
 (Ëc⁄° {  
mpi_öfo
; 
	}
}

78 
Info
 
Cª©e
();

80 
vútuÆ
 
Dñëe
(c⁄° * 
key
);

82 
vútuÆ
 
Info
 
	$Dup
() const;

84 
vútuÆ
 
	`Fªe
();

86 
vútuÆ
 
boﬁ
 
	$Gë
(c⁄° * 
key
, 
vÆuñí
, * 
vÆue
) const;

88 
vútuÆ
 
	$Gë_nkeys
() const;

90 
vútuÆ
 
	$Gë_¡hkey
(
n
, * 
key
) const;

92 
vútuÆ
 
boﬁ
 
	$Gë_vÆuñí
(c⁄° * 
key
, & 
vÆuñí
) const;

94 
vútuÆ
 
	`Së
(c⁄° * 
key
, c⁄° * 
vÆue
);

96 
¥Ÿe˘ed
:

98 
PMPI
::
Info
 
pmpi_öfo
;

100 
MPI_Info
 
mpi_öfo
;

103 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/info_inln.h

21 
ölöe
 
	gMPI
::
Info


22 
MPI
::
Info
::
	$Cª©e
()

24 
MPI_Info
 
√wöfo
;

25 (Ë
	`MPI_Info_¸óã
(&
√wöfo
);

26  
√wöfo
;

27 
	}
}

29 
ölöe
 

30 
	gMPI
::
Info
::
	$Dñëe
(c⁄° * 
key
)

32 ()
	`MPI_Info_dñëe
(
mpi_öfo
, 
c⁄°_ˇ°
<*>(
key
));

33 
	}
}

35 
ölöe
 
	gMPI
::
Info


36 
MPI
::
Info
::
	$Dup
() const

38 
MPI_Info
 
√wöfo
;

39 ()
	`MPI_Info_dup
(
mpi_öfo
, &
√wöfo
);

40  
√wöfo
;

41 
	}
}

43 
ölöe
 

44 
	gMPI
::
Info
::
	$Fªe
()

46 (Ë
	`MPI_Info_‰ì
(&
mpi_öfo
);

47 
	}
}

49 
ölöe
 
boﬁ


50 
	gMPI
::
Info
::
	$Gë
(c⁄° * 
key
, 
vÆuñí
, * 
vÆue
) const

52 
Êag
;

53 ()
	`MPI_Info_gë
(
mpi_öfo
, 
c⁄°_ˇ°
<*>(
key
), 
vÆuñí
, 
vÆue
, &
Êag
);

54  
	`OPAL_INT_TO_BOOL
(
Êag
);

55 
	}
}

57 
ölöe
 

58 
	gMPI
::
Info
::
	$Gë_nkeys
() const

60 
nkeys
;

61 
	`MPI_Info_gë_nkeys
(
mpi_öfo
, &
nkeys
);

62  
nkeys
;

63 
	}
}

65 
ölöe
 

66 
	gMPI
::
Info
::
	$Gë_¡hkey
(
n
, * 
key
) const

68 (Ë
	`MPI_Info_gë_¡hkey
(
mpi_öfo
, 
n
, 
key
);

69 
	}
}

71 
ölöe
 
boﬁ


72 
	gMPI
::
Info
::
	$Gë_vÆuñí
(c⁄° * 
key
, & 
vÆuñí
) const

74 
Êag
;

75 (Ë
	`MPI_Info_gë_vÆuñí
(
mpi_öfo
, 
c⁄°_ˇ°
<*>(
key
), &
vÆuñí
, &
Êag
);

76  
	`OPAL_INT_TO_BOOL
(
Êag
);

77 
	}
}

79 
ölöe
 

80 
	gMPI
::
Info
::
	$Së
(c⁄° * 
key
, c⁄° * 
vÆue
)

82 (Ë
	`MPI_Info_£t
(
mpi_öfo
, 
c⁄°_ˇ°
<*>(
key
), c⁄°_ˇ°<*>(
vÆue
));

83 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/intercomm.h

22 ˛as†
	cI¡îcomm
 : 
public
 
Comm
 {

26 
public
:

29 
	$I¡îcomm
(Ë: 
	$Comm
(
MPI_COMM_NULL
) { }

31 
	$I¡îcomm
(c⁄° 
Comm_NuŒ
& 
d©a
Ë: 
	$Comm
(
d©a
Ë{ 
	}
}

33 
	$I¡îcomm
(
MPI_Comm
 
d©a
Ë: 
	$Comm
(
d©a
Ë{ 
	}
}

37 
	$I¡îcomm
(c⁄° 
I¡îcomm
& 
d©a
Ë: 
	`Comm
(d©a), 
	$pmpi_comm
(
d©a
.
pmpi_comm
Ë{ 
	}
}

38 
I¡îcomm
(c⁄° 
PMPI
::I¡îcomm& 
d
) :

39 
Comm
((c⁄° 
PMPI
::Comm&)
d
), 
	$pmpi_comm
(
d
Ë{ 
	}
}

42 
	gI¡îcomm
& 
	g›î©‹
=(c⁄° 
I¡îcomm
& 
d©a
) {

43 
Comm
::
›î©‹
=(
d©a
);

44 
	gpmpi_comm
 = 
d©a
.
pmpi_comm
;  *
	gthis
; }

45 
	gI¡îcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

46 
Comm
::
›î©‹
=(
d©a
);

47 
	gI¡îcomm
& 
	gic
 = (
I¡îcomm
&)
d©a
;

48 
	gpmpi_comm
 = 
ic
.
pmpi_comm
;  *
	gthis
; }

50 
	gI¡îcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

51 
Comm
::
›î©‹
=(
d©a
);

52 
	gpmpi_comm
 = 
PMPI
::
I¡îcomm
(
d©a
);  *
	gthis
; }

55 
	$I¡îcomm
(c⁄° 
I¡îcomm
& 
d©a
Ë: 
	$Comm
(
d©a
.
mpi_comm
Ë{ 
	}
}

57 
I¡îcomm
& 
›î©‹
=(c⁄° I¡îcomm& 
d©a
) {

58 
mpi_comm
 = 
d©a
.mpi_comm;  *
	gthis
; }

59 
	gI¡îcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

60 
mpi_comm
 = 
d©a
;  *
	gthis
; }

62 
	gI¡îcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

63 
mpi_comm
 = 
d©a
;  *
	gthis
; }

72 
I¡îcomm
 
	$Dup
() const;

74 
vútuÆ
 
I¡îcomm
& 
	$Cl⁄e
() const;

76 
vútuÆ
 
	$Gë_ªmŸe_size
() const;

78 
vútuÆ
 
Group
 
	$Gë_ªmŸe_group
() const;

80 
vútuÆ
 
I¡øcomm
 
	`Mîge
(
boﬁ
 
high
);

82 
vútuÆ
 
I¡îcomm
 
	$Cª©e
(c⁄° 
Group
& 
group
) const;

84 
vútuÆ
 
I¡îcomm
 
	$S∂ô
(
cﬁ‹
, 
key
) const;

86 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/intercomm_inln.h

20 
ölöe
 
	gMPI
::
I¡îcomm


21 
MPI
::
I¡îcomm
::
	$Dup
() const

23 
MPI_Comm
 
√wcomm
;

24 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

25  
√wcomm
;

26 
	}
}

28 
ölöe
 
	gMPI
::
I¡îcomm
&

29 
MPI
::
I¡îcomm
::
	$Cl⁄e
() const

31 
MPI_Comm
 
√wcomm
;

32 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

33 
MPI
::
I¡îcomm
* 
dup
 = 
√w
 MPI::
	`I¡îcomm
(
√wcomm
);

34  *
dup
;

35 
	}
}

37 
ölöe
 

38 
	gMPI
::
I¡îcomm
::
	$Gë_ªmŸe_size
() const

40 
size
;

41 ()
	`MPI_Comm_ªmŸe_size
(
mpi_comm
, &
size
);

42  
size
;

43 
	}
}

45 
ölöe
 
	gMPI
::
Group


46 
MPI
::
I¡îcomm
::
	$Gë_ªmŸe_group
() const

48 
MPI_Group
 
group
;

49 ()
	`MPI_Comm_ªmŸe_group
(
mpi_comm
, &
group
);

50  
group
;

51 
	}
}

53 
ölöe
 
	gMPI
::
I¡øcomm


54 
MPI
::
I¡îcomm
::
	$Mîge
(
boﬁ
 
high
)

56 
MPI_Comm
 
√wcomm
;

57 ()
	`MPI_I¡îcomm_mîge
(
mpi_comm
, ()
high
, &
√wcomm
);

58  
√wcomm
;

59 
	}
}

66 
ölöe
 
	gMPI
::
I¡îcomm


67 
MPI
::
I¡îcomm
::
	$Cª©e
(c⁄° 
Group
& 
group
) const

69 
MPI_Comm
 
√wcomm
;

70 (Ë
	`MPI_Comm_¸óã
(
mpi_comm
, (
MPI_Group
Ë
group
, &
√wcomm
);

71  
√wcomm
;

72 
	}
}

74 
ölöe
 
	gMPI
::
I¡îcomm


75 
MPI
::
I¡îcomm
::
	$S∂ô
(
cﬁ‹
, 
key
) const

77 
MPI_Comm
 
√wcomm
;

78 (Ë
	`MPI_Comm_•lô
(
mpi_comm
, 
cﬁ‹
, 
key
, &
√wcomm
);

79  
√wcomm
;

80 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/intracomm.h

21 ˛as†
	cI¡øcomm
 : 
public
 
Comm
 {

22 
public
:

25 
	$I¡øcomm
() { }

27 
	$I¡øcomm
(c⁄° 
Comm_NuŒ
& 
d©a
Ë: 
	$Comm
(
d©a
Ë{ 
	}
}

37 
	$I¡øcomm
(c⁄° 
I¡øcomm
& 
d©a
Ë: 
	`Comm
(d©a), 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

39 
	$I¡øcomm
(
MPI_Comm
 
d©a
Ë: 
	`Comm
(d©a), 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

41 
I¡øcomm
(c⁄° 
PMPI
::I¡øcomm& 
d©a
)

42 : 
Comm
((c⁄° 
PMPI
::Comm&)
d©a
), 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

45 
	gI¡øcomm
& 
	g›î©‹
=(c⁄° 
I¡øcomm
& 
d©a
) {

46 
Comm
::
›î©‹
=(
d©a
);

47 
	gpmpi_comm
 = 
d©a
.
pmpi_comm
;

48  *
	gthis
;

50 
	gI¡øcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

51 
Comm
::
›î©‹
=(
d©a
);

52 
	gpmpi_comm
 = (
PMPI
::
I¡øcomm
)
d©a
;  *
	gthis
;

55 
	gI¡øcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

56 
Comm
::
›î©‹
=(
d©a
);

57 
	gpmpi_comm
 = 
d©a
;

58  *
	gthis
;

62 
	$I¡øcomm
(c⁄° 
I¡øcomm
& 
d©a
Ë: 
	$Comm
(
d©a
.
mpi_comm
Ë{ 
	}
}

64 
ölöe
 
I¡øcomm
(
MPI_Comm
 
d©a
);

67 
	gI¡øcomm
& 
	g›î©‹
=(c⁄° 
I¡øcomm
& 
d©a
) {

68 
mpi_comm
 = 
d©a
.mpi_comm;  *
	gthis
;

71 
	gI¡øcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

72 
mpi_comm
 = 
d©a
;  *
	gthis
;

76 
	gI¡øcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

77 
mpi_comm
 = 
d©a
;  *
	gthis
; }

87 
vútuÆ
 

88 
	$Sˇn
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

89 c⁄° 
D©©y≥
 & 
d©©y≥
, c⁄° 
Op
 & 
›
) const;

91 
vútuÆ
 

92 
	$Exsˇn
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

93 c⁄° 
D©©y≥
 & 
d©©y≥
, c⁄° 
Op
 & 
›
) const;

99 
I¡øcomm
 
	$Dup
() const;

101 
vútuÆ
 
I¡øcomm
& 
	$Cl⁄e
() const;

103 
vútuÆ
 
I¡øcomm


104 
	$Cª©e
(c⁄° 
Group
& 
group
) const;

106 
vútuÆ
 
I¡øcomm


107 
	$S∂ô
(
cﬁ‹
, 
key
) const;

109 
vútuÆ
 
I¡îcomm


110 
	$Cª©e_öãrcomm
(
loˇl_Àadî
, c⁄° 
Comm
& 
≥î_comm
,

111 
ªmŸe_Àadî
, 
èg
) const;

113 
vútuÆ
 
C¨tcomm


114 
	$Cª©e_ˇπ
(
ndims
, c⁄° 
dims
[],

115 c⁄° 
boﬁ
 
≥riods
[], boﬁ 
ª‹dî
) const;

117 
vútuÆ
 
Gøphcomm


118 
	$Cª©e_gøph
(
¬odes
, c⁄° 
ödex
[],

119 c⁄° 
edges
[], 
boﬁ
 
ª‹dî
) const;

126 
vútuÆ
 
I¡îcomm
 
	$Ac˚±
(c⁄° * 
p‹t_«me
, c⁄° 
Info
& 
öfo
, 
roŸ
)

129 
vútuÆ
 
I¡îcomm
 
	$C⁄√˘
(c⁄° * 
p‹t_«me
, c⁄° 
Info
& 
öfo
, 
roŸ
)

132 
vútuÆ
 
I¡îcomm
 
	$S∑wn
(c⁄° * 
comm™d
, c⁄° * 
¨gv
[],

133 
max¥ocs
, c⁄° 
Info
& 
öfo
, 
roŸ
) const;

135 
vútuÆ
 
I¡îcomm
 
	$S∑wn
(c⁄° * 
comm™d
, c⁄° * 
¨gv
[],

136 
max¥ocs
, c⁄° 
Info
& 
öfo
,

137 
roŸ
, 
¨øy_of_îrcodes
[]) const;

139 
vútuÆ
 
I¡îcomm
 
	`S∑wn_mu…ùÀ
(
cou¡
, c⁄° * 
¨øy_of_comm™ds
[],

140 c⁄° ** 
¨øy_of_¨gv
[],

141 c⁄° 
¨øy_of_max¥ocs
[],

142 c⁄° 
Info
 
¨øy_of_öfo
[], 
roŸ
);

144 
vútuÆ
 
I¡îcomm
 
	`S∑wn_mu…ùÀ
(
cou¡
, c⁄° * 
¨øy_of_comm™ds
[],

145 c⁄° ** 
¨øy_of_¨gv
[],

146 c⁄° 
¨øy_of_max¥ocs
[],

147 c⁄° 
Info
 
¨øy_of_öfo
[], 
roŸ
,

148 
¨øy_of_îrcodes
[]);

154 
¥Ÿe˘ed
:

158 
PMPI
::
I¡øcomm
 
pmpi_comm
;

164 
ölöe
 
MPI_Info
 *
	`c⁄vît_öfo_to_mpi_öfo
(
p_nbr
,

165 c⁄° 
Info
 
p_öfo_tbl
[]);

166 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/intracomm_inln.h

22 
ölöe


23 
	gMPI
::
I¡øcomm
::
	$I¡øcomm
(
MPI_Comm
 
d©a
) {

24 
Êag
 = 0;

25 i‡(
MPI
::
	`Is_öôülized
(Ë&& (
d©a
 !
MPI_COMM_NULL
)) {

26 ()
	`MPI_Comm_ã°_öãr
(
d©a
, &
Êag
);

27 i‡(
Êag
) {

28 
mpi_comm
 = 
MPI_COMM_NULL
;

30 
mpi_comm
 = 
d©a
;

34 
mpi_comm
 = 
d©a
;

36 
	}
}

38 
ölöe
 

39 
	gMPI
::
I¡øcomm
::
Sˇn
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

40 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
, c⁄° MPI::
Op
& 
›
) const

42 ()
MPI_Sˇn
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
ªcvbuf
, 
cou¡
, 
d©©y≥
, 
›
, 
mpi_comm
);

45 
ölöe
 

46 
	gMPI
::
I¡øcomm
::
Exsˇn
(c⁄° *
£ndbuf
, *
ªcvbuf
, 
cou¡
,

47 c⁄° 
MPI
::
D©©y≥
 & 
d©©y≥
,

48 c⁄° 
MPI
::
Op
& 
›
) const

50 ()
MPI_Exsˇn
(
c⁄°_ˇ°
<*>(
£ndbuf
), 
ªcvbuf
, 
cou¡
, 
d©©y≥
, 
›
, 
mpi_comm
);

53 
ölöe
 
	gMPI
::
I¡øcomm


54 
MPI
::
I¡øcomm
::
	$Dup
() const

56 
MPI_Comm
 
√wcomm
;

57 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

58  
√wcomm
;

59 
	}
}

61 
ölöe
 
	gMPI
::
I¡øcomm
&

62 
MPI
::
I¡øcomm
::
	$Cl⁄e
() const

64 
MPI_Comm
 
√wcomm
;

65 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

66 
MPI
::
I¡øcomm
* 
dup
 = 
√w
 MPI::
	`I¡øcomm
(
√wcomm
);

67  *
dup
;

68 
	}
}

70 
ölöe
 
	gMPI
::
I¡øcomm


71 
MPI
::
I¡øcomm
::
Cª©e
(c⁄° MPI::
Group
& 
group
) const

73 
MPI_Comm
 
√wcomm
;

74 ()
MPI_Comm_¸óã
(
mpi_comm
, 
group
, &
√wcomm
);

75  
	g√wcomm
;

78 
ölöe
 
	gMPI
::
I¡øcomm


79 
MPI
::
I¡øcomm
::
	$S∂ô
(
cﬁ‹
, 
key
) const

81 
MPI_Comm
 
√wcomm
;

82 ()
	`MPI_Comm_•lô
(
mpi_comm
, 
cﬁ‹
, 
key
, &
√wcomm
);

83  
√wcomm
;

84 
	}
}

88 
ölöe
 
	gMPI
::
I¡îcomm


89 
MPI
::
I¡øcomm
::
Cª©e_öãrcomm
(
loˇl_Àadî
,

90 c⁄° 
MPI
::
Comm
& 
≥î_comm
,

91 
ªmŸe_Àadî
, 
èg
) const

93 
MPI_Comm
 
	g√wöãrcomm
;

94 ()
MPI_I¡îcomm_¸óã
(
mpi_comm
, 
loˇl_Àadî
, 
≥î_comm
,

95 
ªmŸe_Àadî
, 
èg
, &
√wöãrcomm
);

96  
	g√wöãrcomm
;

99 
ölöe
 
	gMPI
::
C¨tcomm


100 
MPI
::
I¡øcomm
::
	$Cª©e_ˇπ
(
ndims
, c⁄° 
dims
[],

101 c⁄° 
boﬁ
 
≥riods
[], boﬁ 
ª‹dî
) const

103 *
öt_≥riods
 = 
√w
 [
ndims
];

104 
i
=0; i<
ndims
; i++)

105 
öt_≥riods
[
i
] = (Ë
≥riods
[i];

107 
MPI_Comm
 
√wcomm
;

108 ()
	`MPI_C¨t_¸óã
(
mpi_comm
, 
ndims
, 
c⁄°_ˇ°
<*>(
dims
),

109 
öt_≥riods
, ()
ª‹dî
, &
√wcomm
);

110 
dñëe
 [] 
öt_≥riods
;

111  
√wcomm
;

112 
	}
}

114 
ölöe
 
	gMPI
::
Gøphcomm


115 
MPI
::
I¡øcomm
::
	$Cª©e_gøph
(
¬odes
, c⁄° 
ödex
[],

116 c⁄° 
edges
[], 
boﬁ
 
ª‹dî
) const

118 
MPI_Comm
 
√wcomm
;

119 ()
	`MPI_Gøph_¸óã
(
mpi_comm
, 
¬odes
, 
c⁄°_ˇ°
<*>(
ödex
),

120 
c⁄°_ˇ°
<*>(
edges
), ()
ª‹dî
, &
√wcomm
);

121  
√wcomm
;

122 
	}
}

129 
ölöe
 
	gMPI
::
I¡îcomm


130 
MPI
::
I¡øcomm
::
Ac˚±
(c⁄° * 
p‹t_«me
,

131 c⁄° 
MPI
::
Info
& 
öfo
,

132 
roŸ
) const

134 
MPI_Comm
 
	g√wcomm
;

135 (Ë
MPI_Comm_ac˚±
(
c⁄°_ˇ°
<*>(
p‹t_«me
), 
öfo
, 
roŸ
, 
mpi_comm
,

136 &
√wcomm
);

137  
	g√wcomm
;

141 
ölöe
 
	gMPI
::
I¡îcomm


142 
MPI
::
I¡øcomm
::
C⁄√˘
(c⁄° * 
p‹t_«me
,

143 c⁄° 
MPI
::
Info
& 
öfo
,

144 
roŸ
) const

146 
MPI_Comm
 
	g√wcomm
;

147 (Ë
MPI_Comm_c⁄√˘
(
c⁄°_ˇ°
<*>(
p‹t_«me
), 
öfo
, 
roŸ
, 
mpi_comm
,

148 &
√wcomm
);

149  
	g√wcomm
;

153 
ölöe
 
	gMPI
::
I¡îcomm


154 
MPI
::
I¡øcomm
::
S∑wn
(c⁄° * 
comm™d
, c⁄° * 
¨gv
[],

155 
max¥ocs
, c⁄° 
MPI
::
Info
& 
öfo
,

156 
roŸ
) const

158 
MPI_Comm
 
	g√wcomm
;

159 (Ë
MPI_Comm_•awn
(
c⁄°_ˇ°
<*>(
comm™d
), c⁄°_ˇ°<**>(
¨gv
), 
max¥ocs
,

160 
öfo
, 
roŸ
, 
mpi_comm
, &
√wcomm
,

161 (*)
MPI_ERRCODES_IGNORE
);

162  
	g√wcomm
;

166 
ölöe
 
	gMPI
::
I¡îcomm


167 
MPI
::
I¡øcomm
::
S∑wn
(c⁄° * 
comm™d
, c⁄° * 
¨gv
[],

168 
max¥ocs
, c⁄° 
MPI
::
Info
& 
öfo
,

169 
roŸ
, 
¨øy_of_îrcodes
[]) const

171 
MPI_Comm
 
	g√wcomm
;

172 (Ë
MPI_Comm_•awn
(
c⁄°_ˇ°
<*>(
comm™d
), c⁄°_ˇ°<**>(
¨gv
), 
max¥ocs
,

173 
öfo
, 
roŸ
, 
mpi_comm
, &
√wcomm
,

174 
¨øy_of_îrcodes
);

175  
	g√wcomm
;

179 
ölöe
 
	gMPI
::
I¡îcomm


180 
MPI
::
I¡øcomm
::
	$S∑wn_mu…ùÀ
(
cou¡
,

181 c⁄° * 
¨øy_of_comm™ds
[],

182 c⁄° ** 
¨øy_of_¨gv
[],

183 c⁄° 
¨øy_of_max¥ocs
[],

184 c⁄° 
Info
 
¨øy_of_öfo
[], 
roŸ
)

186 
MPI_Comm
 
√wcomm
;

187 
MPI_Info
 *c⁄° 
¨øy_of_mpi_öfo
 =

188 
	`c⁄vît_öfo_to_mpi_öfo
(
cou¡
, 
¨øy_of_öfo
);

190 
	`MPI_Comm_•awn_mu…ùÀ
(
cou¡
, 
c⁄°_ˇ°
<**>(
¨øy_of_comm™ds
),

191 
c⁄°_ˇ°
<***>(
¨øy_of_¨gv
),

192 
c⁄°_ˇ°
<*>(
¨øy_of_max¥ocs
),

193 
¨øy_of_mpi_öfo
, 
roŸ
,

194 
mpi_comm
, &
√wcomm
, (*)
MPI_ERRCODES_IGNORE
);

195 
dñëe
[] 
¨øy_of_mpi_öfo
;

196  
√wcomm
;

197 
	}
}

199 
ölöe
 
MPI_Info
 *

200 
	gMPI
::
I¡øcomm
::
	$c⁄vît_öfo_to_mpi_öfo
(
p_nbr
, c⁄° 
Info
 
p_öfo_tbl
[])

202 
MPI_Info
 *c⁄° 
mpi_öfo_tbl
 = 
√w
 MPI_Infÿ[
p_nbr
];

204 
i_tbl
=0; i_tb»< 
p_nbr
; i_tbl++) {

205 
mpi_öfo_tbl
[
i_tbl
] = 
p_öfo_tbl
[i_tbl];

208  
mpi_öfo_tbl
;

209 
	}
}

211 
ölöe
 
	gMPI
::
I¡îcomm


212 
MPI
::
I¡øcomm
::
	$S∑wn_mu…ùÀ
(
cou¡
,

213 c⁄° * 
¨øy_of_comm™ds
[],

214 c⁄° ** 
¨øy_of_¨gv
[],

215 c⁄° 
¨øy_of_max¥ocs
[],

216 c⁄° 
Info
 
¨øy_of_öfo
[], 
roŸ
,

217 
¨øy_of_îrcodes
[])

219 
MPI_Comm
 
√wcomm
;

220 
MPI_Info
 *c⁄° 
¨øy_of_mpi_öfo
 =

221 
	`c⁄vît_öfo_to_mpi_öfo
(
cou¡
, 
¨øy_of_öfo
);

223 
	`MPI_Comm_•awn_mu…ùÀ
(
cou¡
, 
c⁄°_ˇ°
<**>(
¨øy_of_comm™ds
),

224 
c⁄°_ˇ°
<***>(
¨øy_of_¨gv
),

225 
c⁄°_ˇ°
<*>(
¨øy_of_max¥ocs
),

226 
¨øy_of_mpi_öfo
, 
roŸ
,

227 
mpi_comm
, &
√wcomm
, 
¨øy_of_îrcodes
);

228 
dñëe
[] 
¨øy_of_mpi_öfo
;

229  
√wcomm
;

230 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/op.h

21 ˛as†
	cOp
 {

22 
	mpublic
:

25 
Op
();

26 
Op
(
MPI_Op
 
i
);

27 
Op
(c⁄° Op& 
›
);

29 
Op
(c⁄° 
PMPI
::Op& 
›
Ë: 
	$pmpi_›
(
›
) { }

32 
vútuÆ
 ~
	`Op
();

34 
Op
& 
›î©‹
=(c⁄° Op& 
›
);

35 
Op
& 
›î©‹
(c⁄° 
MPI_Op
 &
i
);

37 
ölöe
 
boﬁ
 
›î©‹
=(c⁄° 
Op
 &
a
);

38 
ölöe
 
boﬁ
 
›î©‹
!(c⁄° 
Op
 &
a
);

40 
ölöe
 
›î©‹
 
	$MPI_Op
 () const;

43 
ölöe
 
›î©‹
 c⁄° 
PMPI
::
Op
&(Ëc⁄° {  
pmpi_›
; 
	}
}

47 
vútuÆ
 
Inô
(
U£r_fun˘i⁄
 *
func
, 
boﬁ
 
commuã
);

48 
vútuÆ
 
Fªe
();

51 
	g¥Ÿe˘ed
:

52 
MPI_Op
 
mpi_›
;

56 
	g¥iv©e
:

57 
PMPI
::
Op
 
pmpi_›
;

	@/usr/include/openmpi/ompi/mpi/cxx/op_inln.h

23 
ölöe


24 
	gMPI
::
Op
::
	$Op
(Ë{ 
	}
}

26 
ölöe


27 
MPI
::
Op
::Op(c⁄° MPI::Op& 
o
Ë: 
	$pmpi_›
(
o
.
pmpi_›
Ë{ 
	}
}

29 
ölöe


30 
MPI
::
Op
::
	$Op
(
MPI_Op
 
o
Ë: 
	$pmpi_›
(
o
Ë{ 
	}
}

32 
ölöe


33 
MPI
::
Op
::~
	$Op
(Ë{ 
	}
}

35 
ölöe


36 
MPI
::
Op
& MPI::Op::
›î©‹
=(c⁄° MPI::Op& 
›
) {

37 
pmpi_›
 = 
›
.pmpi_›;  *
	gthis
;

41 
ölöe
 
boﬁ


42 
	gMPI
::
Op
::
›î©‹
=(c⁄° 
MPI
::O∞&
a
) {

43  (
boﬁ
)(
pmpi_›
 =
a
.pmpi_op);

46 
ölöe
 
boﬁ


47 
	gMPI
::
Op
::
›î©‹
!(c⁄° 
MPI
::O∞&
a
) {

48  (
boﬁ
)!(*
this
 =
a
);

52 
ölöe
 
	gMPI
::
Op
&

53 
MPI
::
Op
::
›î©‹
(c⁄° 
MPI_Op
 &
i
Ë{ 
pmpi_›
 = i;  *
	gthis
; }

55 
ölöe


56 
	gMPI
::
Op
::
›î©‹
 
	$MPI_Op
 (Ëc⁄° {  
pmpi_›
; 
	}
}

65 
ölöe


66 
	gMPI
::
Op
::
	$Op
(Ë: 
	$mpi_›
(
MPI_OP_NULL
Ë{ 
	}
}

68 
ölöe


69 
MPI
::
Op
::
	$Op
(
MPI_Op
 
i
Ë: 
	$mpi_›
(
i
Ë{ 
	}
}

71 
ölöe


72 
MPI
::
Op
::Op(c⁄° MPI::Op& 
›
)

73 : 
	$mpi_›
(
›
.
mpi_›
Ë{ 
	}
}

75 
ölöe


76 
MPI
::
Op
::~
	$Op
()

79 
mpi_›
 = 
MPI_OP_NULL
;

80 
›_u£r_fun˘i⁄
 = 0;

82 
	}
}

84 
ölöe
 
	gMPI
::
Op
&

85 
MPI
::
Op
::
›î©‹
=(c⁄° MPI::Op& 
›
) {

86 
mpi_›
 = 
›
.mpi_op;

87  *
	gthis
;

91 
ölöe
 
boﬁ


92 
	gMPI
::
Op
::
›î©‹
=(c⁄° 
MPI
::O∞&
a
Ë{  (
boﬁ
)(
mpi_›
 ==á.mpi_op); }

94 
ölöe
 
boﬁ


95 
	gMPI
::
Op
::
›î©‹
!(c⁄° 
MPI
::O∞&
a
Ë{  (
boﬁ
)!(*
this
 ==á); }

98 
ölöe
 
	gMPI
::
Op
&

99 
MPI
::
Op
::
›î©‹
(c⁄° 
MPI_Op
 &
i
Ë{ 
mpi_›
 = i;  *
	gthis
; }

101 
ölöe


102 
	gMPI
::
Op
::
›î©‹
 
	$MPI_Op
 (Ëc⁄° {  
mpi_›
; 
	}
}

113 "C" 
ompi_›_£t_cxx_ˇŒback
(
MPI_Op
 
›
, 
MPI_U£r_fun˘i⁄
*);

118 
ölöe
 

119 
	gMPI
::
Op
::
Inô
(
MPI
::
U£r_fun˘i⁄
 *
func
, 
boﬁ
 
commuã
)

121 ()
MPI_Op_¸óã
((
MPI_U£r_fun˘i⁄
*Ë
ompi_mpi_cxx_›_öãr˚±
,

122 (Ë
commuã
, &
mpi_›
);

123 
ompi_›_£t_cxx_ˇŒback
(
mpi_›
, (
MPI_U£r_fun˘i⁄
*Ë
func
);

127 
ölöe
 

128 
	gMPI
::
Op
::
	$Fªe
()

130 ()
	`MPI_Op_‰ì
(&
mpi_›
);

131 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/request.h

22 ˛as†
	cReque°
 {

26 
	mpublic
:

30 
	$Reque°
() { }

31 
	$Reque°
(
MPI_Reque°
 
i
Ë: 
	$pmpi_ªque°
(
i
Ë{ 
	}
}

34 
	$Reque°
(c⁄° 
Reque°
& 
r
Ë: 
	$pmpi_ªque°
(
r
.
pmpi_ªque°
Ë{ 
	}
}

36 
Reque°
(c⁄° 
PMPI
::Reque°& 
r
Ë: 
	$pmpi_ªque°
(
r
Ë{ 
	}
}

38 
vútuÆ
 ~
	$Reque°
(Ë{
	}
}

40 
Reque°
& 
›î©‹
=(c⁄° Reque°& 
r
) {

41 
pmpi_ªque°
 = 
r
.pmpi_ªque°;  *
	gthis
; }

44 
boﬁ
 
	g›î©‹
=(c⁄° 
Reque°
 &
a
)

45 {  (
boﬁ
)(
pmpi_ªque°
 =
a
.pmpi_request); }

46 
boﬁ
 
	g›î©‹
!(c⁄° 
Reque°
 &
a
)

47 {  (
boﬁ
)!(*
this
 =
a
); }

50 
	gReque°
& 
	g›î©‹
(c⁄° 
MPI_Reque°
 &
i
) {

51 
pmpi_ªque°
 = 
i
;  *
	gthis
; }

53 
›î©‹
 
	$MPI_Reque°
 (Ëc⁄° {  
pmpi_ªque°
; 
	}
}

55 
›î©‹
 c⁄° 
	gPMPI
::
Reque°
&(Ëc⁄° {  
pmpi_ªque°
; }

60 
	$Reque°
(Ë{ 
mpi_ªque°
 = 
MPI_REQUEST_NULL
; 
	}
}

61 
	gvútuÆ
 ~
	$Reque°
(Ë{
	}
}

62 
	$Reque°
(
MPI_Reque°
 
i
Ë: 
	$mpi_ªque°
(
i
Ë{ 
	}
}

65 
	$Reque°
(c⁄° 
Reque°
& 
r
Ë: 
	$mpi_ªque°
(
r
.
mpi_ªque°
Ë{ 
	}
}

67 
Reque°
& 
›î©‹
=(c⁄° Reque°& 
r
) {

68 
mpi_ªque°
 = 
r
.mpi_ªque°;  *
	gthis
; }

71 
boﬁ
 
	g›î©‹
=(c⁄° 
Reque°
 &
a
)

72 {  (
boﬁ
)(
mpi_ªque°
 =
a
.mpi_request); }

73 
boﬁ
 
	g›î©‹
!(c⁄° 
Reque°
 &
a
)

74 {  (
boﬁ
)!(*
this
 =
a
); }

77 
	gReque°
& 
	g›î©‹
(c⁄° 
MPI_Reque°
 &
i
) {

78 
mpi_ªque°
 = 
i
;  *
	gthis
; }

79 
›î©‹
 
	$MPI_Reque°
 (Ëc⁄° {  
mpi_ªque°
; 
	}
}

88 
vútuÆ
 
Waô
(
Sètus
 &
°©us
);

90 
vútuÆ
 
Waô
();

92 
vútuÆ
 
boﬁ
 
Te°
(
Sètus
 &
°©us
);

94 
vútuÆ
 
boﬁ
 
Te°
();

96 
vútuÆ
 
Fªe
();

98 
Waô™y
(
cou¡
, 
Reque°
 
¨øy
[], 
Sètus
& 
°©us
);

100 
Waô™y
(
cou¡
, 
Reque°
 
¨øy
[]);

102 
boﬁ
 
Te°™y
(
cou¡
, 
Reque°
 
¨øy
[], & 
ödex
, 
Sètus
& 
°©us
);

104 
boﬁ
 
Te°™y
(
cou¡
, 
Reque°
 
¨øy
[], & 
ödex
);

106 
WaôÆl
(
cou¡
, 
Reque°
 
ªq_¨øy
[], 
Sètus
 
°©_¨øy
[]);

108 
WaôÆl
(
cou¡
, 
Reque°
 
ªq_¨øy
[]);

110 
boﬁ
 
Te°Æl
(
cou¡
, 
Reque°
 
ªq_¨øy
[], 
Sètus
 
°©_¨øy
[]);

112 
boﬁ
 
Te°Æl
(
cou¡
, 
Reque°
 
ªq_¨øy
[]);

114 
Waôsome
(
öcou¡
, 
Reque°
 
ªq_¨øy
[],

115 
¨øy_of_ödi˚s
[], 
Sètus
 
°©_¨øy
[]) ;

117 
Waôsome
(
öcou¡
, 
Reque°
 
ªq_¨øy
[],

118 
¨øy_of_ödi˚s
[]);

120 
Te°some
(
öcou¡
, 
Reque°
 
ªq_¨øy
[],

121 
¨øy_of_ödi˚s
[], 
Sètus
 
°©_¨øy
[]);

123 
Te°some
(
öcou¡
, 
Reque°
 
ªq_¨øy
[],

124 
¨øy_of_ödi˚s
[]);

126 
vútuÆ
 
	$C™˚l
() const;

128 
vútuÆ
 
boﬁ
 
	$Gë_°©us
(
Sètus
& 
°©us
) const;

130 
vútuÆ
 
boﬁ
 
	$Gë_°©us
() const;

132 
¥Ÿe˘ed
:

134 
MPI_Reque°
 
mpi_ªque°
;

137 
¥iv©e
:

140 
PMPI
::
Reque°
 
pmpi_ªque°
;

143 
	}
};

146 ˛as†
	cPªque°
 : 
public
 
Reque°
 {

150 
public
:

152 
	$Pªque°
() { }

155 
	$Pªque°
(c⁄° 
Reque°
& 
p
Ë: 
	`Reque°
’), 
	$pmpi_ªque°
(
p
Ë{ 
	}
}

157 
Pªque°
(c⁄° 
PMPI
::Pªque°& 
r
) :

158 
Reque°
((c⁄° 
PMPI
::Reque°&)
r
),

159 
	$pmpi_ªque°
(
r
Ë{ 
	}
}

161 
	$Pªque°
(c⁄° 
MPI_Reque°
 &
i
Ë: 
	`Reque°
(i), 
	$pmpi_ªque°
(
i
Ë{ 
	}
}

163 
	gvútuÆ
 ~
	$Pªque°
(Ë{ 
	}
}

165 
	gPªque°
& 
	g›î©‹
=(c⁄° 
Reque°
& 
r
) {

166 
Reque°
::
›î©‹
=(
r
);

167 
	gpmpi_ªque°
 = (
PMPI
::
Pªque°
)
r
;  *
	gthis
; }

169 
	gPªque°
& 
	g›î©‹
=(c⁄° 
Pªque°
& 
r
) {

170 
Reque°
::
›î©‹
=(
r
);

171 
	gpmpi_ªque°
 = 
r
.
pmpi_ªque°
;  *
	gthis
; }

173 
	$Pªque°
(c⁄° 
Reque°
& 
p
Ë: 
	$Reque°
(
p
Ë{ 
	}
}

175 
	$Pªque°
(c⁄° 
MPI_Reque°
 &
i
Ë: 
	$Reque°
(
i
Ë{ 
	}
}

177 
vútuÆ
 ~
	$Pªque°
(Ë{ 
	}
}

179 
Pªque°
& 
›î©‹
=(c⁄° 
Reque°
& 
r
) {

180 
mpi_ªque°
 = 
r
;  *
	gthis
; }

182 
	gPªque°
& 
	g›î©‹
=(c⁄° 
Pªque°
& 
r
) {

183 
mpi_ªque°
 = 
r
.mpi_ªque°;  *
	gthis
; }

186 
vútuÆ
 
Sèπ
();

188 
SèπÆl
(
cou¡
, 
Pªque°
 
¨øy_of_ªque°s
[]);

191 
	g¥iv©e
:

192 
PMPI
::
Pªque°
 
pmpi_ªque°
;

200 ˛as†
	cGªque°
 : 
public
 
MPI
::
Reque°
 {

201 
public
:

202 
	tQuîy_fun˘i⁄
(*, 
	tSètus
&);

203 
	tFªe_fun˘i⁄
(*);

204 
	tC™˚l_fun˘i⁄
(*, 
	tboﬁ
);

206 
	$Gªque°
() {}

207 
	$Gªque°
(c⁄° 
Reque°
& 
ªq
Ë: 
	$Reque°
(
ªq
Ë{
	}
}

208 
	$Gªque°
(c⁄° 
MPI_Reque°
 &
ªq
Ë: 
	$Reque°
(
ªq
Ë{
	}
}

209 
vútuÆ
 ~
	$Gªque°
(Ë{
	}
}

211 
Gªque°
& 
›î©‹
=(c⁄° 
Reque°
& 
ªq
) {

212 
mpi_ªque°
 = 
ªq
; (*
	gthis
);

215 
	gGªque°
& 
	g›î©‹
=(c⁄° 
Gªque°
& 
ªq
) {

216 
mpi_ªque°
 = 
ªq
.mpi_ªque°; (*
	gthis
);

219 
Gªque°
 
Sèπ
(
Quîy_fun˘i⁄
 *, 
Fªe_fun˘i⁄
 *,

220 
C™˚l_fun˘i⁄
 *, *);

222 
vútuÆ
 
Com∂ëe
();

230 
	sGªque°_öãr˚±_t
 {

231 *
	mgô_exåa
;

232 
	mGªque°
::
Quîy_fun˘i⁄
 *
gô_cxx_quîy_‚
;

233 
	mGªque°
::
Fªe_fun˘i⁄
 *
gô_cxx_‰ì_‚
;

234 
	mGªque°
::
C™˚l_fun˘i⁄
 *
gô_cxx_ˇn˚l_‚
;

	@/usr/include/openmpi/ompi/mpi/cxx/request_inln.h

26 
ölöe
 

27 
	gMPI
::
Reque°
::
Waô
(
MPI
::
Sètus
 &
°©us
)

29 ()
MPI_Waô
(&
mpi_ªque°
, &
°©us
.
mpi_°©us
);

32 
ölöe
 

33 
	gMPI
::
Reque°
::
	$Waô
()

35 ()
	`MPI_Waô
(&
mpi_ªque°
, 
MPI_STATUS_IGNORE
);

36 
	}
}

38 
ölöe
 

39 
	gMPI
::
Reque°
::
	$Fªe
()

41 ()
	`MPI_Reque°_‰ì
(&
mpi_ªque°
);

42 
	}
}

44 
ölöe
 
boﬁ


45 
	gMPI
::
Reque°
::
Te°
(
MPI
::
Sètus
 &
°©us
)

47 
t
;

48 ()
MPI_Te°
(&
mpi_ªque°
, &
t
, &
°©us
.
mpi_°©us
);

49  
OPAL_INT_TO_BOOL
(
t
);

52 
ölöe
 
boﬁ


53 
	gMPI
::
Reque°
::
	$Te°
()

55 
t
;

56 ()
	`MPI_Te°
(&
mpi_ªque°
, &
t
, 
MPI_STATUS_IGNORE
);

57  
	`OPAL_INT_TO_BOOL
(
t
);

58 
	}
}

60 
ölöe
 

61 
	gMPI
::
Reque°
::
Waô™y
(
cou¡
, 
MPI
::Reque° 
¨øy
[],

62 
MPI
::
Sètus
& 
°©us
)

64 
ödex
, 
	gi
;

65 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

66 
	gi
=0; i < 
	gcou¡
; i++) {

67 
	g¨øy_of_ªque°s
[
i
] = 
¨øy
[i];

69 ()
MPI_Waô™y
(
cou¡
, 
¨øy_of_ªque°s
, &
ödex
, &
°©us
.
mpi_°©us
);

70 
	gi
=0; i < 
	gcou¡
; i++) {

71 
	g¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

73 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

74  
	gödex
;

77 
ölöe
 

78 
	gMPI
::
Reque°
::
Waô™y
(
cou¡
, 
MPI
::Reque° 
¨øy
[])

80 
ödex
, 
	gi
;

81 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

82 
	gi
=0; i < 
	gcou¡
; i++) {

83 
	g¨øy_of_ªque°s
[
i
] = 
¨øy
[i];

85 ()
MPI_Waô™y
(
cou¡
, 
¨øy_of_ªque°s
, &
ödex
, 
MPI_STATUS_IGNORE
);

86 
	gi
=0; i < 
	gcou¡
; i++) {

87 
	g¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

89 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

90  
	gödex
;

93 
ölöe
 
boﬁ


94 
	gMPI
::
Reque°
::
Te°™y
(
cou¡
, 
MPI
::Reque° 
¨øy
[],

95 & 
ödex
, 
MPI
::
Sètus
& 
°©us
)

97 
i
, 
	gÊag
;

98 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

99 
	gi
=0; i < 
	gcou¡
; i++) {

100 
	g¨øy_of_ªque°s
[
i
] = 
¨øy
[i];

102 ()
MPI_Te°™y
(
cou¡
, 
¨øy_of_ªque°s
, &
ödex
, &
Êag
, &
°©us
.
mpi_°©us
);

103 
	gi
=0; i < 
	gcou¡
; i++) {

104 
	g¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

106 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

107  (
	gboﬁ
)(
	gÊag
 !0 ? 
åue
 : 
Ál£
);

110 
ölöe
 
boﬁ


111 
	gMPI
::
Reque°
::
Te°™y
(
cou¡
, 
MPI
::Reque° 
¨øy
[], & 
ödex
)

113 
	gi
, 
	gÊag
;

114 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

115 
	gi
=0; i < 
	gcou¡
; i++) {

116 
	g¨øy_of_ªque°s
[
i
] = 
¨øy
[i];

118 ()
MPI_Te°™y
(
cou¡
, 
¨øy_of_ªque°s
, &
ödex
, &
Êag
,

119 
MPI_STATUS_IGNORE
);

120 
	gi
=0; i < 
	gcou¡
; i++) {

121 
	g¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

123 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

124  
OPAL_INT_TO_BOOL
(
Êag
);

127 
ölöe
 

128 
	gMPI
::
Reque°
::
WaôÆl
(
cou¡
, 
MPI
::Reque° 
ªq_¨øy
[],

129 
MPI
::
Sètus
 
°©_¨øy
[])

131 
i
;

132 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

133 
MPI_Sètus
* 
	g¨øy_of_°©u£s
 = 
√w
 MPI_Sètus[
cou¡
];

134 
	gi
=0; i < 
	gcou¡
; i++) {

135 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

137 ()
MPI_WaôÆl
(
cou¡
, 
¨øy_of_ªque°s
, 
¨øy_of_°©u£s
);

138 
	gi
=0; i < 
	gcou¡
; i++) {

139 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

140 
	g°©_¨øy
[
i
] = 
¨øy_of_°©u£s
[i];

142 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

143 
	gdñëe
 [] 
	g¨øy_of_°©u£s
;

146 
ölöe
 

147 
	gMPI
::
Reque°
::
WaôÆl
(
cou¡
, 
MPI
::Reque° 
ªq_¨øy
[])

149 
i
;

150 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

152 
	gi
=0; i < 
	gcou¡
; i++) {

153 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

155 ()
MPI_WaôÆl
(
cou¡
, 
¨øy_of_ªque°s
, 
MPI_STATUSES_IGNORE
);

157 
	gi
=0; i < 
	gcou¡
; i++) {

158 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

161 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

164 
ölöe
 
boﬁ


165 
	gMPI
::
Reque°
::
Te°Æl
(
cou¡
, 
MPI
::Reque° 
ªq_¨øy
[],

166 
MPI
::
Sètus
 
°©_¨øy
[])

168 
i
, 
	gÊag
;

169 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

170 
MPI_Sètus
* 
	g¨øy_of_°©u£s
 = 
√w
 MPI_Sètus[
cou¡
];

171 
	gi
=0; i < 
	gcou¡
; i++) {

172 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

174 ()
MPI_Te°Æl
(
cou¡
, 
¨øy_of_ªque°s
, &
Êag
, 
¨øy_of_°©u£s
);

175 
	gi
=0; i < 
	gcou¡
; i++) {

176 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

177 
	g°©_¨øy
[
i
] = 
¨øy_of_°©u£s
[i];

179 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

180 
	gdñëe
 [] 
	g¨øy_of_°©u£s
;

181  
OPAL_INT_TO_BOOL
(
Êag
);

184 
ölöe
 
boﬁ


185 
	gMPI
::
Reque°
::
Te°Æl
(
cou¡
, 
MPI
::Reque° 
ªq_¨øy
[])

187 
i
, 
	gÊag
;

188 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

190 
	gi
=0; i < 
	gcou¡
; i++) {

191 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

193 ()
MPI_Te°Æl
(
cou¡
, 
¨øy_of_ªque°s
, &
Êag
, 
MPI_STATUSES_IGNORE
);

195 
	gi
=0; i < 
	gcou¡
; i++) {

196 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

198 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

200  
OPAL_INT_TO_BOOL
(
Êag
);

203 
ölöe
 

204 
	gMPI
::
Reque°
::
Waôsome
(
öcou¡
, 
MPI
::Reque° 
ªq_¨øy
[],

205 
¨øy_of_ödi˚s
[], 
MPI
::
Sètus
 
°©_¨øy
[])

207 
i
, 
	goutcou¡
;

208 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
öcou¡
];

209 
MPI_Sètus
* 
	g¨øy_of_°©u£s
 = 
√w
 MPI_Sètus[
öcou¡
];

210 
	gi
=0; i < 
	göcou¡
; i++) {

211 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

213 ()
MPI_Waôsome
(
öcou¡
, 
¨øy_of_ªque°s
, &
outcou¡
,

214 
¨øy_of_ödi˚s
, 
¨øy_of_°©u£s
);

215 
	gi
=0; i < 
	göcou¡
; i++) {

216 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

217 
	g°©_¨øy
[
i
] = 
¨øy_of_°©u£s
[i];

219 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

220 
	gdñëe
 [] 
	g¨øy_of_°©u£s
;

221  
	goutcou¡
;

224 
ölöe
 

225 
	gMPI
::
Reque°
::
Waôsome
(
öcou¡
, 
MPI
::Reque° 
ªq_¨øy
[],

226 
¨øy_of_ödi˚s
[])

228 
	gi
, 
	goutcou¡
;

229 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
öcou¡
];

231 
	gi
=0; i < 
	göcou¡
; i++) {

232 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

234 ()
MPI_Waôsome
(
öcou¡
, 
¨øy_of_ªque°s
, &
outcou¡
,

235 
¨øy_of_ödi˚s
, 
MPI_STATUSES_IGNORE
);

237 
	gi
=0; i < 
	göcou¡
; i++) {

238 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

240 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

242  
	goutcou¡
;

245 
ölöe
 

246 
	gMPI
::
Reque°
::
Te°some
(
öcou¡
, 
MPI
::Reque° 
ªq_¨øy
[],

247 
¨øy_of_ödi˚s
[], 
MPI
::
Sètus
 
°©_¨øy
[])

249 
i
, 
	goutcou¡
;

250 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
öcou¡
];

251 
MPI_Sètus
* 
	g¨øy_of_°©u£s
 = 
√w
 MPI_Sètus[
öcou¡
];

252 
	gi
=0; i < 
	göcou¡
; i++) {

253 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

255 ()
MPI_Te°some
(
öcou¡
, 
¨øy_of_ªque°s
, &
outcou¡
,

256 
¨øy_of_ödi˚s
, 
¨øy_of_°©u£s
);

257 
	gi
=0; i < 
	göcou¡
; i++) {

258 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

259 
	g°©_¨øy
[
i
] = 
¨øy_of_°©u£s
[i];

261 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

262 
	gdñëe
 [] 
	g¨øy_of_°©u£s
;

263  
	goutcou¡
;

266 
ölöe
 

267 
	gMPI
::
Reque°
::
Te°some
(
öcou¡
, 
MPI
::Reque° 
ªq_¨øy
[],

268 
¨øy_of_ödi˚s
[])

270 
	gi
, 
	goutcou¡
;

271 
MPI_Reque°
* 
	g¨øy_of_ªque°s
 = 
√w
 MPI_Reque°[
öcou¡
];

273 
	gi
=0; i < 
	göcou¡
; i++) {

274 
	g¨øy_of_ªque°s
[
i
] = 
ªq_¨øy
[i];

276 ()
MPI_Te°some
(
öcou¡
, 
¨øy_of_ªque°s
, &
outcou¡
,

277 
¨øy_of_ödi˚s
, 
MPI_STATUSES_IGNORE
);

279 
	gi
=0; i < 
	göcou¡
; i++) {

280 
	gªq_¨øy
[
i
] = 
¨øy_of_ªque°s
[i];

282 
	gdñëe
 [] 
	g¨øy_of_ªque°s
;

284  
	goutcou¡
;

287 
ölöe
 

288 
	gMPI
::
Reque°
::
	$C™˚l
() const

290 ()
	`MPI_C™˚l
(
c⁄°_ˇ°
<
MPI_Reque°
 *>(&
mpi_ªque°
));

291 
	}
}

293 
ölöe
 

294 
	gMPI
::
Pªque°
::
	$Sèπ
()

296 ()
	`MPI_Sèπ
(&
mpi_ªque°
);

297 
	}
}

299 
ölöe
 

300 
	gMPI
::
Pªque°
::
SèπÆl
(
cou¡
, 
MPI
:: Pªque° 
¨øy_of_ªque°s
[])

303 
MPI_Reque°
* 
mpi_ªque°s
 = 
√w
 MPI_Reque°[
cou¡
];

304 
	gi
;

305 
	gi
=0; i < 
	gcou¡
; i++) {

306 
	gmpi_ªque°s
[
i
] = 
¨øy_of_ªque°s
[i];

308 ()
MPI_SèπÆl
(
cou¡
, 
mpi_ªque°s
);

309 
	gi
=0; i < 
	gcou¡
; i++) {

310 
	g¨øy_of_ªque°s
[
i
].
	gmpi_ªque°
 = 
mpi_ªque°s
[i] ;

312 
	gdñëe
 [] 
	gmpi_ªque°s
;

315 
ölöe
 
boﬁ
 
	gMPI
::
Reque°
::
Gë_°©us
(
MPI
::
Sètus
& 
°©us
) const

317 
Êag
 = 0;

318 
MPI_Sètus
 
	gc_°©us
;

323 ()
MPI_Reque°_gë_°©us
(
mpi_ªque°
, &
Êag
, &
c_°©us
);

324 i‡(
	gÊag
) {

325 
	g°©us
 = 
c_°©us
;

327  
OPAL_INT_TO_BOOL
(
Êag
);

330 
ölöe
 
boﬁ
 
	gMPI
::
Reque°
::
	$Gë_°©us
() const

332 
Êag
;

337 ()
	`MPI_Reque°_gë_°©us
(
mpi_ªque°
, &
Êag
, 
MPI_STATUS_IGNORE
);

338  
	`OPAL_INT_TO_BOOL
(
Êag
);

339 
	}
}

341 
ölöe
 
	gMPI
::
Gªque°


342 
MPI
::
Gªque°
::
	$Sèπ
(
Quîy_fun˘i⁄
 *
quîy_‚
, 
Fªe_fun˘i⁄
 *
‰ì_‚
,

343 
C™˚l_fun˘i⁄
 *
ˇn˚l_‚
, *
exåa
)

345 
MPI_Reque°
 
gªque°
 = 0;

346 
Gªque°_öãr˚±_t
 *
√w_exåa
 =

347 
√w
 
MPI
::
Gªque°_öãr˚±_t
;

349 
√w_exåa
->
gô_exåa
 = 
exåa
;

350 
√w_exåa
->
gô_cxx_quîy_‚
 = 
quîy_‚
;

351 
√w_exåa
->
gô_cxx_‰ì_‚
 = 
‰ì_‚
;

352 
√w_exåa
->
gô_cxx_ˇn˚l_‚
 = 
ˇn˚l_‚
;

353 (Ë
	`MPI_Gªque°_°¨t
(
ompi_mpi_cxx_gªque°_quîy_‚_öãr˚±
,

354 
ompi_mpi_cxx_gªque°_‰ì_‚_öãr˚±
,

355 
ompi_mpi_cxx_gªque°_ˇn˚l_‚_öãr˚±
,

356 
√w_exåa
, &
gªque°
);

358 (
gªque°
);

359 
	}
}

361 
ölöe
 

362 
	gMPI
::
Gªque°
::
	$Com∂ëe
()

364 (Ë
	`MPI_Gªque°_com∂ëe
(
mpi_ªque°
);

365 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/status.h

22 ˛as†
	cSètus
 {

26 
‰õnd
 
˛ass
 
	mMPI
::
Comm
;

27 
‰õnd
 
˛ass
 
	mMPI
::
Reque°
;

28 
‰õnd
 
˛ass
 
	mMPI
::
Fûe
;

30 
	mpublic
:

34 
	$Sètus
() { }

35 
vútuÆ
 ~
	$Sètus
(Ë{
	}
}

38 
	$Sètus
(c⁄° 
Sètus
& 
d©a
Ë: 
	$pmpi_°©us
(
d©a
.
pmpi_°©us
Ë{ 
	}
}

40 
	$Sètus
(c⁄° 
MPI_Sètus
 &
i
Ë: 
	$pmpi_°©us
(
i
Ë{ 
	}
}

42 
Sètus
& 
›î©‹
=(c⁄° Sètus& 
d©a
) {

43 
pmpi_°©us
 = 
d©a
.pmpi_°©us;  *
	gthis
; }

48 
	gSètus
& 
	g›î©‹
(c⁄° 
MPI_Sètus
 &
i
) {

49 
pmpi_°©us
 = 
i
;  *
	gthis
; }

50 
›î©‹
 
	$MPI_Sètus
 (Ëc⁄° {  
pmpi_°©us
; 
	}
}

52 
›î©‹
 c⁄° 
	gPMPI
::
Sètus
&(Ëc⁄° {  
pmpi_°©us
; }

56 
	$Sètus
(Ë{ 
	}
}

58 
	$Sètus
(c⁄° 
Sètus
& 
d©a
Ë: 
	$mpi_°©us
(
d©a
.
mpi_°©us
Ë{ 
	}
}

60 
	$Sètus
(c⁄° 
MPI_Sètus
 &
i
Ë: 
	$mpi_°©us
(
i
Ë{ 
	}
}

62 
vútuÆ
 ~
	$Sètus
(Ë{
	}
}

64 
Sètus
& 
›î©‹
=(c⁄° Sètus& 
d©a
) {

65 
mpi_°©us
 = 
d©a
.mpi_°©us;  *
	gthis
; }

70 
	gSètus
& 
	g›î©‹
(c⁄° 
MPI_Sètus
 &
i
) {

71 
mpi_°©us
 = 
i
;  *
	gthis
; }

72 
›î©‹
 
	$MPI_Sètus
 (Ëc⁄° {  
mpi_°©us
; 
	}
}

81 
vútuÆ
 
	$Gë_cou¡
(c⁄° 
D©©y≥
& 
d©©y≥
) const;

83 
vútuÆ
 
boﬁ
 
	$Is_ˇn˚Œed
() const;

85 
vútuÆ
 
	$Gë_ñemíts
(c⁄° 
D©©y≥
& 
d©©y≥
) const;

90 
vútuÆ
 
	$Gë_sour˚
() const;

92 
vútuÆ
 
	`Së_sour˚
(
sour˚
);

94 
vútuÆ
 
	$Gë_èg
() const;

96 
vútuÆ
 
	`Së_èg
(
èg
);

98 
vútuÆ
 
	$Gë_îr‹
() const;

100 
vútuÆ
 
	`Së_îr‹
(
îr‹
);

102 
vútuÆ
 
	`Së_ñemíts
(c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, 
cou¡
);

104 
vútuÆ
 
	`Së_ˇn˚Œed
(
boﬁ
 
Êag
);

106 
¥Ÿe˘ed
:

108 
PMPI
::
Sètus
 
pmpi_°©us
;

110 
MPI_Sètus
 
mpi_°©us
;

113 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/status_inln.h

25 
ölöe
 

26 
	gMPI
::
Sètus
::
Gë_cou¡
(c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
) const

28 
cou¡
;

29 ()
MPI_Gë_cou¡
(
c⁄°_ˇ°
<
MPI_Sètus
*>(&
mpi_°©us
), 
d©©y≥
, &
cou¡
);

30  
	gcou¡
;

33 
ölöe
 
boﬁ


34 
	gMPI
::
Sètus
::
	$Is_ˇn˚Œed
() const

36 
t
;

37 ()
	`MPI_Te°_ˇn˚Œed
(
c⁄°_ˇ°
<
MPI_Sètus
*>(&
mpi_°©us
), &
t
);

38  
	`OPAL_INT_TO_BOOL
(
t
);

39 
	}
}

41 
ölöe
 

42 
	gMPI
::
Sètus
::
Gë_ñemíts
(c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
) const

44 
cou¡
;

45 ()
MPI_Gë_ñemíts
(
c⁄°_ˇ°
<
MPI_Sètus
*>(&
mpi_°©us
), 
d©©y≥
, &
cou¡
);

46  
	gcou¡
;

52 
ölöe
 

53 
	gMPI
::
Sètus
::
	$Gë_sour˚
() const

55 
sour˚
;

56 
sour˚
 = 
mpi_°©us
.
MPI_SOURCE
;

57  
sour˚
;

58 
	}
}

60 
ölöe
 

61 
	gMPI
::
Sètus
::
	$Së_sour˚
(
sour˚
)

63 
mpi_°©us
.
MPI_SOURCE
 = 
sour˚
;

64 
	}
}

66 
ölöe
 

67 
	gMPI
::
Sètus
::
	$Gë_èg
() const

69 
èg
;

70 
èg
 = 
mpi_°©us
.
MPI_TAG
;

71  
èg
;

72 
	}
}

74 
ölöe
 

75 
	gMPI
::
Sètus
::
	$Së_èg
(
èg
)

77 
mpi_°©us
.
MPI_TAG
 = 
èg
;

78 
	}
}

80 
ölöe
 

81 
	gMPI
::
Sètus
::
	$Gë_îr‹
() const

83 
îr‹
;

84 
îr‹
 = 
mpi_°©us
.
MPI_ERROR
;

85  
îr‹
;

86 
	}
}

88 
ölöe
 

89 
	gMPI
::
Sètus
::
	$Së_îr‹
(
îr‹
)

91 
mpi_°©us
.
MPI_ERROR
 = 
îr‹
;

92 
	}
}

94 
ölöe
 

95 
	gMPI
::
Sètus
::
Së_ñemíts
(c⁄° 
MPI
::
D©©y≥
& 
d©©y≥
, 
cou¡
)

97 
MPI_Sètus_£t_ñemíts
(&
mpi_°©us
, 
d©©y≥
, 
cou¡
);

100 
ölöe
 

101 
	gMPI
::
Sètus
::
	$Së_ˇn˚Œed
(
boﬁ
 
Êag
)

103 
	`MPI_Sètus_£t_ˇn˚Œed
(&
mpi_°©us
, (Ë
Êag
);

104 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/topology.h

21 ˛as†
	cC¨tcomm
 : 
public
 
I¡øcomm
 {

22 
public
:

25 
	$C¨tcomm
() { }

27 
	$C¨tcomm
(c⁄° 
Comm_NuŒ
& 
d©a
Ë: 
	$I¡øcomm
(
d©a
Ë{ 
	}
}

29 
ölöe
 
C¨tcomm
(c⁄° 
MPI_Comm
& 
d©a
);

31 
	$C¨tcomm
(c⁄° 
C¨tcomm
& 
d©a
Ë: 
	`I¡øcomm
(d©a), 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

32 
C¨tcomm
(c⁄° 
PMPI
::C¨tcomm& 
d
) :

33 
I¡øcomm
((c⁄° 
PMPI
::I¡øcomm&)
d
),

34 
	$pmpi_comm
(
d
Ë{ 
	}
}

37 
	gC¨tcomm
& 
	g›î©‹
=(c⁄° 
C¨tcomm
& 
d©a
) {

38 
I¡øcomm
::
›î©‹
=(
d©a
);

39 
	gpmpi_comm
 = 
d©a
.
pmpi_comm
;  *
	gthis
; }

40 
	gC¨tcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

41 
I¡øcomm
::
›î©‹
=(
d©a
);

42 
	gpmpi_comm
 = (
PMPI
::
C¨tcomm
)
d©a
;  *
	gthis
; }

44 
	gC¨tcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

45 
I¡øcomm
::
›î©‹
=(
d©a
);

46 
	gpmpi_comm
 = 
d©a
;  *
	gthis
; }

48 
	$C¨tcomm
(c⁄° 
C¨tcomm
& 
d©a
Ë: 
	$I¡øcomm
(
d©a
.
mpi_comm
Ë{ 
	}
}

50 
C¨tcomm
& 
›î©‹
=(c⁄° C¨tcomm& 
d©a
) {

51 
mpi_comm
 = 
d©a
.mpi_comm;  *
	gthis
; }

52 
	gC¨tcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

53 
mpi_comm
 = 
d©a
;  *
	gthis
; }

55 
	gC¨tcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

56 
mpi_comm
 = 
d©a
;  *
	gthis
; }

62 
C¨tcomm
 
	$Dup
() const;

64 
vútuÆ
 
C¨tcomm
& 
	$Cl⁄e
() const;

71 
vútuÆ
 
	$Gë_dim
() const;

73 
vútuÆ
 
	$Gë_t›o
(
maxdims
, 
dims
[], 
boﬁ
 
≥riods
[],

74 
co‹ds
[]) const;

76 
vútuÆ
 
	$Gë_ˇπ_ønk
(c⁄° 
co‹ds
[]) const;

78 
vútuÆ
 
	$Gë_co‹ds
(
ønk
, 
maxdims
, 
co‹ds
[]) const;

80 
vútuÆ
 
	$Shi·
(
dúe˘i⁄
, 
di•
,

81 &
ønk_sour˚
, &
ønk_de°
) const;

83 
vútuÆ
 
C¨tcomm
 
	`Sub
(c⁄° 
boﬁ
 
ªmaö_dims
[]);

85 
vútuÆ
 
	$M≠
(
ndims
, c⁄° 
dims
[], c⁄° 
boﬁ
 
≥riods
[]) const;

88 
¥iv©e
:

89 
PMPI
::
C¨tcomm
 
pmpi_comm
;

91 
	}
};

98 ˛as†
	cGøphcomm
 : 
public
 
I¡øcomm
 {

99 
public
:

102 
	$Gøphcomm
() { }

104 
	$Gøphcomm
(c⁄° 
Comm_NuŒ
& 
d©a
Ë: 
	$I¡øcomm
(
d©a
Ë{ 
	}
}

106 
ölöe
 
Gøphcomm
(c⁄° 
MPI_Comm
& 
d©a
);

108 
	$Gøphcomm
(c⁄° 
Gøphcomm
& 
d©a
Ë: 
	`I¡øcomm
(d©a), 
	$pmpi_comm
(
d©a
Ë{ 
	}
}

109 
Gøphcomm
(c⁄° 
PMPI
::Gøphcomm& 
d
) :

110 
I¡øcomm
((c⁄° 
PMPI
::I¡øcomm&)
d
), 
	$pmpi_comm
(
d
Ë{ 
	}
}

113 
	gGøphcomm
& 
	g›î©‹
=(c⁄° 
Gøphcomm
& 
d©a
) {

114 
I¡øcomm
::
›î©‹
=(
d©a
);

115 
	gpmpi_comm
 = 
d©a
.
pmpi_comm
;  *
	gthis
; }

116 
	gGøphcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

117 
I¡øcomm
::
›î©‹
=(
d©a
);

118 
	gpmpi_comm
 = (
PMPI
::
Gøphcomm
)
d©a
;  *
	gthis
; }

120 
	gGøphcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

121 
I¡øcomm
::
›î©‹
=(
d©a
);

122 
	gpmpi_comm
 = 
d©a
;  *
	gthis
; }

125 
	$Gøphcomm
(c⁄° 
Gøphcomm
& 
d©a
Ë: 
	$I¡øcomm
(
d©a
.
mpi_comm
Ë{ 
	}
}

127 
Gøphcomm
& 
›î©‹
=(c⁄° Gøphcomm& 
d©a
) {

128 
mpi_comm
 = 
d©a
.mpi_comm;  *
	gthis
; }

129 
	gGøphcomm
& 
	g›î©‹
=(c⁄° 
Comm_NuŒ
& 
d©a
) {

130 
mpi_comm
 = 
d©a
;  *
	gthis
; }

132 
	gGøphcomm
& 
	g›î©‹
=(c⁄° 
MPI_Comm
& 
d©a
) {

133 
mpi_comm
 = 
d©a
;  *
	gthis
; }

140 
Gøphcomm
 
	$Dup
() const;

142 
vútuÆ
 
Gøphcomm
& 
	$Cl⁄e
() const;

148 
vútuÆ
 
	$Gë_dims
(
¬odes
[], 
√dges
[]) const;

150 
vútuÆ
 
	$Gë_t›o
(
maxödex
, 
maxedges
, 
ödex
[],

151 
edges
[]) const;

153 
vútuÆ
 
	$Gë_√ighb‹s_cou¡
(
ønk
) const;

155 
vútuÆ
 
	$Gë_√ighb‹s
(
ønk
, 
max√ighb‹s
,

156 
√ighb‹s
[]) const;

158 
vútuÆ
 
	$M≠
(
¬odes
, c⁄° 
ödex
[],

159 c⁄° 
edges
[]) const;

162 
¥iv©e
:

163 
PMPI
::
Gøphcomm
 
pmpi_comm
;

165 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/topology_inln.h

25 
ölöe


26 
	gMPI
::
C¨tcomm
::
	$C¨tcomm
(c⁄° 
MPI_Comm
& 
d©a
) {

27 
°©us
 = 0;

28 i‡(
MPI
::
	`Is_öôülized
(Ë&& (
d©a
 !
MPI_COMM_NULL
)) {

29 ()
	`MPI_T›o_ã°
(
d©a
, &
°©us
) ;

30 i‡(
°©us
 =
MPI_CART
)

31 
mpi_comm
 = 
d©a
;

33 
mpi_comm
 = 
MPI_COMM_NULL
;

36 
mpi_comm
 = 
d©a
;

38 
	}
}

44 
ölöe
 
	gMPI
::
C¨tcomm


45 
MPI
::
C¨tcomm
::
	$Dup
() const

47 
MPI_Comm
 
√wcomm
;

48 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

49  
√wcomm
;

50 
	}
}

56 
ölöe
 

57 
	gMPI
::
C¨tcomm
::
	$Gë_dim
() const

59 
ndims
;

60 ()
	`MPI_C¨tdim_gë
(
mpi_comm
, &
ndims
);

61  
ndims
;

62 
	}
}

64 
ölöe
 

65 
	gMPI
::
C¨tcomm
::
	$Gë_t›o
(
maxdims
, 
dims
[], 
boﬁ
 
≥riods
[],

66 
co‹ds
[]) const

68 *
öt_≥riods
 = 
√w
 [
maxdims
];

69 
i
;

70 
i
=0; i<
maxdims
; i++) {

71 
öt_≥riods
[
i
] = ()
≥riods
[i];

73 ()
	`MPI_C¨t_gë
(
mpi_comm
, 
maxdims
, 
dims
, 
öt_≥riods
, 
co‹ds
);

74 
i
=0; i<
maxdims
; i++) {

75 
≥riods
[
i
] = 
	`OPAL_INT_TO_BOOL
(
öt_≥riods
[i]);

77 
dñëe
 [] 
öt_≥riods
;

78 
	}
}

80 
ölöe
 

81 
	gMPI
::
C¨tcomm
::
	$Gë_ˇπ_ønk
(c⁄° 
co‹ds
[]) const

83 
ønk
;

84 ()
	`MPI_C¨t_ønk
(
mpi_comm
, 
c⁄°_ˇ°
<*>(
co‹ds
), &
ønk
);

85  
ønk
;

86 
	}
}

88 
ölöe
 

89 
	gMPI
::
C¨tcomm
::
	$Gë_co‹ds
(
ønk
, 
maxdims
, 
co‹ds
[]) const

91 ()
	`MPI_C¨t_co‹ds
(
mpi_comm
, 
ønk
, 
maxdims
, 
co‹ds
);

92 
	}
}

94 
ölöe
 

95 
	gMPI
::
C¨tcomm
::
	$Shi·
(
dúe˘i⁄
, 
di•
,

96 &
ønk_sour˚
, &
ønk_de°
) const

98 ()
	`MPI_C¨t_shi·
(
mpi_comm
, 
dúe˘i⁄
, 
di•
, &
ønk_sour˚
, &
ønk_de°
);

99 
	}
}

101 
ölöe
 
	gMPI
::
C¨tcomm


102 
MPI
::
C¨tcomm
::
	$Sub
(c⁄° 
boﬁ
 
ªmaö_dims
[])

104 
ndims
;

105 
	`MPI_C¨tdim_gë
(
mpi_comm
, &
ndims
);

106 * 
öt_ªmaö_dims
 = 
√w
 [
ndims
];

107 
i
=0; i<
ndims
; i++) {

108 
öt_ªmaö_dims
[
i
] = ()
ªmaö_dims
[i];

110 
MPI_Comm
 
√wcomm
;

111 ()
	`MPI_C¨t_sub
(
mpi_comm
, 
öt_ªmaö_dims
, &
√wcomm
);

112 
dñëe
 [] 
öt_ªmaö_dims
;

113  
√wcomm
;

114 
	}
}

116 
ölöe
 

117 
	gMPI
::
C¨tcomm
::
	$M≠
(
ndims
, c⁄° 
dims
[], c⁄° 
boﬁ
 
≥riods
[]) const

119 *
öt_≥riods
 = 
√w
 [
ndims
];

120 
i
=0; i<
ndims
; i++) {

121 
öt_≥riods
[
i
] = (Ë
≥riods
[i];

123 
√wønk
;

124 ()
	`MPI_C¨t_m≠
(
mpi_comm
, 
ndims
, 
c⁄°_ˇ°
<*>(
dims
), 
öt_≥riods
, &
√wønk
);

125 
dñëe
 [] 
öt_≥riods
;

126  
√wønk
;

127 
	}
}

130 
ölöe
 
	gMPI
::
C¨tcomm
&

131 
MPI
::
C¨tcomm
::
	$Cl⁄e
() const

133 
MPI_Comm
 
√wcomm
;

134 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

135 
MPI
::
C¨tcomm
* 
dup
 = 
√w
 MPI::
	`C¨tcomm
(
√wcomm
);

136  *
dup
;

137 
	}
}

143 
ölöe


144 
	gMPI
::
Gøphcomm
::
	$Gøphcomm
(c⁄° 
MPI_Comm
& 
d©a
) {

145 
°©us
 = 0;

146 i‡(
MPI
::
	`Is_öôülized
(Ë&& (
d©a
 !
MPI_COMM_NULL
)) {

147 ()
	`MPI_T›o_ã°
(
d©a
, &
°©us
) ;

148 i‡(
°©us
 =
MPI_GRAPH
)

149 
mpi_comm
 = 
d©a
;

151 
mpi_comm
 = 
MPI_COMM_NULL
;

154 
mpi_comm
 = 
d©a
;

156 
	}
}

162 
ölöe
 
	gMPI
::
Gøphcomm


163 
MPI
::
Gøphcomm
::
	$Dup
() const

165 
MPI_Comm
 
√wcomm
;

166 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

167  
√wcomm
;

168 
	}
}

174 
ölöe
 

175 
	gMPI
::
Gøphcomm
::
	$Gë_dims
(
¬odes
[], 
√dges
[]) const

177 ()
	`MPI_Gøphdims_gë
(
mpi_comm
, 
¬odes
, 
√dges
);

178 
	}
}

180 
ölöe
 

181 
	gMPI
::
Gøphcomm
::
	$Gë_t›o
(
maxödex
, 
maxedges
, 
ödex
[],

182 
edges
[]) const

184 ()
	`MPI_Gøph_gë
(
mpi_comm
, 
maxödex
, 
maxedges
, 
ödex
, 
edges
);

185 
	}
}

187 
ölöe
 

188 
	gMPI
::
Gøphcomm
::
	$Gë_√ighb‹s_cou¡
(
ønk
) const

190 
¬eighb‹s
;

191 ()
	`MPI_Gøph_√ighb‹s_cou¡
(
mpi_comm
, 
ønk
, &
¬eighb‹s
);

192  
¬eighb‹s
;

193 
	}
}

195 
ölöe
 

196 
	gMPI
::
Gøphcomm
::
	$Gë_√ighb‹s
(
ønk
, 
max√ighb‹s
,

197 
√ighb‹s
[]) const

199 ()
	`MPI_Gøph_√ighb‹s
(
mpi_comm
, 
ønk
, 
max√ighb‹s
, 
√ighb‹s
);

200 
	}
}

202 
ölöe
 

203 
	gMPI
::
Gøphcomm
::
	$M≠
(
¬odes
, c⁄° 
ödex
[],

204 c⁄° 
edges
[]) const

206 
√wønk
;

207 ()
	`MPI_Gøph_m≠
(
mpi_comm
, 
¬odes
, 
c⁄°_ˇ°
<*>(
ödex
), c⁄°_ˇ°<*>(
edges
), &
√wønk
);

208  
√wønk
;

209 
	}
}

211 
ölöe
 
	gMPI
::
Gøphcomm
&

212 
MPI
::
Gøphcomm
::
	$Cl⁄e
() const

214 
MPI_Comm
 
√wcomm
;

215 ()
	`MPI_Comm_dup
(
mpi_comm
, &
√wcomm
);

216 
MPI
::
Gøphcomm
* 
dup
 = 
√w
 MPI::
	`Gøphcomm
(
√wcomm
);

217  *
dup
;

218 
	}
}

	@/usr/include/openmpi/ompi/mpi/cxx/win.h

23 ˛as†
	cWö
 {

27 
‰õnd
 
˛ass
 
	mMPI
::
Comm
;

28 
‰õnd
 
˛ass
 
	mMPI
::
Reque°
;

30 
	mpublic
:

34 
	$Wö
() { }

35 
vútuÆ
 ~
	$Wö
(Ë{ 
	}
}

39 
	$Wö
(c⁄° 
Wö
& 
d©a
Ë: 
	$pmpi_wö
(
d©a
.
pmpi_wö
Ë{ 
	}
}

41 
	$Wö
(
MPI_Wö
 
i
Ë: 
	$pmpi_wö
(
i
Ë{ 
	}
}

43 
Wö
& 
›î©‹
=(c⁄° Wö& 
d©a
) {

44 
pmpi_wö
 = 
d©a
.pmpi_wö;  *
	gthis
; }

49 
	gWö
& 
	g›î©‹
(c⁄° 
MPI_Wö
 &
i
) {

50 
pmpi_wö
 = 
i
;  *
	gthis
; }

51 
›î©‹
 
	$MPI_Wö
 (Ëc⁄° {  
pmpi_wö
; 
	}
}

53 
›î©‹
 c⁄° 
	gPMPI
::
Wö
&(Ëc⁄° {  
pmpi_wö
; }

57 
	$Wö
(Ë{ 
	}
}

59 
	$Wö
(c⁄° 
Wö
& 
d©a
Ë: 
	$mpi_wö
(
d©a
.
mpi_wö
Ë{ 
	}
}

61 
	$Wö
(
MPI_Wö
 
i
Ë: 
	$mpi_wö
(
i
Ë{ 
	}
}

63 
vútuÆ
 ~
	$Wö
(Ë{ 
	}
}

65 
Wö
& 
›î©‹
=(c⁄° Wö& 
d©a
) {

66 
mpi_wö
 = 
d©a
.mpi_wö;  *
	gthis
; }

71 
	gWö
& 
	g›î©‹
(c⁄° 
MPI_Wö
 &
i
) {

72 
mpi_wö
 = 
i
;  *
	gthis
; }

73 
›î©‹
 
	$MPI_Wö
 (Ëc⁄° {  
mpi_wö
; 
	}
}

81 
	tC›y_©å_fun˘i⁄
(c⁄° 
	tWö
& 
	tﬁdwö
, 
	twö_keyvÆ
,

82 * 
	texåa_°©e
, * 
	t©åibuã_vÆ_ö
,

83 * 
	t©åibuã_vÆ_out
, 
	tboﬁ
& 
	tÊag
);

85 
	tDñëe_©å_fun˘i⁄
(
	tWö
& 
	twö
, 
	twö_keyvÆ
,

86 * 
	t©åibuã_vÆ
, * 
	texåa_°©e
);

88 
	tEºh™dÀr_‚
(
	tWö
 &, *, ... );

93 
	gMPI
::
Eºh™dÀr
 
Cª©e_îrh™dÀr
(
Eºh™dÀr_‚
* 
fun˘i⁄
);

94 
vútuÆ
 
	gMPI
::
Eºh™dÀr
 
	$Gë_îrh™dÀr
() const;

95 
vútuÆ
 
	`Së_îrh™dÀr
(c⁄° 
MPI
::
Eºh™dÀr
& 
îrh™dÀr
);

100 
vútuÆ
 
	`Accumuœã
(c⁄° * 
‹igö_addr
, 
‹igö_cou¡
,

101 c⁄° 
MPI
::
D©©y≥
& 
‹igö_d©©y≥
,

102 
èrgë_ønk
, 
MPI
::
Aöt
 
èrgë_di•
,

103 
èrgë_cou¡
,

104 c⁄° 
MPI
::
D©©y≥
& 
èrgë_d©©y≥
,

105 c⁄° 
MPI
::
Op
& 
›
) const;

107 
vútuÆ
 
	$Com∂ëe
() const;

109 
Wö
 
	`Cª©e
(c⁄° * 
ba£
, 
MPI
::
Aöt
 
size
, 
di•_unô
,

110 c⁄° 
MPI
::
Info
& 
öfo
, c⁄° MPI::
I¡øcomm
& 
comm
);

112 
vútuÆ
 
	$Fí˚
(
as£π
) const;

114 
vútuÆ
 
	`Fªe
();

116 
vútuÆ
 
	`Gë
(c⁄° *
‹igö_addr
, 
‹igö_cou¡
,

117 c⁄° 
MPI
::
D©©y≥
& 
‹igö_d©©y≥
, 
èrgë_ønk
,

118 
MPI
::
Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

119 c⁄° 
MPI
::
D©©y≥
& 
èrgë_d©©y≥
) const;

121 
vútuÆ
 
MPI
::
Group
 
	$Gë_group
() const;

123 
vútuÆ
 
	$Lock
(
lock_ty≥
, 
ønk
, 
as£π
) const;

125 
vútuÆ
 
	`Po°
(c⁄° 
MPI
::
Group
& 
group
, 
as£π
) const;

127 
vútuÆ
 
	`Put
(c⁄° * 
‹igö_addr
, 
‹igö_cou¡
,

128 c⁄° 
MPI
::
D©©y≥
& 
‹igö_d©©y≥
, 
èrgë_ønk
,

129 
MPI
::
Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

130 c⁄° 
MPI
::
D©©y≥
& 
èrgë_d©©y≥
) const;

132 
vútuÆ
 
	`Sèπ
(c⁄° 
MPI
::
Group
& 
group
, 
as£π
) const;

134 
vútuÆ
 
boﬁ
 
	$Te°
() const;

136 
vútuÆ
 
	$U∆ock
(
ønk
) const;

138 
vútuÆ
 
	$Waô
() const;

144 
vútuÆ
 
	$CÆl_îrh™dÀr
(
îr‹code
) const;

149 
	`Cª©e_keyvÆ
(
C›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

150 
Dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

151 * 
exåa_°©e
);

152 
	`Cª©e_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

153 
MPI_Wö_dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

154 * 
exåa_°©e
);

155 
	`Cª©e_keyvÆ
(
C›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

156 
MPI_Wö_dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

157 * 
exåa_°©e
);

158 
	`Cª©e_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

159 
Dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

160 * 
exåa_°©e
);

162 
¥Ÿe˘ed
:

163 
	`do_¸óã_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
* 
c_c›y_‚
,

164 
MPI_Wö_dñëe_©å_fun˘i⁄
* 
c_dñëe_‚
,

165 
C›y_©å_fun˘i⁄
* 
cxx_c›y_‚
,

166 
Dñëe_©å_fun˘i⁄
* 
cxx_dñëe_‚
,

167 * 
exåa_°©e
);

169 
public
:

170 
vútuÆ
 
	`Dñëe_©å
(
wö_keyvÆ
);

172 
	`Fªe_keyvÆ
(& 
wö_keyvÆ
);

175 
boﬁ
 
	$Gë_©å
(c⁄° 
Wö
& 
wö
, 
wö_keyvÆ
,

176 * 
©åibuã_vÆ
) const;

179 
boﬁ
 
	$Gë_©å
(
wö_keyvÆ
, * 
©åibuã_vÆ
) const;

181 
vútuÆ
 
	$Gë_«me
(* 
wö_«me
, & 
ªsu…Àn
) const;

183 
vútuÆ
 
	`Së_©å
(
wö_keyvÆ
, c⁄° * 
©åibuã_vÆ
);

185 
vútuÆ
 
	`Së_«me
(c⁄° * 
wö_«me
);

187 
Eºh™dÀr
* 
my_îrh™dÀr
;

189 ::
°d
::
	tm≠
<
	tMPI_Wö
, 
	tWö
*> 
	tmpi_wö_m≠_t
;

190 
mpi_wö_m≠_t
 
mpi_wö_m≠
;

192 ::
°d
::
	t∑ú
<
	tWö
::
	tC›y_©å_fun˘i⁄
*, Wö::
	tDñëe_©å_fun˘i⁄
*> 
	tkeyvÆ_∑ú_t
;

193 ::
°d
::
	tm≠
<, 
	tkeyvÆ_∑ú_t
*> 
	tmpi_wö_keyvÆ_‚_m≠_t
;

194 
mpi_wö_keyvÆ_‚_m≠_t
 
mpi_wö_keyvÆ_‚_m≠
;

196 
¥Ÿe˘ed
:

198 
PMPI
::
Wö
 
pmpi_wö
;

200 
MPI_Wö
 
mpi_wö
;

202 
	}
};

	@/usr/include/openmpi/ompi/mpi/cxx/win_inln.h

29 
ölöe
 
	gMPI
::
Eºh™dÀr


30 
MPI
::
Wö
::
Cª©e_îrh™dÀr
(MPI::Wö::
Eºh™dÀr_‚
* 
fun˘i⁄
)

32 
MPI_Eºh™dÀr
 
îrh™dÀr
;

33 (Ë
MPI_Wö_¸óã_îrh™dÀr
((
MPI_Wö_îrh™dÀr_‚
 *Ë
ompi_mpi_cxx_wö_îrh™dÀr_öãr˚±
,

34 &
îrh™dÀr
);

35 
	gMPI
::
Eºh™dÀr
 
ãmp
(
îrh™dÀr
);

36 
	gãmp
.
	gwö_h™dÀr_‚
 = ((*)(
MPI
::
Wö
&, * , ...)Ë
	gfun˘i⁄
;

37  
	gãmp
;

41 
ölöe
 
	gMPI
::
Eºh™dÀr


42 
MPI
::
Wö
:: 
	$Gë_îrh™dÀr
() const

44  *
my_îrh™dÀr
;

45 
	}
}

53 
ölöe
 

54 
	gMPI
::
Wö
::
Accumuœã
(c⁄° * 
‹igö_addr
, 
‹igö_cou¡
,

55 c⁄° 
MPI
::
D©©y≥
& 
‹igö_d©©y≥
, 
èrgë_ønk
,

56 
MPI
::
Aöt
 
èrgë_di•
, 
èrgë_cou¡
,

57 c⁄° 
MPI
::
D©©y≥
& 
èrgë_d©©y≥
,

58 c⁄° 
MPI
::
Op
& 
›
) const

60 (Ë
MPI_Accumuœã
(
c⁄°_ˇ°
<*>(
‹igö_addr
), 
‹igö_cou¡
, 
‹igö_d©©y≥
,

61 
èrgë_ønk
, 
èrgë_di•
, 
èrgë_cou¡
,

62 
èrgë_d©©y≥
, 
›
, 
mpi_wö
);

67 
ölöe
 

68 
	gMPI
::
Wö
::
	$Com∂ëe
() const

70 (Ë
	`MPI_Wö_com∂ëe
(
mpi_wö
);

71 
	}
}

74 
ölöe
 
	gMPI
::
Wö


75 
MPI
::
Wö
::
Cª©e
(c⁄° * 
ba£
, MPI::
Aöt
 
size
,

76 
di•_unô
, c⁄° 
MPI
::
Info
& 
öfo
,

77 c⁄° 
MPI
::
I¡øcomm
& 
comm
)

79 
MPI_Wö
 
√wwö
;

80 (Ë
MPI_Wö_¸óã
(
c⁄°_ˇ°
<*>(
ba£
), 
size
, 
di•_unô
, 
öfo
, 
comm
, &
√wwö
);

81  
	g√wwö
;

85 
ölöe
 

86 
	gMPI
::
Wö
::
	$Fí˚
(
as£π
) const

88 (Ë
	`MPI_Wö_„n˚
(
as£π
, 
mpi_wö
);

89 
	}
}

92 
ölöe
 

93 
	gMPI
::
Wö
::
Gë
(c⁄° *
‹igö_addr
, 
‹igö_cou¡
,

94 c⁄° 
MPI
::
D©©y≥
& 
‹igö_d©©y≥
,

95 
èrgë_ønk
, 
MPI
::
Aöt
 
èrgë_di•
,

96 
èrgë_cou¡
,

97 c⁄° 
MPI
::
D©©y≥
& 
èrgë_d©©y≥
) const

99 (Ë
MPI_Gë
(
c⁄°_ˇ°
<*>(
‹igö_addr
), 
‹igö_cou¡
, 
‹igö_d©©y≥
,

100 
èrgë_ønk
, 
èrgë_di•
,

101 
èrgë_cou¡
, 
èrgë_d©©y≥
, 
mpi_wö
);

106 
ölöe
 
	gMPI
::
Group


107 
MPI
::
Wö
::
	$Gë_group
() const

109 
MPI_Group
 
mpi_group
;

110 (Ë
	`MPI_Wö_gë_group
(
mpi_wö
, &
mpi_group
);

111  
mpi_group
;

112 
	}
}

115 
ölöe
 

116 
	gMPI
::
Wö
::
	$Lock
(
lock_ty≥
, 
ønk
, 
as£π
) const

118 (Ë
	`MPI_Wö_lock
(
lock_ty≥
, 
ønk
, 
as£π
, 
mpi_wö
);

119 
	}
}

122 
ölöe
 

123 
	gMPI
::
Wö
::
Po°
(c⁄° 
MPI
::
Group
& 
group
, 
as£π
) const

125 (Ë
MPI_Wö_po°
(
group
, 
as£π
, 
mpi_wö
);

129 
ölöe
 

130 
	gMPI
::
Wö
::
Put
(c⁄° * 
‹igö_addr
, 
‹igö_cou¡
,

131 c⁄° 
MPI
::
D©©y≥
& 
‹igö_d©©y≥
,

132 
èrgë_ønk
, 
MPI
::
Aöt
 
èrgë_di•
,

133 
èrgë_cou¡
,

134 c⁄° 
MPI
::
D©©y≥
& 
èrgë_d©©y≥
) const

136 (Ë
MPI_Put
(
c⁄°_ˇ°
<*>(
‹igö_addr
), 
‹igö_cou¡
, 
‹igö_d©©y≥
,

137 
èrgë_ønk
, 
èrgë_di•
, 
èrgë_cou¡
,

138 
èrgë_d©©y≥
, 
mpi_wö
);

143 
ölöe
 

144 
	gMPI
::
Wö
::
Sèπ
(c⁄° 
MPI
::
Group
& 
group
, 
as£π
) const

146 (Ë
MPI_Wö_°¨t
(
group
, 
as£π
, 
mpi_wö
);

150 
ölöe
 
boﬁ


151 
	gMPI
::
Wö
::
	$Te°
() const

153 
Êag
;

154 
	`MPI_Wö_ã°
(
mpi_wö
, &
Êag
);

155  
	`OPAL_INT_TO_BOOL
(
Êag
);

157 
	}
}

160 
ölöe
 

161 
	gMPI
::
Wö
::
	$U∆ock
(
ønk
) const

163 (Ë
	`MPI_Wö_u∆ock
(
ønk
, 
mpi_wö
);

164 
	}
}

167 
ölöe
 

168 
	gMPI
::
Wö
::
	$Waô
() const

170 (Ë
	`MPI_Wö_waô
(
mpi_wö
);

171 
	}
}

178 
ölöe
 

179 
	gMPI
::
Wö
::
	$CÆl_îrh™dÀr
(
îr‹code
) const

181 (Ë
	`MPI_Wö_ˇŒ_îrh™dÀr
(
mpi_wö
, 
îr‹code
);

182 
	}
}

187 
ölöe
 

188 
	gMPI
::
Wö
::
Cª©e_keyvÆ
(
MPI
::Wö::
C›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

189 
MPI
::
Wö
::
Dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

190 * 
exåa_°©e
)

193  
do_¸óã_keyvÆ
(
NULL
, NULL,

194 
wö_c›y_©å_‚
, 
wö_dñëe_©å_‚
,

195 
exåa_°©e
);

200 
ölöe
 

201 
	gMPI
::
Wö
::
	$Cª©e_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

202 
MPI_Wö_dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

203 * 
exåa_°©e
)

206  
	`do_¸óã_keyvÆ
(
wö_c›y_©å_‚
, 
wö_dñëe_©å_‚
,

207 
NULL
, NULL,

208 
exåa_°©e
);

209 
	}
}

213 
ölöe
 

214 
	gMPI
::
Wö
::
Cª©e_keyvÆ
(
MPI
::Wö::
C›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

215 
MPI_Wö_dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

216 * 
exåa_°©e
)

219  
do_¸óã_keyvÆ
(
NULL
, 
wö_dñëe_©å_‚
,

220 
wö_c›y_©å_‚
, 
NULL
,

221 
exåa_°©e
);

226 
ölöe
 

227 
	gMPI
::
Wö
::
Cª©e_keyvÆ
(
MPI_Wö_c›y_©å_fun˘i⁄
* 
wö_c›y_©å_‚
,

228 
MPI
::
Wö
::
Dñëe_©å_fun˘i⁄
* 
wö_dñëe_©å_‚
,

229 * 
exåa_°©e
)

232  
do_¸óã_keyvÆ
(
wö_c›y_©å_‚
, 
NULL
,

233 
NULL
, 
wö_dñëe_©å_‚
,

234 
exåa_°©e
);

237 
ölöe
 

238 
	gMPI
::
Wö
::
	$Dñëe_©å
(
wö_keyvÆ
)

240 (Ë
	`MPI_Wö_dñëe_©å
(
mpi_wö
, 
wö_keyvÆ
);

241 
	}
}

244 
ölöe
 

245 
	gMPI
::
Wö
::
	$Fªe_keyvÆ
(& 
wö_keyvÆ
)

247 (Ë
	`MPI_Wö_‰ì_keyvÆ
(&
wö_keyvÆ
);

248 
	}
}

252 
ölöe
 
boﬁ


253 
	gMPI
::
Wö
::
	$Gë_©å
(c⁄° 
Wö
& 
wö
, 
wö_keyvÆ
,

254 * 
©åibuã_vÆ
) const

256 
ªt
;

257 (Ë
	`MPI_Wö_gë_©å
(
wö
, 
wö_keyvÆ
, 
©åibuã_vÆ
, &
ªt
);

258  
	`OPAL_INT_TO_BOOL
(
ªt
);

259 
	}
}

263 
ölöe
 
boﬁ


264 
	gMPI
::
Wö
::
	$Gë_©å
(
wö_keyvÆ
, * 
©åibuã_vÆ
) const

266 
ªt
;

267 (Ë
	`MPI_Wö_gë_©å
(
mpi_wö
, 
wö_keyvÆ
, 
©åibuã_vÆ
, &
ªt
);

268  
	`OPAL_INT_TO_BOOL
(
ªt
);

269 
	}
}

272 
ölöe
 

273 
	gMPI
::
Wö
::
	$Gë_«me
(* 
wö_«me
, & 
ªsu…Àn
) const

275 (Ë
	`MPI_Wö_gë_«me
(
mpi_wö
, 
wö_«me
, &
ªsu…Àn
);

276 
	}
}

279 
ölöe
 

280 
	gMPI
::
Wö
::
	$Së_©å
(
wö_keyvÆ
, c⁄° * 
©åibuã_vÆ
)

282 (Ë
	`MPI_Wö_£t_©å
(
mpi_wö
, 
wö_keyvÆ
, 
c⁄°_ˇ°
<*>(
©åibuã_vÆ
));

283 
	}
}

286 
ölöe
 

287 
	gMPI
::
Wö
::
	$Së_«me
(c⁄° * 
wö_«me
)

289 (Ë
	`MPI_Wö_£t_«me
(
mpi_wö
, 
c⁄°_ˇ°
<*>(
wö_«me
));

290 
	}
}

	@/usr/include/ppc/endian.h

92 #i‚de‡
_PPC_ENDIAN_H_


93 
	#_PPC_ENDIAN_H_


	)

95 
	~<sys/cdefs.h
>

100 
	#_QUAD_HIGHWORD
 0

	)

101 
	#_QUAD_LOWWORD
 1

	)

107 
	#__DARWIN_LITTLE_ENDIAN
 1234

	)

108 
	#__DARWIN_BIG_ENDIAN
 4321

	)

109 
	#__DARWIN_PDP_ENDIAN
 3412

	)

111 
	#__DARWIN_BYTE_ORDER
 
__DARWIN_BIG_ENDIAN


	)

113 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

115 
	#LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

116 
	#BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

117 
	#PDP_ENDIAN
 
__DARWIN_PDP_ENDIAN


	)

119 
	#BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

121 
	~<sys/_ídün.h
>

	@/usr/include/ppc/limits.h

36 #i‚de‡
_PPC_LIMITS_H_


37 
	#_PPC_LIMITS_H_


	)

39 
	~<sys/cdefs.h
>

40 
	~<µc/_limôs.h
>

42 
	#CHAR_BIT
 8

	)

43 
	#MB_LEN_MAX
 6

	)

45 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

46 
	#CLK_TCK
 
__DARWIN_CLK_TCK


	)

59 
	#SCHAR_MAX
 127

	)

60 
	#SCHAR_MIN
 (-128Ë

	)

62 
	#UCHAR_MAX
 255

	)

63 
	#CHAR_MAX
 127

	)

64 
	#CHAR_MIN
 (-128Ë

	)

66 
	#USHRT_MAX
 65535

	)

67 
	#SHRT_MAX
 32767

	)

68 
	#SHRT_MIN
 (-32768Ë

	)

70 
	#UINT_MAX
 0xfffffff‡

	)

71 
	#INT_MAX
 2147483647

	)

72 
	#INT_MIN
 (-2147483647-1Ë

	)

74 #ifde‡
__LP64__


75 
	#ULONG_MAX
 0xffffffffffffffffUL

	)

76 
	#LONG_MAX
 0x7fffffffffffffffL

	)

77 
	#LONG_MIN
 (-0x7fffffffffffffffL-1Ë

	)

79 
	#ULONG_MAX
 0xffffffffUL

	)

80 
	#LONG_MAX
 2147483647L

	)

81 
	#LONG_MIN
 (-2147483647L-1Ë

	)

84 
	#ULLONG_MAX
 0xffffffffffffffffULL

	)

85 
	#LLONG_MAX
 0x7fffffffffffffffLL

	)

86 
	#LLONG_MIN
 (-0x7fffffffffffffffLL-1Ë

	)

88 #i‡!
deföed
(
_ANSI_SOURCE
)

89 #ifde‡
__LP64__


90 
	#LONG_BIT
 64

	)

92 
	#LONG_BIT
 32

	)

94 
	#SSIZE_MAX
 
LONG_MAX


	)

95 
	#WORD_BIT
 32

	)

97 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#SIZE_T_MAX
 
ULONG_MAX


	)

100 
	#UQUAD_MAX
 
ULLONG_MAX


	)

101 
	#QUAD_MAX
 
LLONG_MAX


	)

102 
	#QUAD_MIN
 
LLONG_MIN


	)

	@/usr/include/ppc/types.h

66 #i‚def 
_MACHTYPES_H_


67 
	#_MACHTYPES_H_


	)

69 #i‚de‡
__ASSEMBLER__


70 
	~<µc/_ty≥s.h
>

71 
	~<sys/cdefs.h
>

76 #i‚de‡
_INT8_T


77 
	#_INT8_T


	)

78 
__sig√d
 
	töt8_t
;

80 
	tu_öt8_t
;

81 #i‚de‡
_INT16_T


82 
	#_INT16_T


	)

83 
	töt16_t
;

85 
	tu_öt16_t
;

86 #i‚de‡
_INT32_T


87 
	#_INT32_T


	)

88 
	töt32_t
;

90 
	tu_öt32_t
;

91 #i‚de‡
_INT64_T


92 
	#_INT64_T


	)

93 
	töt64_t
;

95 
	tu_öt64_t
;

97 #i‡
deföed
(
__µc64__
)

98 
öt64_t
 
	tªgi°î_t
;

100 
öt32_t
 
	tªgi°î_t
;

103 #i‚de‡
_INTPTR_T


104 
	#_INTPTR_T


	)

105 
__d¨wö_öçå_t
 
	töçå_t
;

107 #i‚de‡
_UINTPTR_T


108 
	#_UINTPTR_T


	)

109 
	tuöçå_t
;

112 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

117 
u_öt64_t
 
	tu£r_addr_t
;

118 
u_öt64_t
 
	tu£r_size_t
;

119 
öt64_t
 
	tu£r_ssize_t
;

120 
öt64_t
 
	tu£r_l⁄g_t
;

121 
u_öt64_t
 
	tu£r_ul⁄g_t
;

122 
öt64_t
 
	tu£r_time_t
;

123 
	#USER_ADDR_NULL
 ((
u£r_addr_t
Ë0)

	)

124 
	#CAST_USER_ADDR_T
(
a_±r
Ë((
u£r_addr_t
)((
uöçå_t
)◊_±r)))

	)

128 
u_öt64_t
 
	tsysˇŒ_¨g_t
;

130 #i‚de‡
__off£tof


131 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

	@/usr/include/secure/_common.h

24 #i‚de‡
_SECURE__COMMON_H_


25 
	#_SECURE__COMMON_H_


	)

27 #unde‡
_USE_FORTIFY_LEVEL


28 #ifde‡
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

29 #i‡
_FORTIFY_SOURCE
 > 1

30 
	#_USE_FORTIFY_LEVEL
 2

	)

32 
	#_USE_FORTIFY_LEVEL
 1

	)

35 
	#_USE_FORTIFY_LEVEL
 0

	)

38 
	#__d¨wö_obsz0
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 0)

	)

39 
	#__d¨wö_obsz
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 
_USE_FORTIFY_LEVEL
 > 1)

	)

	@/usr/include/stdarg.h

3 #i‡
deföed
(
__GNUC__
)

4 #ö˛ude_√xà<
°d¨g
.
h
>

5 #ñi‡
deföed
(
__MWERKS__
)

6 
	~"mw_°d¨g.h
"

	@/usr/include/sys/_select.h

36 #i‚de‡
_SYS__SELECT_H_


37 
	#_SYS__SELECT_H_


	)

39 
	$£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

40 
fd_£t
 * 
__ª°ri˘
, 
timevÆ
 * __restrict)

41 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

42 
	$__DARWIN_EXTSN_C
(
£À˘
)

44 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


45 
	$__DARWIN_1050
(
£À˘
)

47 
	$__DARWIN_ALIAS_C
(
£À˘
)

	@/usr/include/sys/resource.h

64 #i‚de‡
_SYS_RESOURCE_H_


65 
	#_SYS_RESOURCE_H_


	)

67 
	~<sys/≠∂ópi›ts.h
>

68 
	~<sys/cdefs.h
>

69 
	~<sys/_ty≥s.h
>

75 
	#__√ed_°ru˘_timevÆ


	)

76 
	~<sys/_°ru˘s.h
>

79 #i‚de‡
_ID_T


80 
	#_ID_T


	)

81 
__d¨wö_id_t
 
	tid_t
;

88 
__uöt64_t
 
	tæim_t
;

99 
	#PRIO_PROCESS
 0

	)

100 
	#PRIO_PGRP
 1

	)

101 
	#PRIO_USER
 2

	)

103 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

104 
	#PRIO_DARWIN_THREAD
 3

	)

109 
	#PRIO_MIN
 -20

	)

110 
	#PRIO_MAX
 20

	)

116 
	#PRIO_DARWIN_BG
 0x1000

	)

130 
	#RUSAGE_SELF
 0

	)

131 
	#RUSAGE_CHILDREN
 -1

	)

142 
	srußge
 {

143 
timevÆ
 
	mru_utime
;

144 
timevÆ
 
	mru_°ime
;

145 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

146 
	mru_›aque
[14];

153 
	mru_maxrss
;

154 
	#ru_fú°
 
ru_ixrss


	)

155 
	mru_ixrss
;

156 
	mru_idrss
;

157 
	mru_i§ss
;

158 
	mru_möÊt
;

159 
	mru_majÊt
;

160 
	mru_nsw≠
;

161 
	mru_öblock
;

162 
	mru_oublock
;

163 
	mru_msg¢d
;

164 
	mru_msgrcv
;

165 
	mru_nsig«ls
;

166 
	mru_nvcsw
;

167 
	mru_nivcsw
;

168 
	#ru_œ°
 
ru_nivcsw


	)

184 
	#RLIM_INFINITY
 (((
__uöt64_t
)1 << 63Ë- 1Ë

	)

185 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

186 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

192 
	#RLIMIT_CPU
 0

	)

193 
	#RLIMIT_FSIZE
 1

	)

194 
	#RLIMIT_DATA
 2

	)

195 
	#RLIMIT_STACK
 3

	)

196 
	#RLIMIT_CORE
 4

	)

197 
	#RLIMIT_AS
 5

	)

198 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

199 
	#RLIMIT_RSS
 
RLIMIT_AS


	)

200 
	#RLIMIT_MEMLOCK
 6

	)

201 
	#RLIMIT_NPROC
 7

	)

203 
	#RLIMIT_NOFILE
 8

	)

204 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

205 
	#RLIM_NLIMITS
 9

	)

207 
	#_RLIMIT_POSIX_FLAG
 0x1000

	)

213 
	sæimô
 {

214 
æim_t
 
	mæim_cur
;

215 
æim_t
 
	mæim_max
;

218 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

220 
	#IOPOL_TYPE_DISK
 0

	)

223 
	#IOPOL_SCOPE_PROCESS
 0

	)

224 
	#IOPOL_SCOPE_THREAD
 1

	)

227 
	#IOPOL_DEFAULT
 0

	)

228 
	#IOPOL_NORMAL
 1

	)

229 
	#IOPOL_PASSIVE
 2

	)

230 
	#IOPOL_THROTTLE
 3

	)

235 
__BEGIN_DECLS


236 
gë¥i‹ôy
(, 
id_t
);

237 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

238 
gëi›ﬁicy_≈
(, );

240 
	$gëæimô
(, 
æimô
 *Ë
	`__DARWIN_ALIAS
(
gëæimô
);

241 
	`gërußge
(, 
rußge
 *);

242 
	`£çri‹ôy
(, 
id_t
, );

243 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

244 
	`£ti›ﬁicy_≈
(, , );

246 
	$£ålimô
(, c⁄° 
æimô
 *Ë
	`__DARWIN_ALIAS
(
£ålimô
);

247 
__END_DECLS


	@/usr/include/sys/signal.h

69 #i‚def 
_SYS_SIGNAL_H_


70 
	#_SYS_SIGNAL_H_


	)

72 
	~<sys/cdefs.h
>

73 
	~<sys/≠∂ópi›ts.h
>

75 
	#__DARWIN_NSIG
 32

	)

77 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

78 
	#NSIG
 
__DARWIN_NSIG


	)

81 
	~<machöe/sig«l.h
>

83 
	#SIGHUP
 1

	)

84 
	#SIGINT
 2

	)

85 
	#SIGQUIT
 3

	)

86 
	#SIGILL
 4

	)

87 
	#SIGTRAP
 5

	)

88 
	#SIGABRT
 6

	)

89 #i‡ (
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
))

90 
	#SIGPOLL
 7

	)

92 
	#SIGIOT
 
SIGABRT


	)

93 
	#SIGEMT
 7

	)

95 
	#SIGFPE
 8

	)

96 
	#SIGKILL
 9

	)

97 
	#SIGBUS
 10

	)

98 
	#SIGSEGV
 11

	)

99 
	#SIGSYS
 12

	)

100 
	#SIGPIPE
 13

	)

101 
	#SIGALRM
 14

	)

102 
	#SIGTERM
 15

	)

103 
	#SIGURG
 16

	)

104 
	#SIGSTOP
 17

	)

105 
	#SIGTSTP
 18

	)

106 
	#SIGCONT
 19

	)

107 
	#SIGCHLD
 20

	)

108 
	#SIGTTIN
 21

	)

109 
	#SIGTTOU
 22

	)

110 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

111 
	#SIGIO
 23

	)

113 
	#SIGXCPU
 24

	)

114 
	#SIGXFSZ
 25

	)

115 
	#SIGVTALRM
 26

	)

116 
	#SIGPROF
 27

	)

117 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

118 
	#SIGWINCH
 28

	)

119 
	#SIGINFO
 29

	)

121 
	#SIGUSR1
 30

	)

122 
	#SIGUSR2
 31

	)

124 #i‡
deföed
(
_ANSI_SOURCE
Ë|| 
__DARWIN_UNIX03
 || deföed(
__˝lu•lus
)

130 
	#SIG_DFL
 ((*)())0

	)

131 
	#SIG_IGN
 ((*)())1

	)

132 
	#SIG_HOLD
 ((*)())5

	)

133 
	#SIG_ERR
 (((*)())-1)

	)

136 
	#SIG_DFL
 ((*)–))0

	)

137 
	#SIG_IGN
 ((*)–))1

	)

138 
	#SIG_HOLD
 ((*)–))5

	)

139 
	#SIG_ERR
 (((*)–))-1)

	)

142 #i‚de‡
_ANSI_SOURCE


143 
	~<sys/_ty≥s.h
>

145 
	#__√ed_mc⁄ãxt_t


	)

146 
	#__√ed_°ack_t


	)

147 
	#__√ed_uc⁄ãxt_t


	)

148 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

149 #i‡
deföed
(
__µc__
Ë|| deföed(
__µc64__
)

150 
	#__√ed_mc⁄ãxt64_t


	)

151 
	#__√ed_uc⁄ãxt64_t


	)

154 
	~<sys/_°ru˘s.h
>

156 #i‚de‡
_PID_T


157 
	#_PID_T


	)

158 
__d¨wö_pid_t
 
	tpid_t
;

161 #i‚de‡
_PTHREAD_ATTR_T


162 
	#_PTHREAD_ATTR_T


	)

163 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

166 #i‚de‡
_SIGSET_T


167 
	#_SIGSET_T


	)

168 
__d¨wö_sig£t_t
 
	tsig£t_t
;

171 #i‚def 
_SIZE_T


172 
	#_SIZE_T


	)

173 
__d¨wö_size_t
 
	tsize_t
;

176 #i‚de‡
_UID_T


177 
	#_UID_T


	)

178 
__d¨wö_uid_t
 
	tuid_t
;

181 
	usigvÆ
 {

183 
	msivÆ_öt
;

184 *
	msivÆ_±r
;

187 
	#SIGEV_NONE
 0

	)

188 
	#SIGEV_SIGNAL
 1

	)

189 
	#SIGEV_THREAD
 3

	)

191 
	ssigevít
 {

192 
	msigev_nŸify
;

193 
	msigev_signo
;

194 
sigvÆ
 
	msigev_vÆue
;

195 (*
	msigev_nŸify_fun˘i⁄
)(
	msigvÆ
);

196 
±hªad_©å_t
 *
	msigev_nŸify_©åibuãs
;

200 
	s__sigöfo
 {

201 
	msi_signo
;

202 
	msi_î∫o
;

203 
	msi_code
;

204 
pid_t
 
	msi_pid
;

205 
uid_t
 
	msi_uid
;

206 
	msi_°©us
;

207 *
	msi_addr
;

208 
sigvÆ
 
	msi_vÆue
;

209 
	msi_b™d
;

210 
	m__∑d
[7];

211 } 
	tsigöfo_t
;

228 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

229 
	#ILL_NOOP
 0

	)

231 
	#ILL_ILLOPC
 1

	)

232 
	#ILL_ILLTRP
 2

	)

233 
	#ILL_PRVOPC
 3

	)

234 
	#ILL_ILLOPN
 4

	)

235 
	#ILL_ILLADR
 5

	)

236 
	#ILL_PRVREG
 6

	)

237 
	#ILL_COPROC
 7

	)

238 
	#ILL_BADSTK
 8

	)

241 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

242 
	#FPE_NOOP
 0

	)

244 
	#FPE_FLTDIV
 1

	)

245 
	#FPE_FLTOVF
 2

	)

246 
	#FPE_FLTUND
 3

	)

247 
	#FPE_FLTRES
 4

	)

248 
	#FPE_FLTINV
 5

	)

249 
	#FPE_FLTSUB
 6

	)

250 
	#FPE_INTDIV
 7

	)

251 
	#FPE_INTOVF
 8

	)

254 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

255 
	#SEGV_NOOP
 0

	)

257 
	#SEGV_MAPERR
 1

	)

258 
	#SEGV_ACCERR
 2

	)

261 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

262 
	#BUS_NOOP
 0

	)

264 
	#BUS_ADRALN
 1

	)

265 
	#BUS_ADRERR
 2

	)

266 
	#BUS_OBJERR
 3

	)

269 
	#TRAP_BRKPT
 1

	)

270 
	#TRAP_TRACE
 2

	)

273 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

274 
	#CLD_NOOP
 0

	)

276 
	#CLD_EXITED
 1

	)

277 
	#CLD_KILLED
 2

	)

278 
	#CLD_DUMPED
 3

	)

279 
	#CLD_TRAPPED
 4

	)

280 
	#CLD_STOPPED
 5

	)

281 
	#CLD_CONTINUED
 6

	)

284 
	#POLL_IN
 1

	)

285 
	#POLL_OUT
 2

	)

286 
	#POLL_MSG
 3

	)

287 
	#POLL_ERR
 4

	)

288 
	#POLL_PRI
 5

	)

289 
	#POLL_HUP
 6

	)

292 
	u__siga˘i⁄_u
 {

293 (*
	m__ß_h™dÀr
)();

294 (*
	m__ß_siga˘i⁄
)(, 
	m__sigöfo
 *,

299 
	s__siga˘i⁄
 {

300 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

301 (*
	mß_åamp
)(*, , , 
	msigöfo_t
 *, *);

302 
sig£t_t
 
	mß_mask
;

303 
	mß_Êags
;

309 
	ssiga˘i⁄
 {

310 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

311 
sig£t_t
 
	mß_mask
;

312 
	mß_Êags
;

318 
	#ß_h™dÀr
 
__siga˘i⁄_u
.
__ß_h™dÀr


	)

319 
	#ß_siga˘i⁄
 
__siga˘i⁄_u
.
__ß_siga˘i⁄


	)

321 
	#SA_ONSTACK
 0x0001

	)

322 
	#SA_RESTART
 0x0002

	)

323 
	#SA_RESETHAND
 0x0004

	)

324 
	#SA_NOCLDSTOP
 0x0008

	)

325 
	#SA_NODEFER
 0x0010

	)

326 
	#SA_NOCLDWAIT
 0x0020

	)

327 
	#SA_SIGINFO
 0x0040

	)

328 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

329 
	#SA_USERTRAMP
 0x0100

	)

331 
	#SA_64REGSET
 0x0200

	)

337 
	#SA_USERSPACE_MASK
 (
SA_ONSTACK
 | 
SA_RESTART
 | 
SA_RESETHAND
 | 
SA_NOCLDSTOP
 | 
SA_NODEFER
 | 
SA_NOCLDWAIT
 | 
SA_SIGINFO
)

	)

342 
	#SIG_BLOCK
 1

	)

343 
	#SIG_UNBLOCK
 2

	)

344 
	#SIG_SETMASK
 3

	)

347 
	#SI_USER
 0x10001

	)

348 
	#SI_QUEUE
 0x10002

	)

349 
	#SI_TIMER
 0x10003

	)

350 
	#SI_ASYNCIO
 0x10004

	)

351 
	#SI_MESGQ
 0x10005

	)

353 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

354 (*
	tsig_t
)();

361 
	#SS_ONSTACK
 0x0001

	)

362 
	#SS_DISABLE
 0x0004

	)

363 
	#MINSIGSTKSZ
 32768

	)

364 
	#SIGSTKSZ
 131072

	)

366 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

371 
	ssigvec
 {

372 (*
sv_h™dÀr
)();

373 
sv_mask
;

374 
sv_Êags
;

377 
	#SV_ONSTACK
 
SA_ONSTACK


	)

378 
	#SV_INTERRUPT
 
SA_RESTART


	)

379 
	#SV_RESETHAND
 
SA_RESETHAND


	)

380 
	#SV_NODEFER
 
SA_NODEFER


	)

381 
	#SV_NOCLDSTOP
 
SA_NOCLDSTOP


	)

382 
	#SV_SIGINFO
 
SA_SIGINFO


	)

384 
	#sv_⁄°ack
 
sv_Êags


	)

390 
	ssig°ack
 {

391 *
ss_•
;

392 
ss_⁄°ack
;

395 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

400 
	#sigmask
(
m
Ë(1 << ((m)-1))

	)

403 
	#BADSIG
 
SIG_ERR


	)

412 
__BEGIN_DECLS


413 (*
	`sig«l
(, (*)()))();

414 
__END_DECLS


	@/usr/include/i386/_limits.h

22 #i‚def 
_I386__LIMITS_H_


23 
	#_I386__LIMITS_H_


	)

25 
	#__DARWIN_CLK_TCK
 100

	)

	@/usr/include/i386/_structs.h

29 
	~<sys/≠∂ópi›ts.h
>

31 #ifde‡
__√ed_mc⁄ãxt_t


32 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


33 
	#__√ed_°ru˘_mc⁄ãxt


	)

37 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
)

38 
	~<mach/i386/_°ru˘s.h
>

42 #ifde‡
__√ed_°ru˘_mc⁄ãxt


43 #unde‡
__√ed_°ru˘_mc⁄ãxt


45 #i‚de‡
_STRUCT_MCONTEXT32


46 #i‡
__DARWIN_UNIX03


47 
	#_STRUCT_MCONTEXT32
 
__d¨wö_mc⁄ãxt32


	)

48 
	g_STRUCT_MCONTEXT32


50 
_STRUCT_X86_EXCEPTION_STATE32
 
	g__es
;

51 
_STRUCT_X86_THREAD_STATE32
 
	g__ss
;

52 
_STRUCT_X86_FLOAT_STATE32
 
	g__fs
;

55 
	#_STRUCT_MCONTEXT32
 
mc⁄ãxt32


	)

56 
	g_STRUCT_MCONTEXT32


58 
_STRUCT_X86_EXCEPTION_STATE32
 
	ges
;

59 
_STRUCT_X86_THREAD_STATE32
 
	gss
;

60 
_STRUCT_X86_FLOAT_STATE32
 
	gfs
;

65 #i‚de‡
_STRUCT_MCONTEXT64


66 #i‡
__DARWIN_UNIX03


67 
	#_STRUCT_MCONTEXT64
 
__d¨wö_mc⁄ãxt64


	)

68 
	g_STRUCT_MCONTEXT64


70 
_STRUCT_X86_EXCEPTION_STATE64
 
	g__es
;

71 
_STRUCT_X86_THREAD_STATE64
 
	g__ss
;

72 
_STRUCT_X86_FLOAT_STATE64
 
	g__fs
;

75 
	#_STRUCT_MCONTEXT64
 
mc⁄ãxt64


	)

76 
	g_STRUCT_MCONTEXT64


78 
_STRUCT_X86_EXCEPTION_STATE64
 
	ges
;

79 
_STRUCT_X86_THREAD_STATE64
 
	gss
;

80 
_STRUCT_X86_FLOAT_STATE64
 
	gfs
;

86 #ifde‡
__√ed_mc⁄ãxt_t


87 #unde‡
__√ed_mc⁄ãxt_t


88 #i‚de‡
_MCONTEXT_T


89 
	#_MCONTEXT_T


	)

90 #i‡
deföed
(
__LP64__
)

91 
_STRUCT_MCONTEXT64
 *
	tmc⁄ãxt_t
;

92 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT64


	)

94 
_STRUCT_MCONTEXT32
 *
	tmc⁄ãxt_t
;

95 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT32


	)

100 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

101 #i‚de‡
I386_MCONTEXT_SIZE


102 
	#I386_MCONTEXT_SIZE
 (
mc⁄ãxt
)

	)

	@/usr/include/i386/_types.h

28 #i‚def 
_BSD_I386__TYPES_H_


29 
	#_BSD_I386__TYPES_H_


	)

36 #ifde‡
__GNUC__


37 
__sig√d
 
	t__öt8_t
;

39 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 
	t__öt64_t
;

47 
	t__uöt64_t
;

49 
	t__d¨wö_öçå_t
;

50 
	t__d¨wö_«tuøl_t
;

70 
	t__d¨wö_˘_ru√_t
;

77 
	m__mb°©e8
[128];

78 
	m_mb°©eL
;

79 } 
	t__mb°©e_t
;

81 
__mb°©e_t
 
	t__d¨wö_mb°©e_t
;

83 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__PTRDIFF_TYPE__
)

84 
__PTRDIFF_TYPE__
 
	t__d¨wö_±rdiff_t
;

86 
	t__d¨wö_±rdiff_t
;

89 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__SIZE_TYPE__
)

90 
__SIZE_TYPE__
 
	t__d¨wö_size_t
;

92 
	t__d¨wö_size_t
;

95 #i‡(
__GNUC__
 > 2)

96 
__buûtö_va_li°
 
	t__d¨wö_va_li°
;

98 * 
	t__d¨wö_va_li°
;

101 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WCHAR_TYPE__
)

102 
__WCHAR_TYPE__
 
	t__d¨wö_wch¨_t
;

104 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wch¨_t
;

107 
__d¨wö_wch¨_t
 
	t__d¨wö_ru√_t
;

109 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WINT_TYPE__
)

110 
__WINT_TYPE__
 
	t__d¨wö_wöt_t
;

112 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wöt_t
;

115 
	t__d¨wö_˛ock_t
;

116 
__uöt32_t
 
	t__d¨wö_sockÀn_t
;

117 
	t__d¨wö_ssize_t
;

118 
	t__d¨wö_time_t
;

	@/usr/include/machine/signal.h

28 #i‚de‡
_BSD_MACHINE_SIGNAL_H_


29 
	#_BSD_MACHINE_SIGNAL_H_


	)

31 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

32 
	~"µc/sig«l.h
"

33 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

34 
	~"i386/sig«l.h
"

35 #ñi‡
deföed
 (
__¨m__
)

36 
	~"¨m/sig«l.h
"

38 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/ppc/_limits.h

22 #i‚def 
_PPC__LIMITS_H_


23 
	#_PPC__LIMITS_H_


	)

25 
	#__DARWIN_CLK_TCK
 100

	)

	@/usr/include/ppc/_structs.h

29 
	~<sys/cdefs.h
>

31 #ifde‡
__√ed_mc⁄ãxt_t


32 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


33 
	#__√ed_°ru˘_mc⁄ãxt


	)

37 #ifde‡
__√ed_mc⁄ãxt64_t


38 #i‚de‡
__√ed_°ru˘_mc⁄ãxt64


39 
	#__√ed_°ru˘_mc⁄ãxt64


	)

43 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_mc⁄ãxt64
)

44 
	~<mach/µc/_°ru˘s.h
>

47 #ifde‡
__√ed_°ru˘_mc⁄ãxt


48 #unde‡
__√ed_°ru˘_mc⁄ãxt


49 #i‚de‡
_STRUCT_MCONTEXT


50 #i‡
__DARWIN_UNIX03


51 
	#_STRUCT_MCONTEXT
 
__d¨wö_mc⁄ãxt


	)

52 
	g_STRUCT_MCONTEXT


54 
_STRUCT_PPC_EXCEPTION_STATE
 
	g__es
;

55 
_STRUCT_PPC_THREAD_STATE
 
	g__ss
;

56 
_STRUCT_PPC_FLOAT_STATE
 
	g__fs
;

57 
_STRUCT_PPC_VECTOR_STATE
 
	g__vs
;

60 
	#_STRUCT_MCONTEXT
 
mc⁄ãxt


	)

61 
	g_STRUCT_MCONTEXT


63 
_STRUCT_PPC_EXCEPTION_STATE
 
	ges
;

64 
_STRUCT_PPC_THREAD_STATE
 
	gss
;

65 
_STRUCT_PPC_FLOAT_STATE
 
	gfs
;

66 
_STRUCT_PPC_VECTOR_STATE
 
	gvs
;

72 #ifde‡
__√ed_°ru˘_mc⁄ãxt64


73 #unde‡
__√ed_°ru˘_mc⁄ãxt64


74 #i‚de‡
_STRUCT_MCONTEXT64


75 #i‡
__DARWIN_UNIX03


76 
	#_STRUCT_MCONTEXT64
 
__d¨wö_mc⁄ãxt64


	)

77 
	g_STRUCT_MCONTEXT64


79 
_STRUCT_PPC_EXCEPTION_STATE64
 
	g__es
;

80 
_STRUCT_PPC_THREAD_STATE64
 
	g__ss
;

81 
_STRUCT_PPC_FLOAT_STATE
 
	g__fs
;

82 
_STRUCT_PPC_VECTOR_STATE
 
	g__vs
;

85 
	#_STRUCT_MCONTEXT64
 
mc⁄ãxt64


	)

86 
	g_STRUCT_MCONTEXT64


88 
_STRUCT_PPC_EXCEPTION_STATE64
 
	ges
;

89 
_STRUCT_PPC_THREAD_STATE64
 
	gss
;

90 
_STRUCT_PPC_FLOAT_STATE
 
	gfs
;

91 
_STRUCT_PPC_VECTOR_STATE
 
	gvs
;

97 #ifde‡
__√ed_mc⁄ãxt_t


98 #unde‡
__√ed_mc⁄ãxt_t


99 #i‚de‡
_MCONTEXT_T


100 
	#_MCONTEXT_T


	)

101 
_STRUCT_MCONTEXT
 *
	tmc⁄ãxt_t
;

105 #ifde‡
__√ed_mc⁄ãxt64_t


106 #unde‡
__√ed_mc⁄ãxt64_t


107 #i‚de‡
_MCONTEXT64_T


108 
	#_MCONTEXT64_T


	)

109 
_STRUCT_MCONTEXT64
 *
	tmc⁄ãxt64_t
;

113 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

114 #i‚de‡
PPC_MCONTEXT_SIZE


115 
	#PPC_MCONTEXT_SIZE
 (
PPC_THREAD_STATE_COUNT
 + 
PPC_FLOAT_STATE_COUNT
 + 
PPC_EXCEPTION_STATE_COUNT
 + 
PPC_VECTOR_STATE_COUNT
Ë* ()

	)

117 #i‚de‡
PPC_MCONTEXT64_SIZE


118 
	#PPC_MCONTEXT64_SIZE
 (
PPC_THREAD_STATE64_COUNT
 + 
PPC_FLOAT_STATE_COUNT
 + 
PPC_EXCEPTION_STATE_COUNT
 + 
PPC_VECTOR_STATE_COUNT
Ë* ()

	)

126 #ifde‡
__√ed_°ru˘_sigc⁄ãxt


127 #unde‡
__√ed_°ru˘_sigc⁄ãxt


128 #i‚de‡
_STRUCT_SIGCONTEXT


129 #i‡
__DARWIN_UNIX03


130 
	#_STRUCT_SIGCONTEXT
 
__d¨wö_sigc⁄ãxt


	)

131 
	g_STRUCT_SIGCONTEXT


133 
	g__sc_⁄°ack
;

134 
	g__sc_mask
;

135 
	g__sc_ú
;

136 
	g__sc_psw
;

137 
	g__sc_•
;

138 *
	g__sc_ªgs
;

141 
	#_STRUCT_SIGCONTEXT
 
sigc⁄ãxt


	)

142 
	g_STRUCT_SIGCONTEXT


144 
	gsc_⁄°ack
;

145 
	gsc_mask
;

146 
	gsc_ú
;

147 
	gsc_psw
;

148 
	gsc_•
;

149 *
	gsc_ªgs
;

162 #ifde‡
__√ed_°ru˘_sigc⁄ãxt32


163 #unde‡
__√ed_°ru˘_sigc⁄ãxt32


164 #i‚de‡
_STRUCT_SIGCONTEXT32


165 #i‡
__DARWIN_UNIX03


166 
	#_STRUCT_SIGCONTEXT32
 
__d¨wö_sigc⁄ãxt32


	)

167 
	g_STRUCT_SIGCONTEXT32


169 
	g__sc_⁄°ack
;

170 
	g__sc_mask
;

171 
	g__sc_ú
;

172 
	g__sc_psw
;

173 
	g__sc_•
;

174 *
	g__sc_ªgs
;

177 
	#_STRUCT_SIGCONTEXT32
 
sigc⁄ãxt32


	)

178 
	g_STRUCT_SIGCONTEXT32


180 
	gsc_⁄°ack
;

181 
	gsc_mask
;

182 
	gsc_ú
;

183 
	gsc_psw
;

184 
	gsc_•
;

185 *
	gsc_ªgs
;

191 #ifde‡
__√ed_°ru˘_sigc⁄ãxt64


192 #unde‡
__√ed_°ru˘_sigc⁄ãxt64


193 #i‚de‡
_STRUCT_SIGCONTEXT64


194 #i‡
__DARWIN_UNIX03


195 
	#_STRUCT_SIGCONTEXT64
 
__d¨wö_sigc⁄ãxt64


	)

196 
	g_STRUCT_SIGCONTEXT64


198 
	g__sc_⁄°ack
;

199 
	g__sc_mask
;

200 
	g__sc_ú
;

201 
	g__sc_psw
;

202 
	g__sc_•
;

203 *
	g__sc_ªgs
;

206 
	#_STRUCT_SIGCONTEXT64
 
sigc⁄ãxt64


	)

207 
	g_STRUCT_SIGCONTEXT64


209 
	gsc_⁄°ack
;

210 
	gsc_mask
;

211 
	gsc_ú
;

212 
	gsc_psw
;

213 
	gsc_•
;

214 *
	gsc_ªgs
;

	@/usr/include/ppc/_types.h

28 #i‚def 
_BSD_PPC__TYPES_H_


29 
	#_BSD_PPC__TYPES_H_


	)

36 #ifde‡
__GNUC__


37 
__sig√d
 
	t__öt8_t
;

39 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 
	t__öt64_t
;

47 
	t__uöt64_t
;

49 
	t__d¨wö_öçå_t
;

50 
	t__d¨wö_«tuøl_t
;

70 
	t__d¨wö_˘_ru√_t
;

77 
	m__mb°©e8
[128];

78 
	m_mb°©eL
;

79 } 
	t__mb°©e_t
;

81 
__mb°©e_t
 
	t__d¨wö_mb°©e_t
;

83 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__PTRDIFF_TYPE__
)

84 
__PTRDIFF_TYPE__
 
	t__d¨wö_±rdiff_t
;

86 
	t__d¨wö_±rdiff_t
;

89 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__SIZE_TYPE__
)

90 
__SIZE_TYPE__
 
	t__d¨wö_size_t
;

92 
	t__d¨wö_size_t
;

95 #i‡(
__GNUC__
 > 2)

96 
__buûtö_va_li°
 
	t__d¨wö_va_li°
;

98 * 
	t__d¨wö_va_li°
;

101 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WCHAR_TYPE__
)

102 
__WCHAR_TYPE__
 
	t__d¨wö_wch¨_t
;

104 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wch¨_t
;

107 
__d¨wö_wch¨_t
 
	t__d¨wö_ru√_t
;

109 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WINT_TYPE__
)

110 
__WINT_TYPE__
 
	t__d¨wö_wöt_t
;

112 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wöt_t
;

115 
	t__d¨wö_˛ock_t
;

116 
__uöt32_t
 
	t__d¨wö_sockÀn_t
;

117 
	t__d¨wö_ssize_t
;

118 
	t__d¨wö_time_t
;

	@/usr/include/sys/_endian.h

90 #i‚de‡
_SYS__ENDIAN_H_


91 
	#_SYS__ENDIAN_H_


	)

93 
	~<sys/cdefs.h
>

99 #i‡
deföed
(
löt
)

101 
__BEGIN_DECLS


102 
__uöt16_t
 
¡ohs
(__uint16_t);

103 
__uöt16_t
 
ht⁄s
(__uint16_t);

104 
__uöt32_t
 
¡ohl
(__uint32_t);

105 
__uöt32_t
 
ht⁄l
(__uint32_t);

106 
	g__END_DECLS


108 #ñi‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


110 
	#¡ohl
(
x
Ë(x)

	)

111 
	#¡ohs
(
x
Ë(x)

	)

112 
	#ht⁄l
(
x
Ë(x)

	)

113 
	#ht⁄s
(
x
Ë(x)

	)

115 #i‡ 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

116 
	#NTOHL
(
x
Ë(x)

	)

117 
	#NTOHS
(
x
Ë(x)

	)

118 
	#HTONL
(
x
Ë(x)

	)

119 
	#HTONS
(
x
Ë(x)

	)

124 
	~<libkîn/_OSByãOrdî.h
>

126 
	#¡ohs
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

127 
	#ht⁄s
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

129 
	#¡ohl
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

130 
	#ht⁄l
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

132 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

133 
	#NTOHL
(
x
Ë(xË
	`¡ohl
((
__uöt32_t
)x)

	)

134 
	#NTOHS
(
x
Ë(xË
	`¡ohs
((
__uöt16_t
)x)

	)

135 
	#HTONL
(
x
Ë(xË
	`ht⁄l
((
__uöt32_t
)x)

	)

136 
	#HTONS
(
x
Ë(xË
	`ht⁄s
((
__uöt16_t
)x)

	)

	@/usr/include/i386/signal.h

33 #i‚def 
_I386_SIGNAL_H_


34 
	#_I386_SIGNAL_H_
 1

	)

36 
	~<sys/cdefs.h
>

38 #i‚de‡
_ANSI_SOURCE


39 
	tsig_©omic_t
;

41 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

43 
	~<sys/≠∂ópi›ts.h
>

45 #ifde‡
__APPLE_API_OBSOLETE


54 
	#__√ed_°ru˘_sigc⁄ãxt


	)

55 
	~<i386/_°ru˘s.h
>

	@/usr/include/libkern/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDER_H


30 
	#_OS__OSBYTEORDER_H


	)

40 
	~<sys/_ty≥s.h
>

43 
	#__DARWIN_OSSw≠C⁄°I¡16
(
x
) \

44 ((
__uöt16_t
)((((__uöt16_t)(
x
) & 0xff00) >> 8) | \

45 (((
__uöt16_t
)(
x
Ë& 0x00ffË<< 8)))

	)

47 
	#__DARWIN_OSSw≠C⁄°I¡32
(
x
) \

48 ((
__uöt32_t
)((((__uöt32_t)(
x
) & 0xff000000) >> 24) | \

49 (((
__uöt32_t
)(
x
) & 0x00ff0000) >> 8) | \

50 (((
__uöt32_t
)(
x
) & 0x0000ff00) << 8) | \

51 (((
__uöt32_t
)(
x
Ë& 0x000000ffË<< 24)))

	)

53 
	#__DARWIN_OSSw≠C⁄°I¡64
(
x
) \

54 ((
__uöt64_t
)((((__uöt64_t)(
x
) & 0xff00000000000000ULL) >> 56) | \

55 (((
__uöt64_t
)(
x
) & 0x00ff000000000000ULL) >> 40) | \

56 (((
__uöt64_t
)(
x
) & 0x0000ff0000000000ULL) >> 24) | \

57 (((
__uöt64_t
)(
x
) & 0x000000ff00000000ULL) >> 8) | \

58 (((
__uöt64_t
)(
x
) & 0x00000000ff000000ULL) << 8) | \

59 (((
__uöt64_t
)(
x
) & 0x0000000000ff0000ULL) << 24) | \

60 (((
__uöt64_t
)(
x
) & 0x000000000000ff00ULL) << 40) | \

61 (((
__uöt64_t
)(
x
Ë& 0x00000000000000ffULLË<< 56)))

	)

63 #i‡
deföed
(
__GNUC__
)

65 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

66 
	~<libkîn/i386/_OSByãOrdî.h
>

69 #i‡
deföed
(
__¨m__
)

70 
	~<libkîn/¨m/OSByãOrdî.h
>

74 
	#__DARWIN_OSSw≠I¡16
(
x
) \

75 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡16
(xË: 
	`_OSSw≠I¡16
(x))

	)

77 
	#__DARWIN_OSSw≠I¡32
(
x
) \

78 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡32
(xË: 
	`_OSSw≠I¡32
(x))

	)

80 
	#__DARWIN_OSSw≠I¡64
(
x
) \

81 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡64
(xË: 
	`_OSSw≠I¡64
(x))

	)

85 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

87 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

88 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

89 
	#__DARWIN_OS_INLINE
 
ölöe


	)

90 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

91 
	#__DARWIN_OS_INLINE
 
ölöe


	)

93 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

97 
__DARWIN_OS_INLINE


98 
uöt16_t


99 
	$_OSSw≠I¡16
(

100 
uöt16_t
 
d©a


103  
	`__DARWIN_OSSw≠C⁄°I¡16
(
d©a
);

104 
	}
}

106 
__DARWIN_OS_INLINE


107 
uöt32_t


108 
	$_OSSw≠I¡32
(

109 
uöt32_t
 
d©a


112  
	`__DARWIN_OSSw≠C⁄°I¡32
(
d©a
);

113 
	}
}

115 
__DARWIN_OS_INLINE


116 
uöt64_t


117 
	$_OSSw≠I¡64
(

118 
uöt64_t
 
d©a


121  
	`__DARWIN_OSSw≠C⁄°I¡64
(
d©a
);

122 
	}
}

125 
	#__DARWIN_OSSw≠I¡16
(
x
Ë
	`_OSSw≠I¡16
(x)

	)

127 
	#__DARWIN_OSSw≠I¡32
(
x
Ë
	`_OSSw≠I¡32
(x)

	)

129 
	#__DARWIN_OSSw≠I¡64
(
x
Ë
	`_OSSw≠I¡64
(x)

	)

	@/usr/include/mach/i386/_structs.h

32 #i‚def 
_MACH_I386__STRUCTS_H_


33 
	#_MACH_I386__STRUCTS_H_


	)

41 #i‡
__DARWIN_UNIX03


42 
	#_STRUCT_X86_THREAD_STATE32
 
__d¨wö_i386_thªad_°©e


	)

43 
	g_STRUCT_X86_THREAD_STATE32


45 
	g__óx
;

46 
	g__ebx
;

47 
	g__ecx
;

48 
	g__edx
;

49 
	g__edi
;

50 
	g__esi
;

51 
	g__ebp
;

52 
	g__e•
;

53 
	g__ss
;

54 
	g__eÊags
;

55 
	g__eù
;

56 
	g__cs
;

57 
	g__ds
;

58 
	g__es
;

59 
	g__fs
;

60 
	g__gs
;

63 
	#_STRUCT_X86_THREAD_STATE32
 
i386_thªad_°©e


	)

64 
	g_STRUCT_X86_THREAD_STATE32


66 
	góx
;

67 
	gebx
;

68 
	gecx
;

69 
	gedx
;

70 
	gedi
;

71 
	gesi
;

72 
	gebp
;

73 
	ge•
;

74 
	gss
;

75 
	geÊags
;

76 
	geù
;

77 
	gcs
;

78 
	gds
;

79 
	ges
;

80 
	gfs
;

81 
	ggs
;

87 #i‡
__DARWIN_UNIX03


88 
	#_STRUCT_FP_CONTROL
 
__d¨wö_Â_c⁄åﬁ


	)

89 
	g_STRUCT_FP_CONTROL


91 
	g__övÆid
 :1,

92 
	g__dí‹m
 :1,

93 
	g__zdiv
 :1,

94 
	g__ovrÊ
 :1,

95 
	g__undÊ
 :1,

96 
	g__¥ecis
 :1,

98 
	g__pc
 :2,

99 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

100 
	#FP_PREC_24B
 0

	)

101 
	#FP_PREC_53B
 2

	)

102 
	#FP_PREC_64B
 3

	)

104 
	g__rc
 :2,

105 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

106 
	#FP_RND_NEAR
 0

	)

107 
	#FP_RND_DOWN
 1

	)

108 
	#FP_RND_UP
 2

	)

109 
	#FP_CHOP
 3

	)

114 
_STRUCT_FP_CONTROL
 
	t__d¨wö_Â_c⁄åﬁ_t
;

116 
	#_STRUCT_FP_CONTROL
 
Â_c⁄åﬁ


	)

117 
	g_STRUCT_FP_CONTROL


119 
	gövÆid
 :1,

120 
	gdí‹m
 :1,

121 
	gzdiv
 :1,

122 
	govrÊ
 :1,

123 
	gundÊ
 :1,

124 
	g¥ecis
 :1,

126 
	gpc
 :2,

127 
	#FP_PREC_24B
 0

	)

128 
	#FP_PREC_53B
 2

	)

129 
	#FP_PREC_64B
 3

	)

130 
	grc
 :2,

131 
	#FP_RND_NEAR
 0

	)

132 
	#FP_RND_DOWN
 1

	)

133 
	#FP_RND_UP
 2

	)

134 
	#FP_CHOP
 3

	)

138 
_STRUCT_FP_CONTROL
 
	tÂ_c⁄åﬁ_t
;

145 #i‡
__DARWIN_UNIX03


146 
	#_STRUCT_FP_STATUS
 
__d¨wö_Â_°©us


	)

147 
	g_STRUCT_FP_STATUS


149 
	g__övÆid
 :1,

150 
	g__dí‹m
 :1,

151 
	g__zdiv
 :1,

152 
	g__ovrÊ
 :1,

153 
	g__undÊ
 :1,

154 
	g__¥ecis
 :1,

155 
	g__°kÊt
 :1,

156 
	g__îrsumm
 :1,

157 
	g__c0
 :1,

158 
	g__c1
 :1,

159 
	g__c2
 :1,

160 
	g__tos
 :3,

161 
	g__c3
 :1,

162 
	g__busy
 :1;

164 
_STRUCT_FP_STATUS
 
	t__d¨wö_Â_°©us_t
;

166 
	#_STRUCT_FP_STATUS
 
Â_°©us


	)

167 
	g_STRUCT_FP_STATUS


169 
	gövÆid
 :1,

170 
	gdí‹m
 :1,

171 
	gzdiv
 :1,

172 
	govrÊ
 :1,

173 
	gundÊ
 :1,

174 
	g¥ecis
 :1,

175 
	g°kÊt
 :1,

176 
	gîrsumm
 :1,

177 
	gc0
 :1,

178 
	gc1
 :1,

179 
	gc2
 :1,

180 
	gtos
 :3,

181 
	gc3
 :1,

182 
	gbusy
 :1;

184 
_STRUCT_FP_STATUS
 
	tÂ_°©us_t
;

189 #i‡
__DARWIN_UNIX03


190 
	#_STRUCT_MMST_REG
 
__d¨wö_mm°_ªg


	)

191 
	g_STRUCT_MMST_REG


193 
	g__mm°_ªg
[10];

194 
	g__mm°_r§v
[6];

197 
	#_STRUCT_MMST_REG
 
mm°_ªg


	)

198 
	g_STRUCT_MMST_REG


200 
	gmm°_ªg
[10];

201 
	gmm°_r§v
[6];

208 #i‡
__DARWIN_UNIX03


209 
	#_STRUCT_XMM_REG
 
__d¨wö_xmm_ªg


	)

210 
	g_STRUCT_XMM_REG


212 
	g__xmm_ªg
[16];

215 
	#_STRUCT_XMM_REG
 
xmm_ªg


	)

216 
	g_STRUCT_XMM_REG


218 
	gxmm_ªg
[16];

226 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

227 
	#FP_STATE_BYTES
 512

	)

230 #i‡
__DARWIN_UNIX03


231 
	#_STRUCT_X86_FLOAT_STATE32
 
__d¨wö_i386_Êﬂt_°©e


	)

232 
	g_STRUCT_X86_FLOAT_STATE32


234 
	g__Âu_ª£rved
[2];

235 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

236 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

237 
__uöt8_t
 
	g__Âu_·w
;

238 
__uöt8_t
 
	g__Âu_r§v1
;

239 
__uöt16_t
 
	g__Âu_f›
;

240 
__uöt32_t
 
	g__Âu_ù
;

241 
__uöt16_t
 
	g__Âu_cs
;

242 
__uöt16_t
 
	g__Âu_r§v2
;

243 
__uöt32_t
 
	g__Âu_dp
;

244 
__uöt16_t
 
	g__Âu_ds
;

245 
__uöt16_t
 
	g__Âu_r§v3
;

246 
__uöt32_t
 
	g__Âu_mxc§
;

247 
__uöt32_t
 
	g__Âu_mxc§mask
;

248 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

249 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

250 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

251 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

252 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

253 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

254 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

255 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

256 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

257 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

258 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

259 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

260 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

261 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

262 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

263 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

264 
	g__Âu_r§v4
[14*16];

265 
	g__Âu_ª£rved1
;

268 
	#_STRUCT_X86_FLOAT_STATE32
 
i386_Êﬂt_°©e


	)

269 
	g_STRUCT_X86_FLOAT_STATE32


271 
	gÂu_ª£rved
[2];

272 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

273 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

274 
__uöt8_t
 
	gÂu_·w
;

275 
__uöt8_t
 
	gÂu_r§v1
;

276 
__uöt16_t
 
	gÂu_f›
;

277 
__uöt32_t
 
	gÂu_ù
;

278 
__uöt16_t
 
	gÂu_cs
;

279 
__uöt16_t
 
	gÂu_r§v2
;

280 
__uöt32_t
 
	gÂu_dp
;

281 
__uöt16_t
 
	gÂu_ds
;

282 
__uöt16_t
 
	gÂu_r§v3
;

283 
__uöt32_t
 
	gÂu_mxc§
;

284 
__uöt32_t
 
	gÂu_mxc§mask
;

285 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

286 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

287 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

288 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

289 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

290 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

291 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

292 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

293 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

294 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

295 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

296 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

297 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

298 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

299 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

300 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

301 
	gÂu_r§v4
[14*16];

302 
	gÂu_ª£rved1
;

306 #i‡
__DARWIN_UNIX03


307 
	#_STRUCT_X86_EXCEPTION_STATE32
 
__d¨wö_i386_ex˚±i⁄_°©e


	)

308 
	g_STRUCT_X86_EXCEPTION_STATE32


310 
	g__å≠no
;

311 
	g__îr
;

312 
	g__Áu…vaddr
;

315 
	#_STRUCT_X86_EXCEPTION_STATE32
 
i386_ex˚±i⁄_°©e


	)

316 
	g_STRUCT_X86_EXCEPTION_STATE32


318 
	gå≠no
;

319 
	gîr
;

320 
	gÁu…vaddr
;

324 #i‡
__DARWIN_UNIX03


325 
	#_STRUCT_X86_DEBUG_STATE32
 
__d¨wö_x86_debug_°©e32


	)

326 
	g_STRUCT_X86_DEBUG_STATE32


328 
	g__dr0
;

329 
	g__dr1
;

330 
	g__dr2
;

331 
	g__dr3
;

332 
	g__dr4
;

333 
	g__dr5
;

334 
	g__dr6
;

335 
	g__dr7
;

338 
	#_STRUCT_X86_DEBUG_STATE32
 
x86_debug_°©e32


	)

339 
	g_STRUCT_X86_DEBUG_STATE32


341 
	gdr0
;

342 
	gdr1
;

343 
	gdr2
;

344 
	gdr3
;

345 
	gdr4
;

346 
	gdr5
;

347 
	gdr6
;

348 
	gdr7
;

356 #i‡
__DARWIN_UNIX03


357 
	#_STRUCT_X86_THREAD_STATE64
 
__d¨wö_x86_thªad_°©e64


	)

358 
	g_STRUCT_X86_THREAD_STATE64


360 
__uöt64_t
 
	g__øx
;

361 
__uöt64_t
 
	g__rbx
;

362 
__uöt64_t
 
	g__rcx
;

363 
__uöt64_t
 
	g__rdx
;

364 
__uöt64_t
 
	g__rdi
;

365 
__uöt64_t
 
	g__rsi
;

366 
__uöt64_t
 
	g__rbp
;

367 
__uöt64_t
 
	g__r•
;

368 
__uöt64_t
 
	g__r8
;

369 
__uöt64_t
 
	g__r9
;

370 
__uöt64_t
 
	g__r10
;

371 
__uöt64_t
 
	g__r11
;

372 
__uöt64_t
 
	g__r12
;

373 
__uöt64_t
 
	g__r13
;

374 
__uöt64_t
 
	g__r14
;

375 
__uöt64_t
 
	g__r15
;

376 
__uöt64_t
 
	g__rù
;

377 
__uöt64_t
 
	g__rÊags
;

378 
__uöt64_t
 
	g__cs
;

379 
__uöt64_t
 
	g__fs
;

380 
__uöt64_t
 
	g__gs
;

383 
	#_STRUCT_X86_THREAD_STATE64
 
x86_thªad_°©e64


	)

384 
	g_STRUCT_X86_THREAD_STATE64


386 
__uöt64_t
 
	gøx
;

387 
__uöt64_t
 
	grbx
;

388 
__uöt64_t
 
	grcx
;

389 
__uöt64_t
 
	grdx
;

390 
__uöt64_t
 
	grdi
;

391 
__uöt64_t
 
	grsi
;

392 
__uöt64_t
 
	grbp
;

393 
__uöt64_t
 
	gr•
;

394 
__uöt64_t
 
	gr8
;

395 
__uöt64_t
 
	gr9
;

396 
__uöt64_t
 
	gr10
;

397 
__uöt64_t
 
	gr11
;

398 
__uöt64_t
 
	gr12
;

399 
__uöt64_t
 
	gr13
;

400 
__uöt64_t
 
	gr14
;

401 
__uöt64_t
 
	gr15
;

402 
__uöt64_t
 
	grù
;

403 
__uöt64_t
 
	grÊags
;

404 
__uöt64_t
 
	gcs
;

405 
__uöt64_t
 
	gfs
;

406 
__uöt64_t
 
	ggs
;

411 #i‡
__DARWIN_UNIX03


412 
	#_STRUCT_X86_FLOAT_STATE64
 
__d¨wö_x86_Êﬂt_°©e64


	)

413 
	g_STRUCT_X86_FLOAT_STATE64


415 
	g__Âu_ª£rved
[2];

416 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

417 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

418 
__uöt8_t
 
	g__Âu_·w
;

419 
__uöt8_t
 
	g__Âu_r§v1
;

420 
__uöt16_t
 
	g__Âu_f›
;

423 
__uöt32_t
 
	g__Âu_ù
;

424 
__uöt16_t
 
	g__Âu_cs
;

426 
__uöt16_t
 
	g__Âu_r§v2
;

429 
__uöt32_t
 
	g__Âu_dp
;

430 
__uöt16_t
 
	g__Âu_ds
;

432 
__uöt16_t
 
	g__Âu_r§v3
;

433 
__uöt32_t
 
	g__Âu_mxc§
;

434 
__uöt32_t
 
	g__Âu_mxc§mask
;

435 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

436 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

437 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

438 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

439 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

440 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

441 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

442 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

443 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

444 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

445 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

446 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

447 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

448 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

449 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

450 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

451 
_STRUCT_XMM_REG
 
	g__Âu_xmm8
;

452 
_STRUCT_XMM_REG
 
	g__Âu_xmm9
;

453 
_STRUCT_XMM_REG
 
	g__Âu_xmm10
;

454 
_STRUCT_XMM_REG
 
	g__Âu_xmm11
;

455 
_STRUCT_XMM_REG
 
	g__Âu_xmm12
;

456 
_STRUCT_XMM_REG
 
	g__Âu_xmm13
;

457 
_STRUCT_XMM_REG
 
	g__Âu_xmm14
;

458 
_STRUCT_XMM_REG
 
	g__Âu_xmm15
;

459 
	g__Âu_r§v4
[6*16];

460 
	g__Âu_ª£rved1
;

463 
	#_STRUCT_X86_FLOAT_STATE64
 
x86_Êﬂt_°©e64


	)

464 
	g_STRUCT_X86_FLOAT_STATE64


466 
	gÂu_ª£rved
[2];

467 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

468 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

469 
__uöt8_t
 
	gÂu_·w
;

470 
__uöt8_t
 
	gÂu_r§v1
;

471 
__uöt16_t
 
	gÂu_f›
;

474 
__uöt32_t
 
	gÂu_ù
;

475 
__uöt16_t
 
	gÂu_cs
;

477 
__uöt16_t
 
	gÂu_r§v2
;

480 
__uöt32_t
 
	gÂu_dp
;

481 
__uöt16_t
 
	gÂu_ds
;

483 
__uöt16_t
 
	gÂu_r§v3
;

484 
__uöt32_t
 
	gÂu_mxc§
;

485 
__uöt32_t
 
	gÂu_mxc§mask
;

486 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

487 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

488 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

489 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

490 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

491 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

492 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

493 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

494 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

495 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

496 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

497 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

498 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

499 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

500 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

501 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

502 
_STRUCT_XMM_REG
 
	gÂu_xmm8
;

503 
_STRUCT_XMM_REG
 
	gÂu_xmm9
;

504 
_STRUCT_XMM_REG
 
	gÂu_xmm10
;

505 
_STRUCT_XMM_REG
 
	gÂu_xmm11
;

506 
_STRUCT_XMM_REG
 
	gÂu_xmm12
;

507 
_STRUCT_XMM_REG
 
	gÂu_xmm13
;

508 
_STRUCT_XMM_REG
 
	gÂu_xmm14
;

509 
_STRUCT_XMM_REG
 
	gÂu_xmm15
;

510 
	gÂu_r§v4
[6*16];

511 
	gÂu_ª£rved1
;

515 #i‡
__DARWIN_UNIX03


516 
	#_STRUCT_X86_EXCEPTION_STATE64
 
__d¨wö_x86_ex˚±i⁄_°©e64


	)

517 
	g_STRUCT_X86_EXCEPTION_STATE64


519 
	g__å≠no
;

520 
	g__îr
;

521 
__uöt64_t
 
	g__Áu…vaddr
;

524 
	#_STRUCT_X86_EXCEPTION_STATE64
 
x86_ex˚±i⁄_°©e64


	)

525 
	g_STRUCT_X86_EXCEPTION_STATE64


527 
	gå≠no
;

528 
	gîr
;

529 
__uöt64_t
 
	gÁu…vaddr
;

533 #i‡
__DARWIN_UNIX03


534 
	#_STRUCT_X86_DEBUG_STATE64
 
__d¨wö_x86_debug_°©e64


	)

535 
	g_STRUCT_X86_DEBUG_STATE64


537 
__uöt64_t
 
	g__dr0
;

538 
__uöt64_t
 
	g__dr1
;

539 
__uöt64_t
 
	g__dr2
;

540 
__uöt64_t
 
	g__dr3
;

541 
__uöt64_t
 
	g__dr4
;

542 
__uöt64_t
 
	g__dr5
;

543 
__uöt64_t
 
	g__dr6
;

544 
__uöt64_t
 
	g__dr7
;

547 
	#_STRUCT_X86_DEBUG_STATE64
 
x86_debug_°©e64


	)

548 
	g_STRUCT_X86_DEBUG_STATE64


550 
__uöt64_t
 
	gdr0
;

551 
__uöt64_t
 
	gdr1
;

552 
__uöt64_t
 
	gdr2
;

553 
__uöt64_t
 
	gdr3
;

554 
__uöt64_t
 
	gdr4
;

555 
__uöt64_t
 
	gdr5
;

556 
__uöt64_t
 
	gdr6
;

557 
__uöt64_t
 
	gdr7
;

	@/usr/include/mach/ppc/_structs.h

32 #i‚def 
_MACH_PPC__STRUCTS_H_


33 
	#_MACH_PPC__STRUCTS_H_


	)

35 
	~<sys/cdefs.h
>

43 #i‡
__DARWIN_UNIX03


44 
	#_STRUCT_PPC_THREAD_STATE
 
__d¨wö_µc_thªad_°©e


	)

45 
	g_STRUCT_PPC_THREAD_STATE


47 
	g__§r0
;

48 
	g__§r1
;

49 
	g__r0
;

50 
	g__r1
;

51 
	g__r2
;

52 
	g__r3
;

53 
	g__r4
;

54 
	g__r5
;

55 
	g__r6
;

56 
	g__r7
;

57 
	g__r8
;

58 
	g__r9
;

59 
	g__r10
;

60 
	g__r11
;

61 
	g__r12
;

62 
	g__r13
;

63 
	g__r14
;

64 
	g__r15
;

65 
	g__r16
;

66 
	g__r17
;

67 
	g__r18
;

68 
	g__r19
;

69 
	g__r20
;

70 
	g__r21
;

71 
	g__r22
;

72 
	g__r23
;

73 
	g__r24
;

74 
	g__r25
;

75 
	g__r26
;

76 
	g__r27
;

77 
	g__r28
;

78 
	g__r29
;

79 
	g__r30
;

80 
	g__r31
;

82 
	g__¸
;

83 
	g__xî
;

84 
	g__Ã
;

85 
	g__˘r
;

86 
	g__mq
;

88 
	g__vrßve
;

91 
	#_STRUCT_PPC_THREAD_STATE
 
µc_thªad_°©e


	)

92 
	g_STRUCT_PPC_THREAD_STATE


94 
	g§r0
;

95 
	g§r1
;

96 
	gr0
;

97 
	gr1
;

98 
	gr2
;

99 
	gr3
;

100 
	gr4
;

101 
	gr5
;

102 
	gr6
;

103 
	gr7
;

104 
	gr8
;

105 
	gr9
;

106 
	gr10
;

107 
	gr11
;

108 
	gr12
;

109 
	gr13
;

110 
	gr14
;

111 
	gr15
;

112 
	gr16
;

113 
	gr17
;

114 
	gr18
;

115 
	gr19
;

116 
	gr20
;

117 
	gr21
;

118 
	gr22
;

119 
	gr23
;

120 
	gr24
;

121 
	gr25
;

122 
	gr26
;

123 
	gr27
;

124 
	gr28
;

125 
	gr29
;

126 
	gr30
;

127 
	gr31
;

129 
	g¸
;

130 
	gxî
;

131 
	gÃ
;

132 
	g˘r
;

133 
	gmq
;

135 
	gvrßve
;

139 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

141 #¥agm®
∑ck
(4)

143 #i‡
__DARWIN_UNIX03


144 
	#_STRUCT_PPC_THREAD_STATE64
 
__d¨wö_µc_thªad_°©e64


	)

145 
	g_STRUCT_PPC_THREAD_STATE64


147 
	g__§r0
;

148 
	g__§r1
;

149 
	g__r0
;

150 
	g__r1
;

151 
	g__r2
;

152 
	g__r3
;

153 
	g__r4
;

154 
	g__r5
;

155 
	g__r6
;

156 
	g__r7
;

157 
	g__r8
;

158 
	g__r9
;

159 
	g__r10
;

160 
	g__r11
;

161 
	g__r12
;

162 
	g__r13
;

163 
	g__r14
;

164 
	g__r15
;

165 
	g__r16
;

166 
	g__r17
;

167 
	g__r18
;

168 
	g__r19
;

169 
	g__r20
;

170 
	g__r21
;

171 
	g__r22
;

172 
	g__r23
;

173 
	g__r24
;

174 
	g__r25
;

175 
	g__r26
;

176 
	g__r27
;

177 
	g__r28
;

178 
	g__r29
;

179 
	g__r30
;

180 
	g__r31
;

182 
	g__¸
;

183 
	g__xî
;

184 
	g__Ã
;

185 
	g__˘r
;

187 
	g__vrßve
;

190 
	#_STRUCT_PPC_THREAD_STATE64
 
µc_thªad_°©e64


	)

191 
	g_STRUCT_PPC_THREAD_STATE64


193 
	g§r0
;

194 
	g§r1
;

195 
	gr0
;

196 
	gr1
;

197 
	gr2
;

198 
	gr3
;

199 
	gr4
;

200 
	gr5
;

201 
	gr6
;

202 
	gr7
;

203 
	gr8
;

204 
	gr9
;

205 
	gr10
;

206 
	gr11
;

207 
	gr12
;

208 
	gr13
;

209 
	gr14
;

210 
	gr15
;

211 
	gr16
;

212 
	gr17
;

213 
	gr18
;

214 
	gr19
;

215 
	gr20
;

216 
	gr21
;

217 
	gr22
;

218 
	gr23
;

219 
	gr24
;

220 
	gr25
;

221 
	gr26
;

222 
	gr27
;

223 
	gr28
;

224 
	gr29
;

225 
	gr30
;

226 
	gr31
;

228 
	g¸
;

229 
	gxî
;

230 
	gÃ
;

231 
	g˘r
;

233 
	gvrßve
;

237 #¥agm®
∑ck
()

243 #i‡
__DARWIN_UNIX03


244 
	#_STRUCT_PPC_FLOAT_STATE
 
__d¨wö_µc_Êﬂt_°©e


	)

245 
	g_STRUCT_PPC_FLOAT_STATE


247 
	g__Âªgs
[32];

249 
	g__Âs¸_∑d
;

250 
	g__Âs¸
;

253 
	#_STRUCT_PPC_FLOAT_STATE
 
µc_Êﬂt_°©e


	)

254 
	g_STRUCT_PPC_FLOAT_STATE


256 
	gÂªgs
[32];

258 
	gÂs¸_∑d
;

259 
	gÂs¸
;

263 #¥agm®
∑ck
(4)

265 #i‡
__DARWIN_UNIX03


266 
	#_STRUCT_PPC_VECTOR_STATE
 
__d¨wö_µc_ve˘‹_°©e


	)

267 
	g_STRUCT_PPC_VECTOR_STATE


269 #i‡
deföed
(
__LP64__
)

270 
	g__ßve_vr
[32][4];

271 
	g__ßve_vs¸
[4];

273 
	g__ßve_vr
[32][4];

274 
	g__ßve_vs¸
[4];

276 
	g__ßve_∑d5
[4];

277 
	g__ßve_vrvÆid
;

278 
	g__ßve_∑d6
[7];

281 
	#_STRUCT_PPC_VECTOR_STATE
 
µc_ve˘‹_°©e


	)

282 
	g_STRUCT_PPC_VECTOR_STATE


284 #i‡
deföed
(
__LP64__
)

285 
	gßve_vr
[32][4];

286 
	gßve_vs¸
[4];

288 
	gßve_vr
[32][4];

289 
	gßve_vs¸
[4];

291 
	gßve_∑d5
[4];

292 
	gßve_vrvÆid
;

293 
	gßve_∑d6
[7];

297 #¥agm®
∑ck
()

316 #¥agm®
∑ck
(4)

318 #i‡
__DARWIN_UNIX03


319 
	#_STRUCT_PPC_EXCEPTION_STATE
 
__d¨wö_µc_ex˚±i⁄_°©e


	)

320 
	g_STRUCT_PPC_EXCEPTION_STATE


322 #i‡
deföed
(
__LP64__
)

323 
	g__d¨
;

324 
	g__dsi§
;

325 
	g__ex˚±i⁄
;

326 
	g__∑d0
;

327 
	g__∑d1
[4];

329 
	g__d¨
;

330 
	g__dsi§
;

331 
	g__ex˚±i⁄
;

332 
	g__∑d0
;

333 
	g__∑d1
[4];

337 
	#_STRUCT_PPC_EXCEPTION_STATE
 
µc_ex˚±i⁄_°©e


	)

338 
	g_STRUCT_PPC_EXCEPTION_STATE


340 #i‡
deföed
(
__LP64__
)

341 
	gd¨
;

342 
	gdsi§
;

343 
	gex˚±i⁄
;

344 
	g∑d0
;

345 
	g∑d1
[4];

347 
	gd¨
;

348 
	gdsi§
;

349 
	gex˚±i⁄
;

350 
	g∑d0
;

351 
	g∑d1
[4];

356 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

357 #i‡
__DARWIN_UNIX03


358 
	#_STRUCT_PPC_EXCEPTION_STATE64
 
__d¨wö_µc_ex˚±i⁄_°©e64


	)

359 
	g_STRUCT_PPC_EXCEPTION_STATE64


361 
	g__d¨
;

362 #i‡
deföed
(
__LP64__
)

363 
	g__dsi§
;

364 
	g__ex˚±i⁄
;

365 
	g__∑d1
[4];

367 
	g__dsi§
;

368 
	g__ex˚±i⁄
;

369 
	g__∑d1
[4];

373 
	#_STRUCT_PPC_EXCEPTION_STATE64
 
µc_ex˚±i⁄_°©e64


	)

374 
	g_STRUCT_PPC_EXCEPTION_STATE64


376 
	gd¨
;

377 #i‡
deföed
(
__LP64__
)

378 
	gdsi§
;

379 
	gex˚±i⁄
;

380 
	g∑d1
[4];

382 
	gdsi§
;

383 
	gex˚±i⁄
;

384 
	g∑d1
[4];

390 #¥agm®
∑ck
()

	@/usr/include/ppc/signal.h

32 #i‚def 
_PPC_SIGNAL_H_


33 
	#_PPC_SIGNAL_H_
 1

	)

35 
	~<sys/cdefs.h
>

37 #i‚de‡
_ANSI_SOURCE


39 
	tsig_©omic_t
;

41 
	~<sys/≠∂ópi›ts.h
>

43 #ifde‡
__APPLE_API_OBSOLETE


45 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

47 
	#__√ed_°ru˘_sigc⁄ãxt


	)

48 
	#__√ed_°ru˘_sigc⁄ãxt32


	)

49 
	#__√ed_°ru˘_sigc⁄ãxt64


	)

50 
	~<µc/_°ru˘s.h
>

55 
	#SV_SAVE_REGS
 0x1000

	)

69 
	mREGS_SAVED_NONE
,

70 
	mREGS_SAVED_CALLER
,

73 
	mREGS_SAVED_ALL


74 } 
	tªgs_ßved_t
;

	@/usr/include/libkern/i386/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDERI386_H


30 
	#_OS__OSBYTEORDERI386_H


	)

32 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

33 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

34 
	#__DARWIN_OS_INLINE
 
ölöe


	)

35 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

36 
	#__DARWIN_OS_INLINE
 
ölöe


	)

38 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

44 
__DARWIN_OS_INLINE


45 
__uöt16_t


46 
	$_OSSw≠I¡16
(

47 
__uöt16_t
 
_d©a


50  ((
_d©a
 << 8) | (_data >> 8));

51 
	}
}

53 
__DARWIN_OS_INLINE


54 
__uöt32_t


55 
	$_OSSw≠I¡32
(

56 
__uöt32_t
 
_d©a


59 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

60  
_d©a
;

61 
	}
}

63 #i‡
deföed
(
__i386__
)

64 
__DARWIN_OS_INLINE


65 
__uöt64_t


66 
	$_OSSw≠I¡64
(

67 
__uöt64_t
 
_d©a


70 
	`__asm__
 ("bswap %%eax\n\t"

73 : "+A" (
_d©a
));

74  
_d©a
;

75 
	}
}

76 #ñi‡
deföed
(
__x86_64__
)

77 
__DARWIN_OS_INLINE


78 
__uöt64_t


79 
	$_OSSw≠I¡64
(

80 
__uöt64_t
 
_d©a


83 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

84  
_d©a
;

85 
	}
}

87 #îr‹ 
Unknown
 
¨chôe˘uª


	@
1
.
1
/usr/include
94
3061
main.c
mapReduce.c
mapReduce.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/limits.h
/usr/include/mpi.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/unistd.h
/usr/include/_types.h
/usr/include/_xlocale.h
/usr/include/alloca.h
/usr/include/available.h
/usr/include/machine/endian.h
/usr/include/machine/limits.h
/usr/include/machine/types.h
/usr/include/openmpi/ompi/mpi/cxx/mpicxx.h
/usr/include/secure/_stdio.h
/usr/include/secure/_string.h
/usr/include/stddef.h
/usr/include/sys/_structs.h
/usr/include/sys/_types.h
/usr/include/sys/appleapiopts.h
/usr/include/sys/cdefs.h
/usr/include/sys/dirent.h
/usr/include/sys/errno.h
/usr/include/sys/select.h
/usr/include/sys/syslimits.h
/usr/include/sys/unistd.h
/usr/include/sys/wait.h
/usr/include/xlocale/_stdio.h
/usr/include/xlocale/_stdlib.h
/usr/include/xlocale/_string.h
/usr/include/i386/endian.h
/usr/include/i386/limits.h
/usr/include/i386/types.h
/usr/include/machine/_structs.h
/usr/include/machine/_types.h
/usr/include/openmpi/ompi/mpi/cxx/comm.h
/usr/include/openmpi/ompi/mpi/cxx/comm_inln.h
/usr/include/openmpi/ompi/mpi/cxx/constants.h
/usr/include/openmpi/ompi/mpi/cxx/datatype.h
/usr/include/openmpi/ompi/mpi/cxx/datatype_inln.h
/usr/include/openmpi/ompi/mpi/cxx/errhandler.h
/usr/include/openmpi/ompi/mpi/cxx/errhandler_inln.h
/usr/include/openmpi/ompi/mpi/cxx/exception.h
/usr/include/openmpi/ompi/mpi/cxx/file.h
/usr/include/openmpi/ompi/mpi/cxx/file_inln.h
/usr/include/openmpi/ompi/mpi/cxx/functions.h
/usr/include/openmpi/ompi/mpi/cxx/functions_inln.h
/usr/include/openmpi/ompi/mpi/cxx/group.h
/usr/include/openmpi/ompi/mpi/cxx/group_inln.h
/usr/include/openmpi/ompi/mpi/cxx/info.h
/usr/include/openmpi/ompi/mpi/cxx/info_inln.h
/usr/include/openmpi/ompi/mpi/cxx/intercomm.h
/usr/include/openmpi/ompi/mpi/cxx/intercomm_inln.h
/usr/include/openmpi/ompi/mpi/cxx/intracomm.h
/usr/include/openmpi/ompi/mpi/cxx/intracomm_inln.h
/usr/include/openmpi/ompi/mpi/cxx/op.h
/usr/include/openmpi/ompi/mpi/cxx/op_inln.h
/usr/include/openmpi/ompi/mpi/cxx/request.h
/usr/include/openmpi/ompi/mpi/cxx/request_inln.h
/usr/include/openmpi/ompi/mpi/cxx/status.h
/usr/include/openmpi/ompi/mpi/cxx/status_inln.h
/usr/include/openmpi/ompi/mpi/cxx/topology.h
/usr/include/openmpi/ompi/mpi/cxx/topology_inln.h
/usr/include/openmpi/ompi/mpi/cxx/win.h
/usr/include/openmpi/ompi/mpi/cxx/win_inln.h
/usr/include/ppc/endian.h
/usr/include/ppc/limits.h
/usr/include/ppc/types.h
/usr/include/secure/_common.h
/usr/include/stdarg.h
/usr/include/sys/_select.h
/usr/include/sys/resource.h
/usr/include/sys/signal.h
/usr/include/i386/_limits.h
/usr/include/i386/_structs.h
/usr/include/i386/_types.h
/usr/include/machine/signal.h
/usr/include/ppc/_limits.h
/usr/include/ppc/_structs.h
/usr/include/ppc/_types.h
/usr/include/sys/_endian.h
/usr/include/i386/signal.h
/usr/include/libkern/_OSByteOrder.h
/usr/include/mach/i386/_structs.h
/usr/include/mach/ppc/_structs.h
/usr/include/ppc/signal.h
/usr/include/libkern/i386/_OSByteOrder.h
